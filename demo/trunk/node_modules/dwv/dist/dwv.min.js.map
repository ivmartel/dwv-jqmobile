{"version":3,"file":"dwv.min.js","mappings":"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AAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1skCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9lCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAMrpCO,eAAgB,CACdixmCQ,WAAY,CACVV,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACpnCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC3lCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAA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","sources":["webpack://dwv/webpack/universalModuleDefinition","webpack://dwv/external umd {\"root\":\"JSZip\",\"commonjs\":\"jszip\",\"commonjs2\":\"jszip\",\"amd\":\"jszip\"}","webpack://dwv/external umd {\"root\":\"Konva\",\"commonjs\":\"konva\",\"commonjs2\":\"konva\",\"amd\":\"konva\"}","webpack://dwv/external umd {\"root\":\"MagicWand\",\"commonjs\":\"magic-wand-tool\",\"commonjs2\":\"magic-wand-tool\",\"amd\":\"konmagic-wand-tool\"}","webpack://dwv/webpack/bootstrap","webpack://dwv/webpack/runtime/compat get default export","webpack://dwv/webpack/runtime/define property getters","webpack://dwv/webpack/runtime/hasOwnProperty shorthand","webpack://dwv/webpack/runtime/make namespace object","webpack://dwv/./src/math/index.js","webpack://dwv/./src/image/rsi.js","webpack://dwv/./src/image/rescaleLut.js","webpack://dwv/./src/image/windowLevel.js","webpack://dwv/./src/image/windowLut.js","webpack://dwv/./src/image/luts.js","webpack://dwv/./src/utils/logger.js","webpack://dwv/./src/utils/colour.js","webpack://dwv/./src/math/vector.js","webpack://dwv/./src/math/matrix.js","webpack://dwv/./src/math/point.js","webpack://dwv/./src/dicom/dictionary.js","webpack://dwv/./src/dicom/dicomTag.js","webpack://dwv/./src/dicom/dataReader.js","webpack://dwv/./src/utils/string.js","webpack://dwv/./src/utils/array.js","webpack://dwv/./src/dicom/dicomParser.js","webpack://dwv/./src/utils/listen.js","webpack://dwv/./src/image/size.js","webpack://dwv/./src/image/spacing.js","webpack://dwv/./src/image/geometry.js","webpack://dwv/./src/image/image.js","webpack://dwv/./src/image/iterator.js","webpack://dwv/./src/image/view.js","webpack://dwv/./src/image/viewMonochrome.js","webpack://dwv/./src/image/viewPaletteColor.js","webpack://dwv/./src/image/viewRgb.js","webpack://dwv/./src/image/viewYbrFull.js","webpack://dwv/./src/image/viewFactory.js","webpack://dwv/./src/image/planeHelper.js","webpack://dwv/./src/gui/layerGroup.js","webpack://dwv/./src/image/maskSegmentHelper.js","webpack://dwv/./src/app/viewController.js","webpack://dwv/./src/gui/generic.js","webpack://dwv/./src/gui/viewLayer.js","webpack://dwv/./src/gui/style.js","webpack://dwv/./src/tools/drawCommands.js","webpack://dwv/./src/app/drawController.js","webpack://dwv/./src/gui/drawLayer.js","webpack://dwv/./src/gui/stage.js","webpack://dwv/./src/io/state.js","webpack://dwv/./src/utils/uri.js","webpack://dwv/./src/tools/undo.js","webpack://dwv/./src/app/toolboxController.js","webpack://dwv/./src/utils/progress.js","webpack://dwv/./src/dicom/dicomElementsWrapper.js","webpack://dwv/./src/io/urlsLoader.js","webpack://dwv/./src/image/imageFactory.js","webpack://dwv/./src/image/maskFactory.js","webpack://dwv/./src/utils/thread.js","webpack://dwv/./src/image/decoder.js","webpack://dwv/./src/image/dicomBufferToView.js","webpack://dwv/./src/io/dicomDataLoader.js","webpack://dwv/./src/io/jsonTextLoader.js","webpack://dwv/./src/io/memoryLoader.js","webpack://dwv/./src/io/multipartLoader.js","webpack://dwv/./src/image/domReader.js","webpack://dwv/./src/io/rawImageLoader.js","webpack://dwv/./src/io/rawVideoLoader.js","webpack://dwv/./src/io/zipLoader.js","webpack://dwv/./src/io/loaderList.js","webpack://dwv/./src/io/filesLoader.js","webpack://dwv/./src/app/loadController.js","webpack://dwv/./src/app/dataController.js","webpack://dwv/./src/utils/operator.js","webpack://dwv/./src/tools/scrollWheel.js","webpack://dwv/./src/tools/windowLevel.js","webpack://dwv/./src/tools/scroll.js","webpack://dwv/./src/utils/i18n.js","webpack://dwv/./src/math/line.js","webpack://dwv/./src/tools/zoomPan.js","webpack://dwv/./src/tools/opacity.js","webpack://dwv/./src/math/stats.js","webpack://dwv/./src/tools/editor.js","webpack://dwv/./src/tools/draw.js","webpack://dwv/./src/math/roi.js","webpack://dwv/./src/tools/roi.js","webpack://dwv/./src/tools/floodfill.js","webpack://dwv/./src/math/path.js","webpack://dwv/./src/math/bucketQueue.js","webpack://dwv/./src/math/scissors.js","webpack://dwv/./src/tools/livewire.js","webpack://dwv/./src/math/circle.js","webpack://dwv/./src/tools/circle.js","webpack://dwv/./src/math/ellipse.js","webpack://dwv/./src/tools/ellipse.js","webpack://dwv/./src/math/rectangle.js","webpack://dwv/./src/tools/rectangle.js","webpack://dwv/./src/image/filter.js","webpack://dwv/./src/tools/filter.js","webpack://dwv/./src/tools/index.js","webpack://dwv/./src/tools/arrow.js","webpack://dwv/./src/tools/freeHand.js","webpack://dwv/./src/tools/protractor.js","webpack://dwv/./src/tools/ruler.js","webpack://dwv/./src/app/application.js","webpack://dwv/./src/dicom/dataWriter.js","webpack://dwv/./src/dicom/dicomWriter.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"konva\"), require(\"jszip\"), require(\"magic-wand-tool\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"konva\", \"jszip\", \"konmagic-wand-tool\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dwv\"] = factory(require(\"konva\"), require(\"jszip\"), require(\"magic-wand-tool\"));\n\telse\n\t\troot[\"dwv\"] = factory(root[\"Konva\"], root[\"JSZip\"], root[\"MagicWand\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__436__, __WEBPACK_EXTERNAL_MODULE__626__, __WEBPACK_EXTERNAL_MODULE__812__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__626__;","module.exports = __WEBPACK_EXTERNAL_MODULE__436__;","module.exports = __WEBPACK_EXTERNAL_MODULE__812__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Immutable index.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Index {\n\n  /**\n   * Index values.\n   *\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * @param {Array} values The index values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create index with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create index with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val);\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create index with non number values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the index value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number|undefined} The value or undefined if not in range.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the Index.\n   *\n   * @returns {string} The Index as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {Array} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if the input index can be compared to this one.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {boolean} True if both indices are comparable.\n   */\n  canCompare(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    if (this.length() !== rhs.length()) {\n      return false;\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check for Index equality.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {boolean} True if both indices are equal.\n   */\n  equals(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return false;\n    }\n    // check values\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Compare indices and return different dimensions.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {Array} The list of different dimensions.\n   */\n  compare(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // check values\n    const diffDims = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        diffDims.push(i);\n      }\n    }\n    return diffDims;\n  }\n\n  /**\n   * Add another index to this one.\n   *\n   * @param {Index} rhs The index to add.\n   * @returns {Index} The index representing the sum of both indices.\n   */\n  add(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // add values\n    const values = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      values.push(this.get(i) + rhs.get(i));\n    }\n    // seems ok!\n    return new Index(values);\n  }\n\n  /**\n   * Get the current index with a new 2D base.\n   *\n   * @param {number} i The new 0 index.\n   * @param {number} j The new 1 index.\n   * @returns {Index} The new index.\n   */\n  getWithNew2D(i, j) {\n    const values = [i, j];\n    for (let l = 2, lenl = this.length(); l < lenl; ++l) {\n      values.push(this.get(l));\n    }\n    return new Index(values);\n  }\n\n  /**\n   * Get a string id from the index values in the form of: '#0-1_#1-2'.\n   *\n   * @param {Array} [dims] Optional list of dimensions to use.\n   * @returns {string} The string id.\n   */\n  toStringId(dims) {\n    if (typeof dims === 'undefined') {\n      dims = [];\n      for (let j = 0; j < this.length(); ++j) {\n        dims.push(j);\n      }\n    }\n    for (let ii = 0; ii < dims.length; ++ii) {\n      if (dims[ii] >= this.length()) {\n        throw new Error('Non valid dimension for toStringId.');\n      }\n    }\n    let res = '';\n    for (let i = 0; i < dims.length; ++i) {\n      if (i !== 0) {\n        res += '_';\n      }\n      res += '#' + dims[i] + '-' + this.get(dims[i]);\n    }\n    return res;\n  }\n\n} // Index class\n\n/**\n * Get an index with values set to 0 and the input size.\n *\n * @param {number} size The size of the index.\n * @returns {Index} The zero index.\n */\nexport function getZeroIndex(size) {\n  const values = new Array(size);\n  values.fill(0);\n  return new Index(values);\n}\n\n/**\n * Get an array sort callback.\n * f(a,b) > 0 -> b,a\n * f(a,b) < 0 -> a,b\n * f(a,b) = 0 -> original order\n *\n * @param {number} direction The direction to use to compare indices.\n * @returns {Function} A function that compares two Index.\n */\nexport function getIndexCompareFunction(direction) {\n  return function (a, b) {\n    return a.get(direction) - b.get(direction);\n  };\n}\n\n/**\n * Get an index from an id string in the form of: '#0-1_#1-2'\n * (result of index.toStringId).\n *\n * @param {string} inputStr The input string.\n * @returns {Index} The corresponding index.\n */\nexport function getIndexFromStringId(inputStr) {\n  // split ids\n  const strIds = inputStr.split('_');\n  // get the size of the index\n  let pointLength = 0;\n  let dim;\n  for (let i = 0; i < strIds.length; ++i) {\n    dim = parseInt(strIds[i].substring(1, 2), 10);\n    if (dim > pointLength) {\n      pointLength = dim;\n    }\n  }\n  if (pointLength === 0) {\n    throw new Error('No dimension found in point stringId');\n  }\n  // default values\n  const values = new Array(pointLength);\n  values.fill(0);\n  // get other values from the input string\n  for (let j = 0; j < strIds.length; ++j) {\n    dim = parseInt(strIds[j].substring(1, 3), 10);\n    const value = parseInt(strIds[j].substring(3), 10);\n    values[dim] = value;\n  }\n  return new Index(values);\n}\n","/**\n * Rescale Slope and Intercept\n */\nexport class RescaleSlopeAndIntercept {\n\n  /**\n   * The slope.\n   *\n   * @type {number}\n   */\n  #slope;\n\n  /**\n   * The intercept.\n   *\n   * @type {number}\n   */\n  #intercept;\n\n  /**\n   * @param {number} slope The slope of the RSI.\n   * @param {number} intercept The intercept of the RSI.\n   */\n  constructor(slope, intercept) {\n    /*// Check the rescale slope.\n      if(typeof(slope) === 'undefined') {\n          slope = 1;\n      }\n      // Check the rescale intercept.\n      if(typeof(intercept) === 'undefined') {\n          intercept = 0;\n      }*/\n    this.#slope = slope;\n    this.#intercept = intercept;\n  }\n\n  /**\n   * Get the slope of the RSI.\n   *\n   * @returns {number} The slope of the RSI.\n   */\n  getSlope() {\n    return this.#slope;\n  }\n\n  /**\n   * Get the intercept of the RSI.\n   *\n   * @returns {number} The intercept of the RSI.\n   */\n  getIntercept() {\n    return this.#intercept;\n  }\n\n  /**\n   * Apply the RSI on an input value.\n   *\n   * @param {number} value The input value.\n   * @returns {number} The value to rescale.\n   */\n  apply(value) {\n    return value * this.#slope + this.#intercept;\n  }\n\n  /**\n   * Check for RSI equality.\n   *\n   * @param {RescaleSlopeAndIntercept} rhs The other RSI to compare to.\n   * @returns {boolean} True if both RSI are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n          this.getSlope() === rhs.getSlope() &&\n          this.getIntercept() === rhs.getIntercept();\n  }\n\n  /**\n   * Get a string representation of the RSI.\n   *\n   * @returns {string} The RSI as a string.\n   */\n  toString() {\n    return (this.getSlope() + ', ' + this.getIntercept());\n  }\n\n  /**\n   * Is this RSI an ID RSI.\n   *\n   * @returns {boolean} True if the RSI has a slope of 1 and no intercept.\n   */\n  isID() {\n    return (this.getSlope() === 1 && this.getIntercept() === 0);\n  }\n\n} // class RescaleSlopeAndIntercept\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {RescaleSlopeAndIntercept} from './rsi';\n/* eslint-enable no-unused-vars */\n\n/**\n * Rescale LUT class.\n * Typically converts from integer to float.\n */\nexport class RescaleLut {\n\n  /**\n   * The rescale slope.\n   *\n   * @type {RescaleSlopeAndIntercept}\n   */\n  #rsi;\n\n  /**\n   * The internal array.\n   *\n   * @type {Float32Array}\n   */\n  #lut = null;\n\n  /**\n   * Flag to know if the lut is ready or not.\n   *\n   * @type {boolean}\n   */\n  #isReady = false;\n\n  /**\n   * The size of the LUT array.\n   *\n   * @type {number}\n   */\n  #length;\n\n  /**\n   * @param {RescaleSlopeAndIntercept} rsi The rescale slope and intercept.\n   * @param {number} bitsStored The number of bits used to store the data.\n   */\n  constructor(rsi, bitsStored) {\n    this.#rsi = rsi;\n    this.#length = Math.pow(2, bitsStored);\n  }\n\n  /**\n   * Get the Rescale Slope and Intercept (RSI).\n   *\n   * @returns {RescaleSlopeAndIntercept} The rescale slope and intercept object.\n   */\n  getRSI() {\n    return this.#rsi;\n  }\n\n  /**\n   * Is the lut ready to use or not? If not, the user must\n   * call 'initialise'.\n   *\n   * @returns {boolean} True if the lut is ready to use.\n   */\n  isReady() {\n    return this.#isReady;\n  }\n\n  /**\n   * Initialise the LUT.\n   */\n  initialise() {\n    // check if already initialised\n    if (this.#isReady) {\n      return;\n    }\n    // create lut and fill it\n    this.#lut = new Float32Array(this.#length);\n    for (let i = 0; i < this.#length; ++i) {\n      this.#lut[i] = this.#rsi.apply(i);\n    }\n    // update ready flag\n    this.#isReady = true;\n  }\n\n  /**\n   * Get the length of the LUT array.\n   *\n   * @returns {number} The length of the LUT array.\n   */\n  getLength() {\n    return this.#length;\n  }\n\n  /**\n   * Get the value of the LUT at the given offset.\n   *\n   * @param {number} offset The input offset in [0,2^bitsStored] range.\n   * @returns {number} The float32 value of the LUT at the given offset.\n   */\n  getValue(offset) {\n    return this.#lut[offset];\n  }\n\n} // class RescaleLut\n","/**\n * Minimum window width value.\n *\n * @see http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.11.html#sect_C.11.2.1.2\n */\nconst MinWindowWidth = 1;\n\n/**\n * List of default window level presets.\n *\n * @type {Object.<string, Object.<string, {center: number, width: number}>>}\n */\nexport const defaultPresets = {\n  CT: {\n    mediastinum: {center: 40, width: 400},\n    lung: {center: -500, width: 1500},\n    bone: {center: 500, width: 2000},\n    brain: {center: 40, width: 80},\n    head: {center: 90, width: 350}\n  }\n};\n\n/**\n * Validate an input window width.\n *\n * @param {number} value The value to test.\n * @returns {number} A valid window width.\n */\nexport function validateWindowWidth(value) {\n  return value < MinWindowWidth ? MinWindowWidth : value;\n}\n\n/**\n * WindowLevel class.\n * <br>Pseudo-code:\n * <pre>\n *  if (x &lt;= c - 0.5 - (w-1)/2), then y = ymin\n *  else if (x > c - 0.5 + (w-1)/2), then y = ymax,\n *  else y = ((x - (c - 0.5)) / (w-1) + 0.5) * (ymax - ymin) + ymin\n * </pre>\n *\n * @see DICOM doc for [Window Center and Window Width]{@link http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.11.html#sect_C.11.2.1.2}\n */\nexport class WindowLevel {\n\n  /**\n   * The center.\n   *\n   * @type {number}\n   */\n  #center;\n\n  /**\n   * The width.\n   *\n   * @type {number}\n   */\n  #width;\n\n  /**\n   * @param {number} center The window center.\n   * @param {number} width The window width.\n   */\n  constructor(center, width) {\n    // check width\n    if (width < MinWindowWidth) {\n      throw new Error('Window width shall always be greater than or equal to ' +\n        MinWindowWidth);\n    }\n    this.#center = center;\n    this.#width = width;\n\n    this.#init();\n  }\n\n  /**\n   * Signed data offset. Defaults to 0.\n   *\n   * @type {number}\n   */\n  #signedOffset = 0;\n\n  /**\n   * Output value minimum. Defaults to 0.\n   *\n   * @type {number}\n   */\n  #ymin = 0;\n\n  /**\n   * Output value maximum. Defaults to 255.\n   *\n   * @type {number}\n   */\n  #ymax = 255;\n\n  /**\n   * Input value minimum (calculated).\n   *\n   * @type {number}\n   */\n  #xmin = null;\n\n  /**\n   * Input value maximum (calculated).\n   *\n   * @type {number}\n   */\n  #xmax = null;\n\n  /**\n   * Window level equation slope (calculated).\n   *\n   * @type {number}\n   */\n  #slope = null;\n\n  /**\n   * Window level equation intercept (calculated).\n   *\n   * @type {number}\n   */\n  #inter = null;\n\n  /**\n   * Initialise members. Called at construction.\n   *\n   */\n  #init() {\n    const c = this.#center + this.#signedOffset;\n    // from the standard\n    this.#xmin = c - 0.5 - ((this.#width - 1) / 2);\n    this.#xmax = c - 0.5 + ((this.#width - 1) / 2);\n    // develop the equation:\n    // y = ( ( x - (c - 0.5) ) / (w-1) + 0.5 ) * (ymax - ymin) + ymin\n    // y = ( x / (w-1) ) * (ymax - ymin) +\n    //     ( -(c - 0.5) / (w-1) + 0.5 ) * (ymax - ymin) + ymin\n    this.#slope = (this.#ymax - this.#ymin) / (this.#width - 1);\n    this.#inter = (-(c - 0.5) / (this.#width - 1) + 0.5) *\n      (this.#ymax - this.#ymin) + this.#ymin;\n  }\n\n  /**\n   * Get the window center.\n   *\n   * @returns {number} The window center.\n   */\n  getCenter() {\n    return this.#center;\n  }\n\n  /**\n   * Get the window width.\n   *\n   * @returns {number} The window width.\n   */\n  getWidth() {\n    return this.#width;\n  }\n\n  /**\n   * Set the output value range.\n   *\n   * @param {string} min The output value minimum.\n   * @param {string} max The output value maximum.\n   */\n  setRange(min, max) {\n    this.#ymin = parseInt(min, 10);\n    this.#ymax = parseInt(max, 10);\n    // re-initialise\n    this.#init();\n  }\n\n  /**\n   * Set the signed offset.\n   *\n   * @param {number} offset The signed data offset,\n   *   typically: slope * ( size / 2).\n   */\n  setSignedOffset(offset) {\n    this.#signedOffset = offset;\n    // re-initialise\n    this.#init();\n  }\n\n  /**\n   * Apply the window level on an input value.\n   *\n   * @param {number} value The value to rescale as an integer.\n   * @returns {number} The leveled value, in the\n   *  [ymin, ymax] range (default [0,255]).\n   */\n  apply(value) {\n    if (value <= this.#xmin) {\n      return this.#ymin;\n    } else if (value > this.#xmax) {\n      return this.#ymax;\n    } else {\n      return (value * this.#slope) + this.#inter;\n    }\n  }\n\n  /**\n   * Check for window level equality.\n   *\n   * @param {WindowLevel} rhs The other window level to compare to.\n   * @returns {boolean} True if both window level are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter() === rhs.getCenter() &&\n      this.getWidth() === rhs.getWidth();\n  }\n\n  /**\n   * Get a string representation of the window level.\n   *\n   * @returns {string} The window level as a string.\n   */\n  toString() {\n    return (this.getCenter() + ', ' + this.getWidth());\n  }\n\n} // class WindowLevel\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {RescaleLut} from './rescaleLut';\nimport {WindowLevel} from './windowLevel';\n/* eslint-enable no-unused-vars */\n\n/**\n * Window LUT class.\n * Typically converts from float to integer.\n */\nexport class WindowLut {\n\n  /**\n   * The rescale LUT.\n   *\n   * @type {RescaleLut}\n   */\n  #rescaleLut;\n\n  /**\n   * Signed data flag.\n   *\n   * @type {boolean}\n   */\n  #isSigned;\n\n  /**\n   * The internal array: Uint8ClampedArray clamps between 0 and 255.\n   *\n   * @type {Uint8ClampedArray}\n   */\n  #lut = null;\n\n  /**\n   * The window level.\n   *\n   * @type {object}\n   */\n  #windowLevel = null;\n\n  /**\n   * Flag to know if the lut is ready or not.\n   *\n   * @type {boolean}\n   */\n  #isReady = false;\n\n  /**\n   * Shift for signed data.\n   *\n   * @type {number}\n   */\n  #signedShift = 0;\n\n  /**\n   * @param {RescaleLut} rescaleLut The associated rescale LUT.\n   * @param {boolean} isSigned Flag to know if the data is signed or not.\n   */\n  constructor(rescaleLut, isSigned) {\n    this.#rescaleLut = rescaleLut;\n    this.#isSigned = isSigned;\n  }\n\n  /**\n   * Get the window / level.\n   *\n   * @returns {WindowLevel} The window / level.\n   */\n  getWindowLevel() {\n    return this.#windowLevel;\n  }\n\n  /**\n   * Get the signed flag.\n   *\n   * @returns {boolean} The signed flag.\n   */\n  isSigned() {\n    return this.#isSigned;\n  }\n\n  /**\n   * Get the rescale lut.\n   *\n   * @returns {RescaleLut} The rescale lut.\n   */\n  getRescaleLut() {\n    return this.#rescaleLut;\n  }\n\n  /**\n   * Is the lut ready to use or not? If not, the user must\n   * call 'update'.\n   *\n   * @returns {boolean} True if the lut is ready to use.\n   */\n  isReady() {\n    return this.#isReady;\n  }\n\n  /**\n   * Set the window center and width.\n   *\n   * @param {WindowLevel} wl The window level.\n   */\n  setWindowLevel(wl) {\n    // store the window values\n    this.#windowLevel = wl;\n    // possible signed shift\n    this.#signedShift = 0;\n    this.#windowLevel.setSignedOffset(0);\n    if (this.#isSigned) {\n      const size = this.#rescaleLut.getLength();\n      this.#signedShift = size / 2;\n      this.#windowLevel.setSignedOffset(\n        this.#rescaleLut.getRSI().getSlope() * this.#signedShift);\n    }\n    // update ready flag\n    this.#isReady = false;\n  }\n\n  /**\n   * Update the lut if needed..\n   */\n  update() {\n    // check if we need to update\n    if (this.#isReady) {\n      return;\n    }\n\n    // check rescale lut\n    if (!this.#rescaleLut.isReady()) {\n      this.#rescaleLut.initialise();\n    }\n    // create window lut\n    const size = this.#rescaleLut.getLength();\n    if (!this.#lut) {\n      // use clamped array (polyfilled in env.js)\n      this.#lut = new Uint8ClampedArray(size);\n    }\n    // by default WindowLevel returns a value in the [0,255] range\n    // this is ok with regular Arrays and ClampedArray.\n    for (let i = 0; i < size; ++i) {\n      this.#lut[i] = this.#windowLevel.apply(this.#rescaleLut.getValue(i));\n    }\n\n    // update ready flag\n    this.#isReady = true;\n  }\n\n  /**\n   * Get the length of the LUT array.\n   *\n   * @returns {number} The length of the LUT array.\n   */\n  getLength() {\n    return this.#lut.length;\n  }\n\n  /**\n   * Get the value of the LUT at the given offset.\n   *\n   * @param {number} offset The input offset in [0,2^bitsStored] range.\n   * @returns {number} The integer value (default [0,255]) of the LUT\n   *   at the given offset.\n   */\n  getValue(offset) {\n    return this.#lut[offset + this.#signedShift];\n  }\n\n} // class WindowLut\n","/**\n * Lookup tables for image colour display.\n */\n\nconst lut_range_max = 256;\n\n/**\n * Build a LUT of size lut_range_max.\n *\n * @param {Function} func The i to lut function.\n * @returns {Array} THe LUT.\n */\nfunction buildLut(func) {\n  const lut = [];\n  for (let i = 0; i < lut_range_max; ++i) {\n    lut.push(func(i));\n  }\n  return lut;\n}\n\n/**\n * Ramp to lut_range_max minus one on the first third values.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxFirstThird(i) {\n  const val = i * 3;\n  if (val > lut_range_max - 1) {\n    return lut_range_max - 1;\n  }\n  return val;\n}\n\n/**\n * Ramp to lut_range_max minus one on the second third values.\n *  otherwise return 0 for the first third and\n *  lut_range_max minus one for the last third.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxSecondThird(i) {\n  const third = lut_range_max / 3;\n  let val = 0;\n  if (i >= third) {\n    val = (i - third) * 3;\n    if (val > lut_range_max - 1) {\n      return lut_range_max - 1;\n    }\n  }\n  return val;\n}\n\n/**\n * Ramp to lut_range_max minus one on the last third values.\n *  otherwise return 0.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxThirdThird(i) {\n  const third = lut_range_max / 3;\n  let val = 0;\n  if (i >= 2 * third) {\n    val = (i - 2 * third) * 3;\n    if (val > lut_range_max - 1) {\n      return lut_range_max - 1;\n    }\n  }\n  return val;\n}\n\n/**\n * Identity, returns i.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction id(i) {\n  return i;\n}\n\n/**\n * Returns lut_range_max minus one minus i.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction invId(i) {\n  return (lut_range_max - 1) - i;\n}\n\n/**\n * List of available lookup tables (lut).\n *\n * @type {Object<string, {red: number[], green: number[], blue: number[]}>}\n */\nexport const lut = {\n  // plain\n  plain: {\n    red: buildLut(id),\n    green: buildLut(id),\n    blue: buildLut(id)\n  },\n\n  // inverse plain\n  invPlain: {\n    red: buildLut(invId),\n    green: buildLut(invId),\n    blue: buildLut(invId)\n  },\n\n  // rainbow\n  /* eslint-disable max-len */\n  rainbow: {\n    blue: [0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255, 247, 239, 231, 223, 215, 207, 199, 191, 183, 175, 167, 159, 151, 143, 135, 127, 119, 111, 103, 95, 87, 79, 71, 63, 55, 47, 39, 31, 23, 15, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 253, 251, 249, 247, 245, 243, 241, 239, 237, 235, 233, 231, 229, 227, 225, 223, 221, 219, 217, 215, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 192, 189, 186, 183, 180, 177, 174, 171, 168, 165, 162, 159, 156, 153, 150, 147, 144, 141, 138, 135, 132, 129, 126, 123, 120, 117, 114, 111, 108, 105, 102, 99, 96, 93, 90, 87, 84, 81, 78, 75, 72, 69, 66, 63, 60, 57, 54, 51, 48, 45, 42, 39, 36, 33, 30, 27, 24, 21, 18, 15, 12, 9, 6, 3],\n    red: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n  },\n  /* eslint-enable max-len */\n\n  // hot\n  hot: {\n    red: buildLut(toMaxFirstThird),\n    green: buildLut(toMaxSecondThird),\n    blue: buildLut(toMaxThirdThird)\n  },\n\n  // hot iron\n  /* eslint-disable max-len */\n  hot_iron: {\n    red: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 255],\n    bluen  },\n  /* eslint-enable max-len */\n\n  // pet\n  /* eslint-disable max-len */\n  pet: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 126, 124, 122, 120, 118, 116, 114, 112, 110, 108, 106, 104, 102, 100, 98, 96, 94, 92, 90, 88, 86, 84, 82, 80, 78, 76, 74, 72, 70, 68, 66, 64, 63, 61, 59, 57, 55, 53, 51, 49, 47, 45, 43, 41, 39, 37, 35, 33, 31, 29, 27, 25, 23, 21, 19, 17, 15, 13, 11, 9, 7, 5, 3, 1, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 255],\n    blue: [0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 252, 248, 244, 240, 236, 232, 228, 224, 220, 216, 212, 208, 204, 200, 196, 192, 188, 184, 180, 176, 172, 168, 164, 160, 156, 152, 148, 144, 140, 136, 132, 128, 124, 120, 116, 112, 108, 104, 100, 96, 92, 88, 84, 80, 76, 72, 68, 64, 60, 56, 52, 48, 44, 40, 36, 32, 28, 24, 20, 16, 12, 8, 4, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 170, 174, 178, 182, 186, 190, 194, 198, 202, 206, 210, 214, 218, 222, 226, 230, 234, 238, 242, 246, 250, 255]\n  },\n  /* eslint-enable max-len */\n\n  // hot metal blue\n  /* eslint-disable max-len */\n  hot_metal_blue: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 26, 29, 32, 35, 38, 41, 44, 47, 50, 52, 55, 57, 59, 62, 64, 66, 69, 71, 74, 76, 78, 81, 83, 85, 88, 90, 93, 96, 99, 102, 105, 108, 111, 114, 116, 119, 122, 125, 128, 131, 134, 137, 140, 143, 146, 149, 152, 155, 158, 161, 164, 166, 169, 172, 175, 178, 181, 184, 187, 190, 194, 198, 201, 205, 209, 213, 217, 221, 224, 228, 232, 236, 240, 244, 247, 251, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 9, 11, 13, 15, 17, 19, 21, 23, 24, 26, 28, 30, 32, 34, 36, 38, 40, 41, 43, 45, 47, 49, 51, 53, 55, 56, 58, 60, 62, 64, 66, 68, 70, 72, 73, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 109, 111, 113, 115, 117, 119, 120, 122, 124, 126, 128, 130, 132, 134, 136, 137, 139, 141, 143, 145, 147, 149, 151, 152, 154, 156, 158, 160, 162, 164, 166, 168, 169, 171, 173, 175, 177, 179, 181, 183, 184, 186, 188, 190, 192, 194, 196, 198, 200, 201, 203, 205, 207, 209, 211, 213, 215, 216, 218, 220, 222, 224, 226, 228, 229, 231, 233, 235, 237, 239, 240, 242, 244, 246, 248, 250, 251, 253, 255],\n    blue: [0, 2, 4, 6, 8, 10, 12, 14, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 184, 186, 188, 190, 192, 194, 196, 198, 200, 197, 194, 191, 188, 185, 182, 179, 176, 174, 171, 168, 165, 162, 159, 156, 153, 150, 144, 138, 132, 126, 121, 115, 109, 103, 97, 91, 85, 79, 74, 68, 62, 56, 50, 47, 44, 41, 38, 35, 32, 29, 26, 24, 21, 18, 15, 12, 9, 6, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59, 62, 65, 68, 71, 74, 76, 79, 82, 85, 88, 91, 94, 97, 100, 103, 106, 109, 112, 115, 118, 121, 124, 126, 129, 132, 135, 138, 141, 144, 147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 176, 179, 182, 185, 188, 191, 194, 197, 200, 203, 206, 210, 213, 216, 219, 223, 226, 229, 232, 236, 239, 242, 245, 249, 252, 255]\n  },\n  /* eslint-enable max-len */\n\n  // pet 20 step\n  /* eslint-disable max-len */\n  pet_20step: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    blue: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n  }\n  /* eslint-enable max-len */\n};\n","export const logger = {\n  /**\n   * Available log levels.\n   * Note: need to activate verbose level in\n   *   Chrome console to see DEBUG messages.\n   */\n  levels: {\n    TRACE: 0,\n    DEBUG: 1,\n    INFO: 2,\n    WARN: 3,\n    ERROR: 4\n  },\n\n  /**\n   * Logger level: default to WARN.\n   */\n  level: 3,\n\n  /**\n   * Log a trace message.\n   *\n   * @param {string} msg The message to log.\n   */\n  trace: function (msg) {\n    if (this.level <= this.levels.TRACE) {\n      console.trace(msg);\n    }\n  },\n\n  /**\n   * Log a debug message.\n   * Careful: depends on console settings.\n   *\n   * @param {string} msg The message to log.\n   */\n  debug: function (msg) {\n    if (this.level <= this.levels.DEBUG) {\n      console.debug(msg);\n    }\n  },\n\n  /**\n   * Log an info message.\n   *\n   * @param {string} msg The message to log.\n   */\n  info: function (msg) {\n    if (this.level <= this.levels.INFO) {\n      console.info(msg);\n    }\n  },\n\n  /**\n   * Log a warn message.\n   *\n   * @param {string} msg The message to log.\n   */\n  warn: function (msg) {\n    if (this.level <= this.levels.WARN) {\n      console.warn(msg);\n    }\n  },\n\n  /**\n   * Log an error message.\n   *\n   * @param {string} msg The message to log.\n   */\n  error: function (msg) {\n    if (this.level <= this.levels.ERROR) {\n      console.error(msg);\n    }\n  }\n\n}; // logger\n","// example implementation: dcmtk/dcmiod/libsrc/cielabutil.cc\n// https://github.com/DCMTK/dcmtk/blob/DCMTK-3.6.6/dcmiod/libsrc/cielabutil.cc\n\n/**\n * Check if two rgb objects are equal.\n *\n * @param {object} c1 The first colour.\n * @param {object} c2 The second colour.\n * @returns {boolean} True if both colour are equal.\n */\nexport function isEqualRgb(c1, c2) {\n  return c1 !== null &&\n    c2 !== null &&\n    typeof c1 !== 'undefined' &&\n    typeof c2 !== 'undefined' &&\n    c1.r === c2.r &&\n    c1.g === c2.g &&\n    c1.b === c2.b;\n}\n\n/**\n * Convert YBR to RGB.\n *\n * @see http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.7.html#sect_C.7.6.3.1.2\n * @see https://en.wikipedia.org/wiki/YCbCr#JPEG_conversion\n * @param {number} y The Y component.\n * @param {number} cb The Cb component.\n * @param {number} cr The Cr component.\n * @returns {object} RGB equivalent as {r,g,b}.\n */\nexport function ybrToRgb(y, cb, cr) {\n  return {\n    r: y + 1.402 * (cr - 128),\n    g: y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128),\n    b: y + 1.772 * (cb - 128)\n  };\n}\n\n/**\n * Convert a hex color into RGB.\n *\n * @param {string} hexStr The hex color as '#ab01ef'.\n * @returns {object} The RGB values as {r,g,b}.\n */\nexport function hexToRgb(hexStr) {\n  return {\n    r: parseInt(hexStr.substring(1, 3), 16),\n    g: parseInt(hexStr.substring(3, 5), 16),\n    b: parseInt(hexStr.substring(5, 7), 16)\n  };\n}\n\n/**\n * Convert RGB to its hex equivalent.\n *\n * @param {object} rgb The RGB object as {r,g,b}.\n * @returns {string} A string representing the hex color as '#ab01ef'.\n */\nexport function rgbToHex(rgb) {\n  return '#' +\n    ((1 << 24) + (rgb.r << 16) + (rgb.g << 8) + rgb.b).toString(16).slice(1);\n}\n\n/**\n * Get the brightness of a RGB colour: calculates\n * the luma (Y) of the YIQ colour space.\n *\n * @see https://en.wikipedia.org/wiki/YIQ#From_RGB_to_YIQ\n * @param {object} rgbTriplet RGB triplet.\n * @returns {number} The brightness ([0,1]).\n */\nexport function getBrightness(rgbTriplet) {\n  // 0.001172549 = 0.299 / 255\n  // 0.002301961 = 0.587 / 255\n  // 0.000447059 = 0.114 / 255\n  return rgbTriplet.r * 0.001172549 +\n    rgbTriplet.g * 0.002301961 +\n    rgbTriplet.b * 0.000447059;\n}\n\n/**\n * Check if a colour given in hexadecimal format is dark.\n *\n * @param {string} hexColour The colour (as '#ab01ef').\n * @returns {boolean} True if the colour is dark (brightness < 0.5).\n */\nexport function isDarkColour(hexColour) {\n  return getBrightness(hexToRgb(hexColour)) < 0.5;\n}\n\n/**\n * Get the shadow colour of an input colour.\n *\n * @param {string} hexColour The colour (as '#ab01ef').\n * @returns {string} The shadow colour (white or black).\n */\nexport function getShadowColour(hexColour) {\n  return isDarkColour(hexColour) ? '#fff' : '#000';\n}\n\n/**\n * Unsigned int CIE LAB value ([0, 65535]) to CIE LAB value\n *   (L: [0, 100], a: [-128, 127], b: [-128, 127]).\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b} with unsigned range.\n * @returns {object} CIE LAB triplet as {l,a,b} with CIE LAB range.\n */\nexport function uintLabToLab(triplet) {\n  // 0.001525902 = 100 / 65535\n  // 0.003891051 = 255 / 65535\n  return {\n    l: 0.001525902 * triplet.l,\n    a: 0.003891051 * triplet.a - 128,\n    b: 0.003891051 * triplet.b - 128,\n  };\n}\n\n/**\n * CIE LAB value (L: [0, 100], a: [-128, 127], b: [-128, 127]) to\n *   unsigned int CIE LAB ([0, 65535]).\n *\n * @param {object} triplet CIE XYZ triplet as {x,y,z} with CIE LAB range.\n * @returns {object} CIE LAB triplet as {l,a,b} with unsigned range.\n */\nexport function labToUintLab(triplet) {\n  // 655.35 = 65535 / 100\n  // aUint = (a + 128) * 65535 / 255\n  // 257 = 65535 / 255\n  // 32896 = 257 * 128\n  return {\n    l: 655.35 * triplet.l,\n    a: 257 * triplet.a + 32896,\n    b: 257 * triplet.b + 32896,\n  };\n}\n\n/**\n * CIE Standard Illuminant D65, standard 2° observer.\n *\n * @see https://en.wikipedia.org/wiki/Illuminant_D65\n */\nconst d65 = {\n  x: 95.0489,\n  y: 100,\n  z: 108.884\n};\n\n/**\n * Convert CIE LAB to CIE XYZ (standard illuminant D65, 2degree 1931).\n *\n * @see https://en.wikipedia.org/wiki/CIELAB_color_space#From_CIELAB_to_CIEXYZ\n * @param {object} triplet CIE LAB triplet as {l,a,b}.\n * @returns {object} CIE XYZ triplet as {x,y,z}.\n */\nexport function cielabToCiexyz(triplet) {\n  /**\n   * Apply the inverse lab function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result\n   */\n  function invLabFunc(x) {\n    let res = null;\n    // delta = 6 / 29 = 0.206896552\n    if (x > 0.206896552) {\n      res = Math.pow(x, 3);\n    } else {\n      // 0.128418549 = 3 * delta^2\n      // 0.017712903 = 3 * delta^2 * (4 / 29)\n      res = 0.128418549 * x - 0.017712903;\n    }\n    return res;\n  }\n\n  const illuminant = d65;\n  const l0 = (triplet.l + 16) / 116;\n\n  return {\n    x: illuminant.x * invLabFunc(l0 + triplet.a / 500),\n    y: illuminant.y * invLabFunc(l0),\n    z: illuminant.z * invLabFunc(l0 - triplet.b / 200)\n  };\n}\n\n/**\n * Convert CIE XYZ to CIE LAB (standard illuminant D65, 2degree 1931).\n *\n * @see https://en.wikipedia.org/wiki/CIELAB_color_space#From_CIEXYZ_to_CIELAB\n * @param {object} triplet CIE XYZ triplet as {x,y,z}.\n * @returns {object} CIE LAB triplet as {l,a,b}.\n */\nexport function ciexyzToCielab(triplet) {\n  /**\n   * Apply the lab function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result\n   */\n  function labFunc(x) {\n    let res = null;\n    // delta = 6 / 29 = 0.206896552\n    // delta^3 = 0.008856452\n    if (x > 0.008856452) {\n      res = Math.pow(x, 0.333333333);\n    } else {\n      // 7.787037037 = 1 / 3 * delta^2\n      // 0.137931034 = 4 / 29\n      res = 7.787037037 * x + 0.137931034;\n    }\n    return res;\n  }\n\n  const illuminant = d65;\n  const fy = labFunc(triplet.y / illuminant.y);\n\n  return {\n    l: 116 * fy - 16,\n    a: 500 * (labFunc(triplet.x / illuminant.x) - fy),\n    b: 200 * (fy - labFunc(triplet.z / illuminant.z))\n  };\n}\n\n/**\n * Convert CIE XYZ to sRGB.\n *\n * @see https://en.wikipedia.org/wiki/SRGB#From_CIE_XYZ_to_sRGB\n * @param {object} triplet CIE XYZ triplet as {x,y,z}.\n * @returns {object} sRGB triplet as {r,g,b}.\n */\nexport function ciexyzToSrgb(triplet) {\n  /**\n   * Apply the gamma function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result\n   */\n  function gammaFunc(x) {\n    let res = null;\n    if (x <= 0.0031308) {\n      res = 12.92 * x;\n    } else {\n      // 0.416666667 = 1 / 2.4\n      res = 1.055 * Math.pow(x, 0.416666667) - 0.055;\n    }\n    // clip [0,1]\n    return Math.min(1, Math.max(0, res));\n  }\n\n  const x = triplet.x / 100;\n  const y = triplet.y / 100;\n  const z = triplet.z / 100;\n\n  return {\n    r: Math.round(255 * gammaFunc(3.2406 * x - 1.5372 * y - 0.4986 * z)),\n    g: Math.round(255 * gammaFunc(-0.9689 * x + 1.8758 * y + 0.0415 * z)),\n    b: Math.round(255 * gammaFunc(0.0557 * x - 0.2040 * y + 1.0570 * z))\n  };\n}\n\n/**\n * Convert sRGB to CIE XYZ.\n *\n * @see https://en.wikipedia.org/wiki/SRGB#From_sRGB_to_CIE_XYZ\n * @param {object} triplet sRGB triplet as {r,g,b}.\n * @returns {object} CIE XYZ triplet as {x,y,z}.\n */\nexport function srgbToCiexyz(triplet) {\n  /**\n   * Apply the inverse gamma function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result\n   */\n  function invGammaFunc(x) {\n    let res = null;\n    if (x <= 0.04045) {\n      res = x / 12.92;\n    } else {\n      res = Math.pow((x + 0.055) / 1.055, 2.4);\n    }\n    return res;\n  }\n\n  const rl = invGammaFunc(triplet.r / 255);\n  const gl = invGammaFunc(triplet.g / 255);\n  const bl = invGammaFunc(triplet.b / 255);\n\n  return {\n    x: 100 * (0.4124 * rl + 0.3576 * gl + 0.1805 * bl),\n    y: 100 * (0.2126 * rl + 0.7152 * gl + 0.0722 * bl),\n    z: 100 * (0.0193 * rl + 0.1192 * gl + 0.9505 * bl)\n  };\n}\n\n/**\n * Convert CIE LAB to sRGB (standard illuminant D65).\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b}.\n * @returns {object} sRGB triplet as {r,g,b}.\n */\nexport function cielabToSrgb(triplet) {\n  return ciexyzToSrgb(cielabToCiexyz(triplet));\n}\n\n/**\n * Convert sRGB to CIE LAB (standard illuminant D65).\n *\n * @param {object} triplet sRGB triplet as {r,g,b}.\n * @returns {object} CIE LAB triplet as {l,a,b}.\n */\nexport function srgbToCielab(triplet) {\n  return ciexyzToCielab(srgbToCiexyz(triplet));\n}\n\n/**\n * Get the hex code of a string colour for a colour used in pre dwv v0.17.\n *\n * @param {string} name The name of a colour.\n * @returns {string} The hex representing the colour.\n */\nexport function colourNameToHex(name) {\n  // default colours used in dwv version < 0.17\n  const dict = {\n    Yellow: '#ffff00',\n    Red: '#ff0000',\n    White: '#ffffff',\n    Green: '#008000',\n    Blue: '#0000ff',\n    Lime: '#00ff00',\n    Fuchsia: '#ff00ff',\n    Black: '#000000'\n  };\n  let res = '#ffff00';\n  if (typeof dict[name] !== 'undefined') {\n    res = dict[name];\n  }\n  return res;\n}\n","/**\n * Immutable 3D vector.\n */\nexport class Vector3D {\n\n  /**\n   * X coordinate.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y coordinate.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * Z coordinate.\n   *\n   * @type {number}\n   */\n  #z;\n\n  /**\n   * @param {number} x The X component of the vector.\n   * @param {number} y The Y component of the vector.\n   * @param {number} z The Z component of the vector.\n   */\n  constructor(x, y, z) {\n    this.#x = x;\n    this.#y = y;\n    this.#z = z;\n  }\n\n  /**\n   * Get the X component of the vector.\n   *\n   * @returns {number} The X component of the vector.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y component of the vector.\n   *\n   * @returns {number} The Y component of the vector.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Get the Z component of the vector.\n   *\n   * @returns {number} The Z component of the vector.\n   */\n  getZ() {\n    return this.#z;\n  }\n\n  /**\n   * Check for Vector3D equality.\n   *\n   * @param {object} rhs The other vector to compare to.\n   * @returns {boolean} True if both vectors are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getX() === rhs.getX() &&\n      this.getY() === rhs.getY() &&\n      this.getZ() === rhs.getZ();\n  }\n\n  /**\n   * Get a string representation of the Vector3D.\n   *\n   * @returns {string} The vector as a string.\n   */\n  toString() {\n    return '(' + this.getX() +\n      ', ' + this.getY() +\n      ', ' + this.getZ() + ')';\n  }\n\n  /**\n   * Get the norm of the vector.\n   *\n   * @returns {number} The norm.\n   */\n  norm() {\n    return Math.sqrt(\n      (this.getX() * this.getX()) +\n      (this.getY() * this.getY()) +\n      (this.getZ() * this.getZ())\n    );\n  }\n\n  /**\n   * Get the cross product with another Vector3D, ie the\n   * vector that is perpendicular to both a and b.\n   * If both vectors are parallel, the cross product is a zero vector.\n   *\n   * @see https://en.wikipedia.org/wiki/Cross_product\n   * @param {Vector3D} vector3D The input vector.\n   * @returns {Vector3D} The result vector.\n   */\n  crossProduct(vector3D) {\n    return new Vector3D(\n      (this.getY() * vector3D.getZ()) - (vector3D.getY() * this.getZ()),\n      (this.getZ() * vector3D.getX()) - (vector3D.getZ() * this.getX()),\n      (this.getX() * vector3D.getY()) - (vector3D.getX() * this.getY()));\n  }\n\n  /**\n   * Get the dot product with another Vector3D.\n   *\n   * @see https://en.wikipedia.org/wiki/Dot_product\n   * @param {Vector3D} vector3D The input vector.\n   * @returns {number} The dot product.\n   */\n  dotProduct(vector3D) {\n    return (this.getX() * vector3D.getX()) +\n      (this.getY() * vector3D.getY()) +\n      (this.getZ() * vector3D.getZ());\n  }\n\n} // Vector3D class","import {Vector3D} from './vector';\nimport {Point3D} from './point';\nimport {Index} from './index';\nimport {logger} from '../utils/logger';\n\n// Number.EPSILON is difference between 1 and the smallest\n// floating point number greater than 1\n// -> ~2e-16\n// BIG_EPSILON -> ~2e-12\nexport const BIG_EPSILON = Number.EPSILON * 1e4;\n// 'real world', for example when comparing positions\nexport const REAL_WORLD_EPSILON = 1e-4;\n\n/**\n * Check if two numbers are similar.\n *\n * @param {number} a The first number.\n * @param {number} b The second number.\n * @param {number} tol The comparison tolerance,\n *   default to Number.EPSILON.\n * @returns {boolean} True if similar.\n */\nexport function isSimilar(a, b, tol) {\n  if (typeof tol === 'undefined') {\n    tol = Number.EPSILON;\n  }\n  return Math.abs(a - b) < tol;\n}\n\n/**\n * Immutable 3x3 Matrix.\n */\nexport class Matrix33 {\n\n  /**\n   * Matrix values.\n   *\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * Matrix inverse, calculated at first ask\n   *\n   * @type {Matrix33}\n   */\n  #inverse;\n\n  /**\n   * @param {Array} values row-major ordered 9 values.\n   */\n  constructor(values) {\n    this.#values = values;\n  }\n\n  /**\n   * Get a value of the matrix.\n   *\n   * @param {number} row The row at wich to get the value.\n   * @param {number} col The column at wich to get the value.\n   * @returns {number} The value at the position.\n   */\n  get(row, col) {\n    return this.#values[row * 3 + col];\n  }\n\n  /**\n   * Get the inverse of this matrix.\n   *\n   * @returns {Matrix33|undefined} The inverse matrix or undefined\n   *   if the determinant is zero.\n   */\n  getInverse() {\n    if (typeof this.#inverse === 'undefined') {\n      this.#inverse = getMatrixInverse(this);\n    }\n    return this.#inverse;\n  }\n\n  /**\n   * Check for Matrix33 equality.\n   *\n   * @param {Matrix33} rhs The other matrix to compare to.\n   * @param {number} [p] A numeric expression for the precision to use in check\n   *   (ex: 0.001). Defaults to Number.EPSILON if not provided.\n   * @returns {boolean} True if both matrices are equal.\n   */\n  equals(rhs, p) {\n    // TODO: add type check\n    // check values\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        if (!isSimilar(this.get(i, j), rhs.get(i, j), p)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Get a string representation of the Matrix33.\n   *\n   * @returns {string} The matrix as a string.\n   */\n  toString() {\n    let str = '[';\n    for (let i = 0; i < 3; ++i) {\n      if (i !== 0) {\n        str += ', \\n ';\n      }\n      for (let j = 0; j < 3; ++j) {\n        if (j !== 0) {\n          str += ', ';\n        }\n        str += this.get(i, j);\n      }\n    }\n    str += ']';\n    return str;\n  }\n\n  /**\n   * Multiply this matrix by another.\n   *\n   * @param {Matrix33} rhs The matrix to multiply by.\n   * @returns {Matrix33} The product matrix.\n   */\n  multiply(rhs) {\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        let tmp = 0;\n        for (let k = 0; k < 3; ++k) {\n          tmp += this.get(i, k) * rhs.get(k, j);\n        }\n        values.push(tmp);\n      }\n    }\n    return new Matrix33(values);\n  }\n\n  /**\n   * Get the absolute value of this matrix.\n   *\n   * @returns {Matrix33} The result matrix.\n   */\n  getAbs() {\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        values.push(Math.abs(this.get(i, j)));\n      }\n    }\n    return new Matrix33(values);\n  }\n\n  /**\n   * Multiply this matrix by a 3D array.\n   *\n   * @param {Array} array3D The input 3D array.\n   * @returns {Array} The result 3D array.\n   */\n  multiplyArray3D(array3D) {\n    if (array3D.length !== 3) {\n      throw new Error('Cannot multiply 3x3 matrix with non 3D array: ' +\n        array3D.length);\n    }\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      let tmp = 0;\n      for (let j = 0; j < 3; ++j) {\n        tmp += this.get(i, j) * array3D[j];\n      }\n      values.push(tmp);\n    }\n    return values;\n  }\n\n  /**\n   * Multiply this matrix by a 3D vector.\n   *\n   * @param {Vector3D} vector3D The input 3D vector.\n   * @returns {Vector3D} The result 3D vector.\n   */\n  multiplyVector3D(vector3D) {\n    const array3D = this.multiplyArray3D(\n      [vector3D.getX(), vector3D.getY(), vector3D.getZ()]\n    );\n    return new Vector3D(array3D[0], array3D[1], array3D[2]);\n  }\n\n  /**\n   * Multiply this matrix by a 3D point.\n   *\n   * @param {Point3D} point3D The input 3D point.\n   * @returns {Point3D} The result 3D point.\n   */\n  multiplyPoint3D(point3D) {\n    const array3D = this.multiplyArray3D(\n      [point3D.getX(), point3D.getY(), point3D.getZ()]\n    );\n    return new Point3D(array3D[0], array3D[1], array3D[2]);\n  }\n\n  /**\n   * Multiply this matrix by a 3D index.\n   *\n   * @param {Index} index3D The input 3D index.\n   * @returns {Index} The result 3D index.\n   */\n  multiplyIndex3D(index3D) {\n    const array3D = this.multiplyArray3D(index3D.getValues());\n    return new Index(array3D);\n  }\n\n  /**\n   * Get the index of the maximum in absolute value of a row.\n   *\n   * @param {number} row The row to get the maximum from.\n   * @returns {object} The {value,index} of the maximum.\n   */\n  getRowAbsMax(row) {\n    const values = [\n      Math.abs(this.get(row, 0)),\n      Math.abs(this.get(row, 1)),\n      Math.abs(this.get(row, 2))\n    ];\n    const absMax = Math.max.apply(null, values);\n    const index = values.indexOf(absMax);\n    return {\n      value: this.get(row, index),\n      index: index\n    };\n  }\n\n  /**\n   * Get the index of the maximum in absolute value of a column.\n   *\n   * @param {number} col The column to get the maximum from.\n   * @returns {object} The {value,index} of the maximum.\n   */\n  getColAbsMax(col) {\n    const values = [\n      Math.abs(this.get(0, col)),\n      Math.abs(this.get(1, col)),\n      Math.abs(this.get(2, col))\n    ];\n    const absMax = Math.max.apply(null, values);\n    const index = values.indexOf(absMax);\n    return {\n      value: this.get(index, col),\n      index: index\n    };\n  }\n\n  /**\n   * Get this matrix with only zero and +/- ones instead of the maximum,\n   *\n   * @returns {Matrix33} The simplified matrix.\n   */\n  asOneAndZeros() {\n    const res = [];\n    for (let j = 0; j < 3; ++j) {\n      const max = this.getRowAbsMax(j);\n      const sign = max.value > 0 ? 1 : -1;\n      for (let i = 0; i < 3; ++i) {\n        if (i === max.index) {\n          //res.push(1);\n          res.push(1 * sign);\n        } else {\n          res.push(0);\n        }\n      }\n    }\n    return new Matrix33(res);\n  }\n\n  /**\n   * Get the third column direction index of an orientation matrix.\n   *\n   * @returns {number} The index of the absolute maximum of the last column.\n   */\n  getThirdColMajorDirection() {\n    return this.getColAbsMax(2).index;\n  }\n\n} // Matrix33\n\n/**\n * Get the inverse of an input 3*3 matrix.\n *\n * @param {Matrix33} m The input matrix.\n * @returns {Matrix33|undefined} The inverse matrix or undefined\n *   if the determinant is zero.\n * @see https://en.wikipedia.org/wiki/Invertible_matrix#Inversion_of_3_%C3%97_3_matrices\n * @see https://github.com/willnode/N-Matrix-Programmer\n */\nfunction getMatrixInverse(m) {\n  const m00 = m.get(0, 0);\n  const m01 = m.get(0, 1);\n  const m02 = m.get(0, 2);\n  const m10 = m.get(1, 0);\n  const m11 = m.get(1, 1);\n  const m12 = m.get(1, 2);\n  const m20 = m.get(2, 0);\n  const m21 = m.get(2, 1);\n  const m22 = m.get(2, 2);\n\n  const a1212 = m11 * m22 - m12 * m21;\n  const a2012 = m12 * m20 - m10 * m22;\n  const a0112 = m10 * m21 - m11 * m20;\n\n  let det = m00 * a1212 + m01 * a2012 + m02 * a0112;\n  if (det === 0) {\n    logger.warn('Cannot invert 3*3 matrix with zero determinant.');\n    return undefined;\n  }\n  det = 1 / det;\n\n  const values = [\n    det * a1212,\n    det * (m02 * m21 - m01 * m22),\n    det * (m01 * m12 - m02 * m11),\n    det * a2012,\n    det * (m00 * m22 - m02 * m20),\n    det * (m02 * m10 - m00 * m12),\n    det * a0112,\n    det * (m01 * m20 - m00 * m21),\n    det * (m00 * m11 - m01 * m10)\n  ];\n\n  return new Matrix33(values);\n}\n\n/**\n * Create a 3x3 identity matrix.\n *\n * @returns {Matrix33} The identity matrix.\n */\nexport function getIdentityMat33() {\n  /* eslint-disable array-element-newline */\n  return new Matrix33([\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1\n  ]);\n  /* eslint-enable array-element-newline */\n}\n\n/**\n * Check if a matrix is a 3x3 identity matrix.\n *\n * @param {Matrix33} mat33 The matrix to test.\n * @returns {boolean} True if identity.\n */\nexport function isIdentityMat33(mat33) {\n  return mat33.equals(getIdentityMat33());\n}\n\n/**\n * Create a 3x3 coronal (xzy) matrix.\n *\n * @returns {Matrix33} The coronal matrix.\n */\nexport function getCoronalMat33() {\n  /* eslint-disable array-element-newline */\n  return new Matrix33([\n    1, 0, 0,\n    0, 0, 1,\n    0, -1, 0\n  ]);\n  /* eslint-enable array-element-newline */\n}\n\n/**\n * Create a 3x3 sagittal (yzx) matrix.\n *\n * @returns {Matrix33} The sagittal matrix.\n */\nexport function getSagittalMat33() {\n  /* eslint-disable array-element-newline */\n  return new Matrix33([\n    0, 0, -1,\n    1, 0, 0,\n    0, -1, 0\n  ]);\n  /* eslint-enable array-element-newline */\n}\n\n/**\n * Get an orientation matrix from a name.\n *\n * @param {string} name The orientation name.\n * @returns {Matrix33} The orientation matrix.\n */\nexport function getMatrixFromName(name) {\n  let matrix = null;\n  if (name === 'axial') {\n    matrix = getIdentityMat33();\n  } else if (name === 'coronal') {\n    matrix = getCoronalMat33();\n  } else if (name === 'sagittal') {\n    matrix = getSagittalMat33();\n  }\n  return matrix;\n}\n","import {isSimilar} from './matrix';\nimport {Vector3D} from './vector';\n\n/**\n * Immutable 2D point.\n */\nexport class Point2D {\n\n  /**\n   * X position.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y position.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * @param {number} x The X coordinate for the point.\n   * @param {number} y The Y coordinate for the point.\n   */\n  constructor(x, y) {\n    this.#x = x;\n    this.#y = y;\n  }\n\n  /**\n   * Get the X position of the point.\n   *\n   * @returns {number} The X position of the point.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y position of the point.\n   *\n   * @returns {number} The Y position of the point.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Check for Point2D equality.\n   *\n   * @param {Point2D} rhs The other point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getX() === rhs.getX() &&\n      this.getY() === rhs.getY();\n  }\n\n  /**\n   * Get a string representation of the Point2D.\n   *\n   * @returns {string} The point as a string.\n   */\n  toString() {\n    return '(' + this.getX() + ', ' + this.getY() + ')';\n  }\n\n  /**\n   * Get the distance to another Point2D.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {number} The distance to the input point.\n   */\n  getDistance(point2D) {\n    return Math.sqrt(\n      (this.getX() - point2D.getX()) * (this.getX() - point2D.getX()) +\n      (this.getY() - point2D.getY()) * (this.getY() - point2D.getY()));\n  }\n\n  /**\n   * Round a Point2D.\n   *\n   * @returns {Point2D} The rounded point.\n   */\n  getRound() {\n    return new Point2D(\n      Math.round(this.getX()),\n      Math.round(this.getY())\n    );\n  }\n\n} // Point2D class\n\n/**\n * Immutable 3D point.\n */\nexport class Point3D {\n\n  /**\n   * X position.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y position.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * Z position.\n   *\n   * @type {number}\n   */\n  #z;\n\n  /**\n   * @param {number} x The X coordinate for the point.\n   * @param {number} y The Y coordinate for the point.\n   * @param {number} z The Z coordinate for the point.\n   */\n  constructor(x, y, z) {\n    this.#x = x;\n    this.#y = y;\n    this.#z = z;\n  }\n\n  /**\n   * Get the X position of the point.\n   *\n   * @returns {number} The X position of the point.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y position of the point.\n   *\n   * @returns {number} The Y position of the point.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Get the Z position of the point.\n   *\n   * @returns {number} The Z position of the point.\n   */\n  getZ() {\n    return this.#z;\n  }\n\n\n  /**\n   * Check for Point3D equality.\n   *\n   * @param {Point3D} rhs The other point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getX() === rhs.getX() &&\n      this.getY() === rhs.getY() &&\n      this.getZ() === rhs.getZ();\n  }\n\n  /**\n   * Check for Point3D similarity.\n   *\n   * @param {Point3D} rhs The other point to compare to.\n   * @param {number} tol Optional comparison tolerance,\n   *   default to Number.EPSILON.\n   * @returns {boolean} True if both points are equal.\n   */\n  isSimilar(rhs, tol) {\n    return rhs !== null &&\n      isSimilar(this.getX(), rhs.getX(), tol) &&\n      isSimilar(this.getY(), rhs.getY(), tol) &&\n      isSimilar(this.getZ(), rhs.getZ(), tol);\n  }\n\n  /**\n   * Get a string representation of the Point3D.\n   *\n   * @returns {string} The point as a string.\n   */\n  toString() {\n    return '(' + this.getX() +\n      ', ' + this.getY() +\n      ', ' + this.getZ() + ')';\n  }\n\n  /**\n   * Get the distance to another Point3D.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {number} Ths distance to the input point.\n   */\n  getDistance(point3D) {\n    return Math.sqrt(\n      (this.getX() - point3D.getX()) * (this.getX() - point3D.getX()) +\n      (this.getY() - point3D.getY()) * (this.getY() - point3D.getY()) +\n      (this.getZ() - point3D.getZ()) * (this.getZ() - point3D.getZ()));\n  }\n\n  /**\n   * Get the difference to another Point3D.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {Vector3D} The 3D vector from the input point to this one.\n   */\n  minus(point3D) {\n    return new Vector3D(\n      (this.getX() - point3D.getX()),\n      (this.getY() - point3D.getY()),\n      (this.getZ() - point3D.getZ()));\n  }\n\n} // Point3D class\n\n/**\n * Get an array find callback for an equal input point.\n *\n * @param {Point3D} point The point to compare to.\n * @returns {Function} A function that compares, using `equals`,\n *   its input point to the one given as input to this function.\n */\nexport function getEqualPoint3DFunction(point) {\n  return function (element) {\n    return element.equals(point);\n  };\n}\n\n/**\n * Get an array find callback for a similar input point.\n *\n * @param {Point3D} point The point to compare to.\n * @param {number} tol The comparison tolerance\n *   default to Number.EPSILON.\n * @returns {Function} A function that compares, using `isSimilar`,\n *   its input point to the one given as input to this function.\n */\nexport function getSimilarPoint3DFunction(point, tol) {\n  return function (element) {\n    return element.isSimilar(point, tol);\n  };\n}\n\n/**\n * Immutable point.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Point {\n\n  /**\n   * Point values.\n   *\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * @param {Array} values The point values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create point with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create point with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val);\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create point with non number values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the index value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the Index.\n   *\n   * @returns {string} The Index as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {Array} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if the input point can be compared to this one.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {boolean} True if both points are comparable.\n   */\n  canCompare(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    if (this.length() !== rhs.length()) {\n      return false;\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check for Point equality.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return false;\n    }\n    // check values\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Compare points and return different dimensions.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {Array} The list of different dimensions.\n   */\n  compare(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // check values\n    const diffDims = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        diffDims.push(i);\n      }\n    }\n    return diffDims;\n  }\n\n  /**\n   * Get the 3D part of this point.\n   *\n   * @returns {Point3D} The Point3D.\n   */\n  get3D() {\n    return new Point3D(this.get(0), this.get(1), this.get(2));\n  }\n\n  /**\n   * Add another point to this one.\n   *\n   * @param {Point} rhs The point to add.\n   * @returns {Point} The point representing the sum of both points.\n   */\n  add(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    const values = [];\n    const values0 = this.getValues();\n    const values1 = rhs.getValues();\n    for (let i = 0; i < values0.length; ++i) {\n      values.push(values0[i] + values1[i]);\n    }\n    return new Point(values);\n  }\n\n  /**\n   * Merge this point with a Point3D to create a new point.\n   *\n   * @param {Point3D} rhs The Point3D to merge with.\n   * @returns {Point} The merge result.\n   */\n  mergeWith3D(rhs) {\n    const values = this.getValues();\n    values[0] = rhs.getX();\n    values[1] = rhs.getY();\n    values[2] = rhs.getZ();\n    return new Point(values);\n  }\n\n} // Point class\n","/* eslint-disable quote-props */\n/* eslint max-len:0 */\n\n/**\n * DICOM tag dictionary 2022a.\n * Generated using xml standard conversion from {@link https://github.com/ivmartel/dcmStdToJs} v0.1.0.\n * Conversion changes:\n * - (vr) 'See Note' -> 'NONE'\n * - (vr) 'OB or OW' -> 'ox'\n * - (vr) 'US or SS' -> 'xs'\n * - (vr) 'US or OW' -> 'xx'\n * - (vr) 'US or SS or OW' -> 'xs'\n * - added 'GenericGroupLength' element to each group\n * Local changes:\n * - tag numbers with 'xx' were replaced with '00', 'xxx' with '001' and\n *  'xxxx' with '0004'\n */\nexport const dictionary = {\n  '0000': {\n    '0000': ['UL', '1', 'CommandGroupLength'],\n    '0001': ['UL', '1', 'CommandLengthToEnd'],\n    '0002': ['UI', '1', 'AffectedSOPClassUID'],\n    '0003': ['UI', '1', 'RequestedSOPClassUID'],\n    '0010': ['SH', '1', 'CommandRecognitionCode'],\n    '0100': ['US', '1', 'CommandField'],\n    '0110': ['US', '1', 'MessageID'],\n    '0120': ['US', '1', 'MessageIDBeingRespondedTo'],\n    '0200': ['AE', '1', 'Initiator'],\n    '0300': ['AE', '1', 'Receiver'],\n    '0400': ['AE', '1', 'FindLocation'],\n    '0600': ['AE', '1', 'MoveDestination'],\n    '0700': ['US', '1', 'Priority'],\n    '0800': ['US', '1', 'CommandDataSetType'],\n    '0850': ['US', '1', 'NumberOfMatches'],\n    '0860': ['US', '1', 'ResponseSequenceNumber'],\n    '0900': ['US', '1', 'Status'],\n    '0901': ['AT', '1-n', 'OffendingElement'],\n    '0902': ['LO', '1', 'ErrorComment'],\n    '0903': ['US', '1', 'ErrorID'],\n    '1000': ['UI', '1', 'AffectedSOPInstanceUID'],\n    '1001': ['UI', '1', 'RequestedSOPInstanceUID'],\n    '1002': ['US', '1', 'EventTypeID'],\n    '1005': ['AT', '1-n', 'AttributeIdentifierList'],\n    '1008': ['US', '1', 'ActionTypeID'],\n    '1020': ['US', '1', 'NumberOfRemainingSuboperations'],\n    '1021': ['US', '1', 'NumberOfCompletedSuboperations'],\n    '1022': ['US', '1', 'NumberOfFailedSuboperations'],\n    '1023': ['US', '1', 'NumberOfWarningSuboperations'],\n    '1030': ['AE', '1', 'MoveOriginatorApplicationEntityTitle'],\n    '1031': ['US', '1', 'MoveOriginatorMessageID'],\n    '4000': ['LT', '1', 'DialogReceiver'],\n    '4010': ['LT', '1', 'TerminalType'],\n    '5010': ['SH', '1', 'MessageSetID'],\n    '5020': ['SH', '1', 'EndMessageID'],\n    '5110': ['LT', '1', 'DisplayFormat'],\n    '5120': ['LT', '1', 'PagePositionID'],\n    '5130': ['CS', '1', 'TextFormatID'],\n    '5140': ['CS', '1', 'NormalReverse'],\n    '5150': ['CS', '1', 'AddGrayScale'],\n    '5160': ['CS', '1', 'Borders'],\n    '5170': ['IS', '1', 'Copies'],\n    '5180': ['CS', '1', 'CommandMagnificationType'],\n    '5190': ['CS', '1', 'Erase'],\n    '51A0': ['CS', '1', 'Print'],\n    '51B0': ['US', '1-n', 'Overlays']\n  },\n  '0002': {\n    '0000': ['UL', '1', 'FileMetaInformationGroupLength'],\n    '0001': ['OB', '1', 'FileMetaInformationVersion'],\n    '0002': ['UI', '1', 'MediaStorageSOPClassUID'],\n    '0003': ['UI', '1', 'MediaStorageSOPInstanceUID'],\n    '0010': ['UI', '1', 'TransferSyntaxUID'],\n    '0012': ['UI', '1', 'ImplementationClassUID'],\n    '0013': ['SH', '1', 'ImplementationVersionName'],\n    '0016': ['AE', '1', 'SourceApplicationEntityTitle'],\n    '0017': ['AE', '1', 'SendingApplicationEntityTitle'],\n    '0018': ['AE', '1', 'ReceivingApplicationEntityTitle'],\n    '0026': ['UR', '1', 'SourcePresentationAddress'],\n    '0027': ['UR', '1', 'SendingPresentationAddress'],\n    '0028': ['UR', '1', 'ReceivingPresentationAddress'],\n    '0031': ['OB', '1', 'RTVMetaInformationVersion'],\n    '0032': ['UI', '1', 'RTVCommunicationSOPClassUID'],\n    '0033': ['UI', '1', 'RTVCommunicationSOPInstanceUID'],\n    '0035': ['OB', '1', 'RTVSourceIdentifier'],\n    '0036': ['OB', '1', 'RTVFlowIdentifier'],\n    '0037': ['UL', '1', 'RTVFlowRTPSamplingRate'],\n    '0038': ['FD', '1', 'RTVFlowActualFrameDuration'],\n    '0100': ['UI', '1', 'PrivateInformationCreatorUID'],\n    '0102': ['OB', '1', 'PrivateInformation']\n  },\n  '0004': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '1130': ['CS', '1', 'FileSetID'],\n    '1141': ['CS', '1-8', 'FileSetDescriptorFileID'],\n    '1142': ['CS', '1', 'SpecificCharacterSetOfFileSetDescriptorFile'],\n    '1200': ['UL', '1', 'OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity'],\n    '1202': ['UL', '1', 'OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity'],\n    '1212': ['US', '1', 'FileSetConsistencyFlag'],\n    '1220': ['SQ', '1', 'DirectoryRecordSequence'],\n    '1400': ['UL', '1', 'OffsetOfTheNextDirectoryRecord'],\n    '1410': ['US', '1', 'RecordInUseFlag'],\n    '1420': ['UL', '1', 'OffsetOfReferencedLowerLevelDirectoryEntity'],\n    '1430': ['CS', '1', 'DirectoryRecordType'],\n    '1432': ['UI', '1', 'PrivateRecordUID'],\n    '1500': ['CS', '1-8', 'ReferencedFileID'],\n    '1504': ['UL', '1', 'MRDRDirectoryRecordOffset'],\n    '1510': ['UI', '1', 'ReferencedSOPClassUIDInFile'],\n    '1511': ['UI', '1', 'ReferencedSOPInstanceUIDInFile'],\n    '1512': ['UI', '1', 'ReferencedTransferSyntaxUIDInFile'],\n    '151A': ['UI', '1-n', 'ReferencedRelatedGeneralSOPClassUIDInFile'],\n    '1600': ['UL', '1', 'NumberOfReferences']\n  },\n  '0008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['UL', '1', 'LengthToEnd'],\n    '0005': ['CS', '1-n', 'SpecificCharacterSet'],\n    '0006': ['SQ', '1', 'LanguageCodeSequence'],\n    '0008': ['CS', '2-n', 'ImageType'],\n    '0010': ['SH', '1', 'RecognitionCode'],\n    '0012': ['DA', '1', 'InstanceCreationDate'],\n    '0013': ['TM', '1', 'InstanceCreationTime'],\n    '0014': ['UI', '1', 'InstanceCreatorUID'],\n    '0015': ['DT', '1', 'InstanceCoercionDateTime'],\n    '0016': ['UI', '1', 'SOPClassUID'],\n    '0018': ['UI', '1', 'SOPInstanceUID'],\n    '001A': ['UI', '1-n', 'RelatedGeneralSOPClassUID'],\n    '001B': ['UI', '1', 'OriginalSpecializedSOPClassUID'],\n    '0020': ['DA', '1', 'StudyDate'],\n    '0021': ['DA', '1', 'SeriesDate'],\n    '0022': ['DA', '1', 'AcquisitionDate'],\n    '0023': ['DA', '1', 'ContentDate'],\n    '0024': ['DA', '1', 'OverlayDate'],\n    '0025': ['DA', '1', 'CurveDate'],\n    '002A': ['DT', '1', 'AcquisitionDateTime'],\n    '0030': ['TM', '1', 'StudyTime'],\n    '0031': ['TM', '1', 'SeriesTime'],\n    '0032': ['TM', '1', 'AcquisitionTime'],\n    '0033': ['TM', '1', 'ContentTime'],\n    '0034': ['TM', '1', 'OverlayTime'],\n    '0035': ['TM', '1', 'CurveTime'],\n    '0040': ['US', '1', 'DataSetType'],\n    '0041': ['LO', '1', 'DataSetSubtype'],\n    '0042': ['CS', '1', 'NuclearMedicineSeriesType'],\n    '0050': ['SH', '1', 'AccessionNumber'],\n    '0051': ['SQ', '1', 'IssuerOfAccessionNumberSequence'],\n    '0052': ['CS', '1', 'QueryRetrieveLevel'],\n    '0053': ['CS', '1', 'QueryRetrieveView'],\n    '0054': ['AE', '1-n', 'RetrieveAETitle'],\n    '0055': ['AE', '1', 'StationAETitle'],\n    '0056': ['CS', '1', 'InstanceAvailability'],\n    '0058': ['UI', '1-n', 'FailedSOPInstanceUIDList'],\n    '0060': ['CS', '1', 'Modality'],\n    '0061': ['CS', '1-n', 'ModalitiesInStudy'],\n    '0062': ['UI', '1-n', 'SOPClassesInStudy'],\n    '0063': ['SQ', '1', 'AnatomicRegionsInStudyCodeSequence'],\n    '0064': ['CS', '1', 'ConversionType'],\n    '0068': ['CS', '1', 'PresentationIntentType'],\n    '0070': ['LO', '1', 'Manufacturer'],\n    '0080': ['LO', '1', 'InstitutionName'],\n    '0081': ['ST', '1', 'InstitutionAddress'],\n    '0082': ['SQ', '1', 'InstitutionCodeSequence'],\n    '0090': ['PN', '1', 'ReferringPhysicianName'],\n    '0092': ['ST', '1', 'ReferringPhysicianAddress'],\n    '0094': ['SH', '1-n', 'ReferringPhysicianTelephoneNumbers'],\n    '0096': ['SQ', '1', 'ReferringPhysicianIdentificationSequence'],\n    '009C': ['PN', '1-n', 'ConsultingPhysicianName'],\n    '009D': ['SQ', '1', 'ConsultingPhysicianIdentificationSequence'],\n    '0100': ['SH', '1', 'CodeValue'],\n    '0101': ['LO', '1', 'ExtendedCodeValue'],\n    '0102': ['SH', '1', 'CodingSchemeDesignator'],\n    '0103': ['SH', '1', 'CodingSchemeVersion'],\n    '0104': ['LO', '1', 'CodeMeaning'],\n    '0105': ['CS', '1', 'MappingResource'],\n    '0106': ['DT', '1', 'ContextGroupVersion'],\n    '0107': ['DT', '1', 'ContextGroupLocalVersion'],\n    '0108': ['LT', '1', 'ExtendedCodeMeaning'],\n    '0109': ['SQ', '1', 'CodingSchemeResourcesSequence'],\n    '010A': ['CS', '1', 'CodingSchemeURLType'],\n    '010B': ['CS', '1', 'ContextGroupExtensionFlag'],\n    '010C': ['UI', '1', 'CodingSchemeUID'],\n    '010D': ['UI', '1', 'ContextGroupExtensionCreatorUID'],\n    '010E': ['UR', '1', 'CodingSchemeURL'],\n    '010F': ['CS', '1', 'ContextIdentifier'],\n    '0110': ['SQ', '1', 'CodingSchemeIdentificationSequence'],\n    '0112': ['LO', '1', 'CodingSchemeRegistry'],\n    '0114': ['ST', '1', 'CodingSchemeExternalID'],\n    '0115': ['ST', '1', 'CodingSchemeName'],\n    '0116': ['ST', '1', 'CodingSchemeResponsibleOrganization'],\n    '0117': ['UI', '1', 'ContextUID'],\n    '0118': ['UI', '1', 'MappingResourceUID'],\n    '0119': ['UC', '1', 'LongCodeValue'],\n    '0120': ['UR', '1', 'URNCodeValue'],\n    '0121': ['SQ', '1', 'EquivalentCodeSequence'],\n    '0122': ['LO', '1', 'MappingResourceName'],\n    '0123': ['SQ', '1', 'ContextGroupIdentificationSequence'],\n    '0124': ['SQ', '1', 'MappingResourceIdentificationSequence'],\n    '0201': ['SH', '1', 'TimezoneOffsetFromUTC'],\n    '0202': ['', '', ''],\n    '0220': ['SQ', '1', 'ResponsibleGroupCodeSequence'],\n    '0221': ['CS', '1', 'EquipmentModality'],\n    '0222': ['LO', '1', 'ManufacturerRelatedModelGroup'],\n    '0300': ['SQ', '1', 'PrivateDataElementCharacteristicsSequence'],\n    '0301': ['US', '1', 'PrivateGroupReference'],\n    '0302': ['LO', '1', 'PrivateCreatorReference'],\n    '0303': ['CS', '1', 'BlockIdentifyingInformationStatus'],\n    '0304': ['US', '1-n', 'NonidentifyingPrivateElements'],\n    '0305': ['SQ', '1', 'DeidentificationActionSequence'],\n    '0306': ['US', '1-n', 'IdentifyingPrivateElements'],\n    '0307': ['CS', '1', 'DeidentificationAction'],\n    '0308': ['US', '1', 'PrivateDataElement'],\n    '0309': ['UL', '1-3', 'PrivateDataElementValueMultiplicity'],\n    '030A': ['CS', '1', 'PrivateDataElementValueRepresentation'],\n    '030B': ['UL', '1-2', 'PrivateDataElementNumberOfItems'],\n    '030C': ['UC', '1', 'PrivateDataElementName'],\n    '030D': ['UC', '1', 'PrivateDataElementKeyword'],\n    '030E': ['UT', '1', 'PrivateDataElementDescription'],\n    '030F': ['UT', '1', 'PrivateDataElementEncoding'],\n    '0310': ['SQ', '1', 'PrivateDataElementDefinitionSequence'],\n    '1000': ['AE', '1', 'NetworkID'],\n    '1010': ['SH', '1', 'StationName'],\n    '1030': ['LO', '1', 'StudyDescription'],\n    '1032': ['SQ', '1', 'ProcedureCodeSequence'],\n    '103E': ['LO', '1', 'SeriesDescription'],\n    '103F': ['SQ', '1', 'SeriesDescriptionCodeSequence'],\n    '1040': ['LO', '1', 'InstitutionalDepartmentName'],\n    '1041': ['SQ', '1', 'InstitutionalDepartmentTypeCodeSequence'],\n    '1048': ['PN', '1-n', 'PhysiciansOfRecord'],\n    '1049': ['SQ', '1', 'PhysiciansOfRecordIdentificationSequence'],\n    '1050': ['PN', '1-n', 'PerformingPhysicianName'],\n    '1052': ['SQ', '1', 'PerformingPhysicianIdentificationSequence'],\n    '1060': ['PN', '1-n', 'NameOfPhysiciansReadingStudy'],\n    '1062': ['SQ', '1', 'PhysiciansReadingStudyIdentificationSequence'],\n    '1070': ['PN', '1-n', 'OperatorsName'],\n    '1072': ['SQ', '1', 'OperatorIdentificationSequence'],\n    '1080': ['LO', '1-n', 'AdmittingDiagnosesDescription'],\n    '1084': ['SQ', '1', 'AdmittingDiagnosesCodeSequence'],\n    '1090': ['LO', '1', 'ManufacturerModelName'],\n    '1100': ['SQ', '1', 'ReferencedResultsSequence'],\n    '1110': ['SQ', '1', 'ReferencedStudySequence'],\n    '1111': ['SQ', '1', 'ReferencedPerformedProcedureStepSequence'],\n    '1115': ['SQ', '1', 'ReferencedSeriesSequence'],\n    '1120': ['SQ', '1', 'ReferencedPatientSequence'],\n    '1125': ['SQ', '1', 'ReferencedVisitSequence'],\n    '1130': ['SQ', '1', 'ReferencedOverlaySequence'],\n    '1134': ['SQ', '1', 'ReferencedStereometricInstanceSequence'],\n    '113A': ['SQ', '1', 'ReferencedWaveformSequence'],\n    '1140': ['SQ', '1', 'ReferencedImageSequence'],\n    '1145': ['SQ', '1', 'ReferencedCurveSequence'],\n    '114A': ['SQ', '1', 'ReferencedInstanceSequence'],\n    '114B': ['SQ', '1', 'ReferencedRealWorldValueMappingInstanceSequence'],\n    '1150': ['UI', '1', 'ReferencedSOPClassUID'],\n    '1155': ['UI', '1', 'ReferencedSOPInstanceUID'],\n    '1156': ['SQ', '1', 'DefinitionSourceSequence'],\n    '115A': ['UI', '1-n', 'SOPClassesSupported'],\n    '1160': ['IS', '1-n', 'ReferencedFrameNumber'],\n    '1161': ['UL', '1-n', 'SimpleFrameList'],\n    '1162': ['UL', '3-3n', 'CalculatedFrameList'],\n    '1163': ['FD', '2', 'TimeRange'],\n    '1164': ['SQ', '1', 'FrameExtractionSequence'],\n    '1167': ['UI', '1', 'MultiFrameSourceSOPInstanceUID'],\n    '1190': ['UR', '1', 'RetrieveURL'],\n    '1195': ['UI', '1', 'TransactionUID'],\n    '1196': ['US', '1', 'WarningReason'],\n    '1197': ['US', '1', 'FailureReason'],\n    '1198': ['SQ', '1', 'FailedSOPSequence'],\n    '1199': ['SQ', '1', 'ReferencedSOPSequence'],\n    '119A': ['SQ', '1', 'OtherFailuresSequence'],\n    '1200': ['SQ', '1', 'StudiesContainingOtherReferencedInstancesSequence'],\n    '1250': ['SQ', '1', 'RelatedSeriesSequence'],\n    '2110': ['CS', '1', 'LossyImageCompressionRetired'],\n    '2111': ['ST', '1', 'DerivationDescription'],\n    '2112': ['SQ', '1', 'SourceImageSequence'],\n    '2120': ['SH', '1', 'StageName'],\n    '2122': ['IS', '1', 'StageNumber'],\n    '2124': ['IS', '1', 'NumberOfStages'],\n    '2127': ['SH', '1', 'ViewName'],\n    '2128': ['IS', '1', 'ViewNumber'],\n    '2129': ['IS', '1', 'NumberOfEventTimers'],\n    '212A': ['IS', '1', 'NumberOfViewsInStage'],\n    '2130': ['DS', '1-n', 'EventElapsedTimes'],\n    '2132': ['LO', '1-n', 'EventTimerNames'],\n    '2133': ['SQ', '1', 'EventTimerSequence'],\n    '2134': ['FD', '1', 'EventTimeOffset'],\n    '2135': ['SQ', '1', 'EventCodeSequence'],\n    '2142': ['IS', '1', 'StartTrim'],\n    '2143': ['IS', '1', 'StopTrim'],\n    '2144': ['IS', '1', 'RecommendedDisplayFrameRate'],\n    '2200': ['CS', '1', 'TransducerPosition'],\n    '2204': ['CS', '1', 'TransducerOrientation'],\n    '2208': ['CS', '1', 'AnatomicStructure'],\n    '2218': ['SQ', '1', 'AnatomicRegionSequence'],\n    '2220': ['SQ', '1', 'AnatomicRegionModifierSequence'],\n    '2228': ['SQ', '1', 'PrimaryAnatomicStructureSequence'],\n    '2229': ['SQ', '1', 'AnatomicStructureSpaceOrRegionSequence'],\n    '2230': ['SQ', '1', 'PrimaryAnatomicStructureModifierSequence'],\n    '2240': ['SQ', '1', 'TransducerPositionSequence'],\n    '2242': ['SQ', '1', 'TransducerPositionModifierSequence'],\n    '2244': ['SQ', '1', 'TransducerOrientationSequence'],\n    '2246': ['SQ', '1', 'TransducerOrientationModifierSequence'],\n    '2251': ['SQ', '1', 'AnatomicStructureSpaceOrRegionCodeSequenceTrial'],\n    '2253': ['SQ', '1', 'AnatomicPortalOfEntranceCodeSequenceTrial'],\n    '2255': ['SQ', '1', 'AnatomicApproachDirectionCodeSequenceTrial'],\n    '2256': ['ST', '1', 'AnatomicPerspectiveDescriptionTrial'],\n    '2257': ['SQ', '1', 'AnatomicPerspectiveCodeSequenceTrial'],\n    '2258': ['ST', '1', 'AnatomicLocationOfExaminingInstrumentDescriptionTrial'],\n    '2259': ['SQ', '1', 'AnatomicLocationOfExaminingInstrumentCodeSequenceTrial'],\n    '225A': ['SQ', '1', 'AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial'],\n    '225C': ['SQ', '1', 'OnAxisBackgroundAnatomicStructureCodeSequenceTrial'],\n    '3001': ['SQ', '1', 'AlternateRepresentationSequence'],\n    '3002': ['UI', '1-n', 'AvailableTransferSyntaxUID'],\n    '3010': ['UI', '1-n', 'IrradiationEventUID'],\n    '3011': ['SQ', '1', 'SourceIrradiationEventSequence'],\n    '3012': ['UI', '1', 'RadiopharmaceuticalAdministrationEventUID'],\n    '4000': ['LT', '1', 'IdentifyingComments'],\n    '9007': ['CS', '4', 'FrameType'],\n    '9092': ['SQ', '1', 'ReferencedImageEvidenceSequence'],\n    '9121': ['SQ', '1', 'ReferencedRawDataSequence'],\n    '9123': ['UI', '1', 'CreatorVersionUID'],\n    '9124': ['SQ', '1', 'DerivationImageSequence'],\n    '9154': ['SQ', '1', 'SourceImageEvidenceSequence'],\n    '9205': ['CS', '1', 'PixelPresentation'],\n    '9206': ['CS', '1', 'VolumetricProperties'],\n    '9207': ['CS', '1', 'VolumeBasedCalculationTechnique'],\n    '9208': ['CS', '1', 'ComplexImageComponent'],\n    '9209': ['CS', '1', 'AcquisitionContrast'],\n    '9215': ['SQ', '1', 'DerivationCodeSequence'],\n    '9237': ['SQ', '1', 'ReferencedPresentationStateSequence'],\n    '9410': ['SQ', '1', 'ReferencedOtherPlaneSequence'],\n    '9458': ['SQ', '1', 'FrameDisplaySequence'],\n    '9459': ['FL', '1', 'RecommendedDisplayFrameRateInFloat'],\n    '9460': ['CS', '1', 'SkipFrameRangeFlag']\n  },\n  '0010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['PN', '1', 'PatientName'],\n    '0020': ['LO', '1', 'PatientID'],\n    '0021': ['LO', '1', 'IssuerOfPatientID'],\n    '0022': ['CS', '1', 'TypeOfPatientID'],\n    '0024': ['SQ', '1', 'IssuerOfPatientIDQualifiersSequence'],\n    '0026': ['SQ', '1', 'SourcePatientGroupIdentificationSequence'],\n    '0027': ['SQ', '1', 'GroupOfPatientsIdentificationSequence'],\n    '0028': ['US', '3', 'SubjectRelativePositionInImage'],\n    '0030': ['DA', '1', 'PatientBirthDate'],\n    '0032': ['TM', '1', 'PatientBirthTime'],\n    '0033': ['LO', '1', 'PatientBirthDateInAlternativeCalendar'],\n    '0034': ['LO', '1', 'PatientDeathDateInAlternativeCalendar'],\n    '0035': ['CS', '1', 'PatientAlternativeCalendar'],\n    '0040': ['CS', '1', 'PatientSex'],\n    '0050': ['SQ', '1', 'PatientInsurancePlanCodeSequence'],\n    '0101': ['SQ', '1', 'PatientPrimaryLanguageCodeSequence'],\n    '0102': ['SQ', '1', 'PatientPrimaryLanguageModifierCodeSequence'],\n    '0200': ['CS', '1', 'QualityControlSubject'],\n    '0201': ['SQ', '1', 'QualityControlSubjectTypeCodeSequence'],\n    '0212': ['UC', '1', 'StrainDescription'],\n    '0213': ['LO', '1', 'StrainNomenclature'],\n    '0214': ['LO', '1', 'StrainStockNumber'],\n    '0215': ['SQ', '1', 'StrainSourceRegistryCodeSequence'],\n    '0216': ['SQ', '1', 'StrainStockSequence'],\n    '0217': ['LO', '1', 'StrainSource'],\n    '0218': ['UT', '1', 'StrainAdditionalInformation'],\n    '0219': ['SQ', '1', 'StrainCodeSequence'],\n    '0221': ['SQ', '1', 'GeneticModificationsSequence'],\n    '0222': ['UC', '1', 'GeneticModificationsDescription'],\n    '0223': ['LO', '1', 'GeneticModificationsNomenclature'],\n    '0229': ['SQ', '1', 'GeneticModificationsCodeSequence'],\n    '1000': ['LO', '1-n', 'OtherPatientIDs'],\n    '1001': ['PN', '1-n', 'OtherPatientNames'],\n    '1002': ['SQ', '1', 'OtherPatientIDsSequence'],\n    '1005': ['PN', '1', 'PatientBirthName'],\n    '1010': ['AS', '1', 'PatientAge'],\n    '1020': ['DS', '1', 'PatientSize'],\n    '1021': ['SQ', '1', 'PatientSizeCodeSequence'],\n    '1022': ['DS', '1', 'PatientBodyMassIndex'],\n    '1023': ['DS', '1', 'MeasuredAPDimension'],\n    '1024': ['DS', '1', 'MeasuredLateralDimension'],\n    '1030': ['DS', '1', 'PatientWeight'],\n    '1040': ['LO', '1', 'PatientAddress'],\n    '1050': ['LO', '1-n', 'InsurancePlanIdentification'],\n    '1060': ['PN', '1', 'PatientMotherBirthName'],\n    '1080': ['LO', '1', 'MilitaryRank'],\n    '1081': ['LO', '1', 'BranchOfService'],\n    '1090': ['LO', '1', 'MedicalRecordLocator'],\n    '1100': ['SQ', '1', 'ReferencedPatientPhotoSequence'],\n    '2000': ['LO', '1-n', 'MedicalAlerts'],\n    '2110': ['LO', '1-n', 'Allergies'],\n    '2150': ['LO', '1', 'CountryOfResidence'],\n    '2152': ['LO', '1', 'RegionOfResidence'],\n    '2154': ['SH', '1-n', 'PatientTelephoneNumbers'],\n    '2155': ['LT', '1', 'PatientTelecomInformation'],\n    '2160': ['SH', '1', 'EthnicGroup'],\n    '2180': ['SH', '1', 'Occupation'],\n    '21A0': ['CS', '1', 'SmokingStatus'],\n    '21B0': ['LT', '1', 'AdditionalPatientHistory'],\n    '21C0': ['US', '1', 'PregnancyStatus'],\n    '21D0': ['DA', '1', 'LastMenstrualDate'],\n    '21F0': ['LO', '1', 'PatientReligiousPreference'],\n    '2201': ['LO', '1', 'PatientSpeciesDescription'],\n    '2202': ['SQ', '1', 'PatientSpeciesCodeSequence'],\n    '2203': ['CS', '1', 'PatientSexNeutered'],\n    '2210': ['CS', '1', 'AnatomicalOrientationType'],\n    '2292': ['LO', '1', 'PatientBreedDescription'],\n    '2293': ['SQ', '1', 'PatientBreedCodeSequence'],\n    '2294': ['SQ', '1', 'BreedRegistrationSequence'],\n    '2295': ['LO', '1', 'BreedRegistrationNumber'],\n    '2296': ['SQ', '1', 'BreedRegistryCodeSequence'],\n    '2297': ['PN', '1', 'ResponsiblePerson'],\n    '2298': ['CS', '1', 'ResponsiblePersonRole'],\n    '2299': ['LO', '1', 'ResponsibleOrganization'],\n    '4000': ['LT', '1', 'PatientComments'],\n    '9431': ['FL', '1', 'ExaminedBodyThickness']\n  },\n  '0012': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LO', '1', 'ClinicalTrialSponsorName'],\n    '0020': ['LO', '1', 'ClinicalTrialProtocolID'],\n    '0021': ['LO', '1', 'ClinicalTrialProtocolName'],\n    '0030': ['LO', '1', 'ClinicalTrialSiteID'],\n    '0031': ['LO', '1', 'ClinicalTrialSiteName'],\n    '0040': ['LO', '1', 'ClinicalTrialSubjectID'],\n    '0042': ['LO', '1', 'ClinicalTrialSubjectReadingID'],\n    '0050': ['LO', '1', 'ClinicalTrialTimePointID'],\n    '0051': ['ST', '1', 'ClinicalTrialTimePointDescription'],\n    '0052': ['FD', '1', 'LongitudinalTemporalOffsetFromEvent'],\n    '0053': ['CS', '1', 'LongitudinalTemporalEventType'],\n    '0060': ['LO', '1', 'ClinicalTrialCoordinatingCenterName'],\n    '0062': ['CS', '1', 'PatientIdentityRemoved'],\n    '0063': ['LO', '1-n', 'DeidentificationMethod'],\n    '0064': ['SQ', '1', 'DeidentificationMethodCodeSequence'],\n    '0071': ['LO', '1', 'ClinicalTrialSeriesID'],\n    '0072': ['LO', '1', 'ClinicalTrialSeriesDescription'],\n    '0081': ['LO', '1', 'ClinicalTrialProtocolEthicsCommitteeName'],\n    '0082': ['LO', '1', 'ClinicalTrialProtocolEthicsCommitteeApprovalNumber'],\n    '0083': ['SQ', '1', 'ConsentForClinicalTrialUseSequence'],\n    '0084': ['CS', '1', 'DistributionType'],\n    '0085': ['CS', '1', 'ConsentForDistributionFlag'],\n    '0086': ['DA', '1', 'EthicsCommitteeApprovalEffectivenessStartDate'],\n    '0087': ['DA', '1', 'EthicsCommitteeApprovalEffectivenessEndDate']\n  },\n  '0014': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0023': ['ST', '1', 'CADFileFormat'],\n    '0024': ['ST', '1', 'ComponentReferenceSystem'],\n    '0025': ['ST', '1', 'ComponentManufacturingProcedure'],\n    '0028': ['ST', '1', 'ComponentManufacturer'],\n    '0030': ['DS', '1-n', 'MaterialThickness'],\n    '0032': ['DS', '1-n', 'MaterialPipeDiameter'],\n    '0034': ['DS', '1-n', 'MaterialIsolationDiameter'],\n    '0042': ['ST', '1', 'MaterialGrade'],\n    '0044': ['ST', '1', 'MaterialPropertiesDescription'],\n    '0045': ['ST', '1', 'MaterialPropertiesFileFormatRetired'],\n    '0046': ['LT', '1', 'MaterialNotes'],\n    '0050': ['CS', '1', 'ComponentShape'],\n    '0052': ['CS', '1', 'CurvatureType'],\n    '0054': ['DS', '1', 'OuterDiameter'],\n    '0056': ['DS', '1', 'InnerDiameter'],\n    '0100': ['LO', '1-n', 'ComponentWelderIDs'],\n    '0101': ['CS', '1', 'SecondaryApprovalStatus'],\n    '0102': ['DA', '1', 'SecondaryReviewDate'],\n    '0103': ['TM', '1', 'SecondaryReviewTime'],\n    '0104': ['PN', '1', 'SecondaryReviewerName'],\n    '0105': ['ST', '1', 'RepairID'],\n    '0106': ['SQ', '1', 'MultipleComponentApprovalSequence'],\n    '0107': ['CS', '1-n', 'OtherApprovalStatus'],\n    '0108': ['CS', '1-n', 'OtherSecondaryApprovalStatus'],\n    '1010': ['ST', '1', 'ActualEnvironmentalConditions'],\n    '1020': ['DA', '1', 'ExpiryDate'],\n    '1040': ['ST', '1', 'EnvironmentalConditions'],\n    '2002': ['SQ', '1', 'EvaluatorSequence'],\n    '2004': ['IS', '1', 'EvaluatorNumber'],\n    '2006': ['PN', '1', 'EvaluatorName'],\n    '2008': ['IS', '1', 'EvaluationAttempt'],\n    '2012': ['SQ', '1', 'IndicationSequence'],\n    '2014': ['IS', '1', 'IndicationNumber'],\n    '2016': ['SH', '1', 'IndicationLabel'],\n    '2018': ['ST', '1', 'IndicationDescription'],\n    '201A': ['CS', '1-n', 'IndicationType'],\n    '201C': ['CS', '1', 'IndicationDisposition'],\n    '201E': ['SQ', '1', 'IndicationROISequence'],\n    '2030': ['SQ', '1', 'IndicationPhysicalPropertySequence'],\n    '2032': ['SH', '1', 'PropertyLabel'],\n    '2202': ['IS', '1', 'CoordinateSystemNumberOfAxes'],\n    '2204': ['SQ', '1', 'CoordinateSystemAxesSequence'],\n    '2206': ['ST', '1', 'CoordinateSystemAxisDescription'],\n    '2208': ['CS', '1', 'CoordinateSystemDataSetMapping'],\n    '220A': ['IS', '1', 'CoordinateSystemAxisNumber'],\n    '220C': ['CS', '1', 'CoordinateSystemAxisType'],\n    '220E': ['CS', '1', 'CoordinateSystemAxisUnits'],\n    '2210': ['OB', '1', 'CoordinateSystemAxisValues'],\n    '2220': ['SQ', '1', 'CoordinateSystemTransformSequence'],\n    '2222': ['ST', '1', 'TransformDescription'],\n    '2224': ['IS', '1', 'TransformNumberOfAxes'],\n    '2226': ['IS', '1-n', 'TransformOrderOfAxes'],\n    '2228': ['CS', '1', 'TransformedAxisUnits'],\n    '222A': ['DS', '1-n', 'CoordinateSystemTransformRotationAndScaleMatrix'],\n    '222C': ['DS', '1-n', 'CoordinateSystemTransformTranslationMatrix'],\n    '3011': ['DS', '1', 'InternalDetectorFrameTime'],\n    '3012': ['DS', '1', 'NumberOfFramesIntegrated'],\n    '3020': ['SQ', '1', 'DetectorTemperatureSequence'],\n    '3022': ['ST', '1', 'SensorName'],\n    '3024': ['DS', '1', 'HorizontalOffsetOfSensor'],\n    '3026': ['DS', '1', 'VerticalOffsetOfSensor'],\n    '3028': ['DS', '1', 'SensorTemperature'],\n    '3040': ['SQ', '1', 'DarkCurrentSequence'],\n    '3050': ['ox', '1', 'DarkCurrentCounts'],\n    '3060': ['SQ', '1', 'GainCorrectionReferenceSequence'],\n    '3070': ['ox', '1', 'AirCounts'],\n    '3071': ['DS', '1', 'KVUsedInGainCalibration'],\n    '3072': ['DS', '1', 'MAUsedInGainCalibration'],\n    '3073': ['DS', '1', 'NumberOfFramesUsedForIntegration'],\n    '3074': ['LO', '1', 'FilterMaterialUsedInGainCalibration'],\n    '3075': ['DS', '1', 'FilterThicknessUsedInGainCalibration'],\n    '3076': ['DA', '1', 'DateOfGainCalibration'],\n    '3077': ['TM', '1', 'TimeOfGainCalibration'],\n    '3080': ['OB', '1', 'BadPixelImage'],\n    '3099': ['LT', '1', 'CalibrationNotes'],\n    '3100': ['LT', '1', 'LinearityCorrectionTechnique'],\n    '3101': ['LT', '1', 'BeamHardeningCorrectionTechnique'],\n    '4002': ['SQ', '1', 'PulserEquipmentSequence'],\n    '4004': ['CS', '1', 'PulserType'],\n    '4006': ['LT', '1', 'PulserNotes'],\n    '4008': ['SQ', '1', 'ReceiverEquipmentSequence'],\n    '400A': ['CS', '1', 'AmplifierType'],\n    '400C': ['LT', '1', 'ReceiverNotes'],\n    '400E': ['SQ', '1', 'PreAmplifierEquipmentSequence'],\n    '400F': ['LT', '1', 'PreAmplifierNotes'],\n    '4010': ['SQ', '1', 'TransmitTransducerSequence'],\n    '4011': ['SQ', '1', 'ReceiveTransducerSequence'],\n    '4012': ['US', '1', 'NumberOfElements'],\n    '4013': ['CS', '1', 'ElementShape'],\n    '4014': ['DS', '1', 'ElementDimensionA'],\n    '4015': ['DS', '1', 'ElementDimensionB'],\n    '4016': ['DS', '1', 'ElementPitchA'],\n    '4017': ['DS', '1', 'MeasuredBeamDimensionA'],\n    '4018': ['DS', '1', 'MeasuredBeamDimensionB'],\n    '4019': ['DS', '1', 'LocationOfMeasuredBeamDiameter'],\n    '401A': ['DS', '1', 'NominalFrequency'],\n    '401B': ['DS', '1', 'MeasuredCenterFrequency'],\n    '401C': ['DS', '1', 'MeasuredBandwidth'],\n    '401D': ['DS', '1', 'ElementPitchB'],\n    '4020': ['SQ', '1', 'PulserSettingsSequence'],\n    '4022': ['DS', '1', 'PulseWidth'],\n    '4024': ['DS', '1', 'ExcitationFrequency'],\n    '4026': ['CS', '1', 'ModulationType'],\n    '4028': ['DS', '1', 'Damping'],\n    '4030': ['SQ', '1', 'ReceiverSettingsSequence'],\n    '4031': ['DS', '1', 'AcquiredSoundpathLength'],\n    '4032': ['CS', '1', 'AcquisitionCompressionType'],\n    '4033': ['IS', '1', 'AcquisitionSampleSize'],\n    '4034': ['DS', '1', 'RectifierSmoothing'],\n    '4035': ['SQ', '1', 'DACSequence'],\n    '4036': ['CS', '1', 'DACType'],\n    '4038': ['DS', '1-n', 'DACGainPoints'],\n    '403A': ['DS', '1-n', 'DACTimePoints'],\n    '403C': ['DS', '1-n', 'DACAmplitude'],\n    '4040': ['SQ', '1', 'PreAmplifierSettingsSequence'],\n    '4050': ['SQ', '1', 'TransmitTransducerSettingsSequence'],\n    '4051': ['SQ', '1', 'ReceiveTransducerSettingsSequence'],\n    '4052': ['DS', '1', 'IncidentAngle'],\n    '4054': ['ST', '1', 'CouplingTechnique'],\n    '4056': ['ST', '1', 'CouplingMedium'],\n    '4057': ['DS', '1', 'CouplingVelocity'],\n    '4058': ['DS', '1', 'ProbeCenterLocationX'],\n    '4059': ['DS', '1', 'ProbeCenterLocationZ'],\n    '405A': ['DS', '1', 'SoundPathLength'],\n    '405C': ['ST', '1', 'DelayLawIdentifier'],\n    '4060': ['SQ', '1', 'GateSettingsSequence'],\n    '4062': ['DS', '1', 'GateThreshold'],\n    '4064': ['DS', '1', 'VelocityOfSound'],\n    '4070': ['SQ', '1', 'CalibrationSettingsSequence'],\n    '4072': ['ST', '1', 'CalibrationProcedure'],\n    '4074': ['SH', '1', 'ProcedureVersion'],\n    '4076': ['DA', '1', 'ProcedureCreationDate'],\n    '4078': ['DA', '1', 'ProcedureExpirationDate'],\n    '407A': ['DA', '1', 'ProcedureLastModifiedDate'],\n    '407C': ['TM', '1-n', 'CalibrationTime'],\n    '407E': ['DA', '1-n', 'CalibrationDate'],\n    '4080': ['SQ', '1', 'ProbeDriveEquipmentSequence'],\n    '4081': ['CS', '1', 'DriveType'],\n    '4082': ['LT', '1', 'ProbeDriveNotes'],\n    '4083': ['SQ', '1', 'DriveProbeSequence'],\n    '4084': ['DS', '1', 'ProbeInductance'],\n    '4085': ['DS', '1', 'ProbeResistance'],\n    '4086': ['SQ', '1', 'ReceiveProbeSequence'],\n    '4087': ['SQ', '1', 'ProbeDriveSettingsSequence'],\n    '4088': ['DS', '1', 'BridgeResistors'],\n    '4089': ['DS', '1', 'ProbeOrientationAngle'],\n    '408B': ['DS', '1', 'UserSelectedGainY'],\n    '408C': ['DS', '1', 'UserSelectedPhase'],\n    '408D': ['DS', '1', 'UserSelectedOffsetX'],\n    '408E': ['DS', '1', 'UserSelectedOffsetY'],\n    '4091': ['SQ', '1', 'ChannelSettingsSequence'],\n    '4092': ['DS', '1', 'ChannelThreshold'],\n    '409A': ['SQ', '1', 'ScannerSettingsSequence'],\n    '409B': ['ST', '1', 'ScanProcedure'],\n    '409C': ['DS', '1', 'TranslationRateX'],\n    '409D': ['DS', '1', 'TranslationRateY'],\n    '409F': ['DS', '1', 'ChannelOverlap'],\n    '40A0': ['LO', '1-n', 'ImageQualityIndicatorType'],\n    '40A1': ['LO', '1-n', 'ImageQualityIndicatorMaterial'],\n    '40A2': ['LO', '1-n', 'ImageQualityIndicatorSize'],\n    '5002': ['IS', '1', 'LINACEnergy'],\n    '5004': ['IS', '1', 'LINACOutput'],\n    '5100': ['US', '1', 'ActiveAperture'],\n    '5101': ['DS', '1', 'TotalAperture'],\n    '5102': ['DS', '1', 'ApertureElevation'],\n    '5103': ['DS', '1', 'MainLobeAngle'],\n    '5104': ['DS', '1', 'MainRoofAngle'],\n    '5105': ['CS', '1', 'ConnectorType'],\n    '5106': ['SH', '1', 'WedgeModelNumber'],\n    '5107': ['DS', '1', 'WedgeAngleFloat'],\n    '5108': ['DS', '1', 'WedgeRoofAngle'],\n    '5109': ['CS', '1', 'WedgeElement1Position'],\n    '510A': ['DS', '1', 'WedgeMaterialVelocity'],\n    '510B': ['SH', '1', 'WedgeMaterial'],\n    '510C': ['DS', '1', 'WedgeOffsetZ'],\n    '510D': ['DS', '1', 'WedgeOriginOffsetX'],\n    '510E': ['DS', '1', 'WedgeTimeDelay'],\n    '510F': ['SH', '1', 'WedgeName'],\n    '5110': ['SH', '1', 'WedgeManufacturerName'],\n    '5111': ['LO', '1', 'WedgeDescription'],\n    '5112': ['DS', '1', 'NominalBeamAngle'],\n    '5113': ['DS', '1', 'WedgeOffsetX'],\n    '5114': ['DS', '1', 'WedgeOffsetY'],\n    '5115': ['DS', '1', 'WedgeTotalLength'],\n    '5116': ['DS', '1', 'WedgeInContactLength'],\n    '5117': ['DS', '1', 'WedgeFrontGap'],\n    '5118': ['DS', '1', 'WedgeTotalHeight'],\n    '5119': ['DS', '1', 'WedgeFrontHeight'],\n    '511A': ['DS', '1', 'WedgeRearHeight'],\n    '511B': ['DS', '1', 'WedgeTotalWidth'],\n    '511C': ['DS', '1', 'WedgeInContactWidth'],\n    '511D': ['DS', '1', 'WedgeChamferHeight'],\n    '511E': ['CS', '1', 'WedgeCurve'],\n    '511F': ['DS', '1', 'RadiusAlongWedge']\n  },\n  '0016': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['DS', '1', 'WhitePoint'],\n    '0002': ['DS', '3', 'PrimaryChromaticities'],\n    '0003': ['UT', '1', 'BatteryLevel'],\n    '0004': ['DS', '1', 'ExposureTimeInSeconds'],\n    '0005': ['DS', '1', 'FNumber'],\n    '0006': ['IS', '1', 'OECFRows'],\n    '0007': ['IS', '1', 'OECFColumns'],\n    '0008': ['UC', '1-n', 'OECFColumnNames'],\n    '0009': ['DS', '1-n', 'OECFValues'],\n    '000A': ['IS', '1', 'SpatialFrequencyResponseRows'],\n    '000B': ['IS', '1', 'SpatialFrequencyResponseColumns'],\n    '000C': ['UC', '1-n', 'SpatialFrequencyResponseColumnNames'],\n    '000D': ['DS', '1-n', 'SpatialFrequencyResponseValues'],\n    '000E': ['IS', '1', 'ColorFilterArrayPatternRows'],\n    '000F': ['IS', '1', 'ColorFilterArrayPatternColumns'],\n    '0010': ['DS', '1-n', 'ColorFilterArrayPatternValues'],\n    '0011': ['US', '1', 'FlashFiringStatus'],\n    '0012': ['US', '1', 'FlashReturnStatus'],\n    '0013': ['US', '1', 'FlashMode'],\n    '0014': ['US', '1', 'FlashFunctionPresent'],\n    '0015': ['US', '1', 'FlashRedEyeMode'],\n    '0016': ['US', '1', 'ExposureProgram'],\n    '0017': ['UT', '1', 'SpectralSensitivity'],\n    '0018': ['IS', '1', 'PhotographicSensitivity'],\n    '0019': ['IS', '1', 'SelfTimerMode'],\n    '001A': ['US', '1', 'SensitivityType'],\n    '001B': ['IS', '1', 'StandardOutputSensitivity'],\n    '001C': ['IS', '1', 'RecommendedExposureIndex'],\n    '001D': ['IS', '1', 'ISOSpeed'],\n    '001E': ['IS', '1', 'ISOSpeedLatitudeyyy'],\n    '001F': ['IS', '1', 'ISOSpeedLatitudezzz'],\n    '0020': ['UT', '1', 'EXIFVersion'],\n    '0021': ['DS', '1', 'ShutterSpeedValue'],\n    '0022': ['DS', '1', 'ApertureValue'],\n    '0023': ['DS', '1', 'BrightnessValue'],\n    '0024': ['DS', '1', 'ExposureBiasValue'],\n    '0025': ['DS', '1', 'MaxApertureValue'],\n    '0026': ['DS', '1', 'SubjectDistance'],\n    '0027': ['US', '1', 'MeteringMode'],\n    '0028': ['US', '1', 'LightSource'],\n    '0029': ['DS', '1', 'FocalLength'],\n    '002A': ['IS', '2-4', 'SubjectArea'],\n    '002B': ['OB', '1', 'MakerNote'],\n    '0030': ['DS', '1', 'Temperature'],\n    '0031': ['DS', '1', 'Humidity'],\n    '0032': ['DS', '1', 'Pressure'],\n    '0033': ['DS', '1', 'WaterDepth'],\n    '0034': ['DS', '1', 'Acceleration'],\n    '0035': ['DS', '1', 'CameraElevationAngle'],\n    '0036': ['DS', '1-2', 'FlashEnergy'],\n    '0037': ['IS', '2', 'SubjectLocation'],\n    '0038': ['DS', '1', 'PhotographicExposureIndex'],\n    '0039': ['US', '1', 'SensingMethod'],\n    '003A': ['US', '1', 'FileSource'],\n    '003B': ['US', '1', 'SceneType'],\n    '0041': ['US', '1', 'CustomRendered'],\n    '0042': ['US', '1', 'ExposureMode'],\n    '0043': ['US', '1', 'WhiteBalance'],\n    '0044': ['DS', '1', 'DigitalZoomRatio'],\n    '0045': ['IS', '1', 'FocalLengthIn35mmFilm'],\n    '0046': ['US', '1', 'SceneCaptureType'],\n    '0047': ['US', '1', 'GainControl'],\n    '0048': ['US', '1', 'Contrast'],\n    '0049': ['US', '1', 'Saturation'],\n    '004A': ['US', '1', 'Sharpness'],\n    '004B': ['OB', '1', 'DeviceSettingDescription'],\n    '004C': ['US', '1', 'SubjectDistanceRange'],\n    '004D': ['UT', '1', 'CameraOwnerName'],\n    '004E': ['DS', '4', 'LensSpecification'],\n    '004F': ['UT', '1', 'LensMake'],\n    '0050': ['UT', '1', 'LensModel'],\n    '0051': ['UT', '1', 'LensSerialNumber'],\n    '0061': ['CS', '1', 'InteroperabilityIndex'],\n    '0062': ['OB', '1', 'InteroperabilityVersion'],\n    '0070': ['OB', '1', 'GPSVersionID'],\n    '0071': ['CS', '1', 'GPSLatitudeRef'],\n    '0072': ['DS', '3', 'GPSLatitude'],\n    '0073': ['CS', '1', 'GPSLongitudeRef'],\n    '0074': ['DS', '3', 'GPSLongitude'],\n    '0075': ['US', '1', 'GPSAltitudeRef'],\n    '0076': ['DS', '1', 'GPSAltitude'],\n    '0077': ['DT', '1', 'GPSTimeStamp'],\n    '0078': ['UT', '1', 'GPSSatellites'],\n    '0079': ['CS', '1', 'GPSStatus'],\n    '007A': ['CS', '1', 'GPSMeasureMode'],\n    '007B': ['DS', '1', 'GPSDOP'],\n    '007C': ['CS', '1', 'GPSSpeedRef'],\n    '007D': ['DS', '1', 'GPSSpeed'],\n    '007E': ['CS', '1', 'GPSTrackRef'],\n    '007F': ['DS', '1', 'GPSTrack'],\n    '0080': ['CS', '1', 'GPSImgDirectionRef'],\n    '0081': ['DS', '1', 'GPSImgDirection'],\n    '0082': ['UT', '1', 'GPSMapDatum'],\n    '0083': ['CS', '1', 'GPSDestLatitudeRef'],\n    '0084': ['DS', '3', 'GPSDestLatitude'],\n    '0085': ['CS', '1', 'GPSDestLongitudeRef'],\n    '0086': ['DS', '3', 'GPSDestLongitude'],\n    '0087': ['CS', '1', 'GPSDestBearingRef'],\n    '0088': ['DS', '1', 'GPSDestBearing'],\n    '0089': ['CS', '1', 'GPSDestDistanceRef'],\n    '008A': ['DS', '1', 'GPSDestDistance'],\n    '008B': ['OB', '1', 'GPSProcessingMethod'],\n    '008C': ['OB', '1', 'GPSAreaInformation'],\n    '008D': ['DT', '1', 'GPSDateStamp'],\n    '008E': ['IS', '1', 'GPSDifferential'],\n    '1001': ['CS', '1', 'LightSourcePolarization'],\n    '1002': ['DS', '1', 'EmitterColorTemperature'],\n    '1003': ['CS', '1', 'ContactMethod'],\n    '1004': ['CS', '1-n', 'ImmersionMedia'],\n    '1005': ['DS', '1', 'OpticalMagnificationFactor']\n  },\n  '0018': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LO', '1', 'ContrastBolusAgent'],\n    '0012': ['SQ', '1', 'ContrastBolusAgentSequence'],\n    '0013': ['FL', '1', 'ContrastBolusT1Relaxivity'],\n    '0014': ['SQ', '1', 'ContrastBolusAdministrationRouteSequence'],\n    '0015': ['CS', '1', 'BodyPartExamined'],\n    '0020': ['CS', '1-n', 'ScanningSequence'],\n    '0021': ['CS', '1-n', 'SequenceVariant'],\n    '0022': ['CS', '1-n', 'ScanOptions'],\n    '0023': ['CS', '1', 'MRAcquisitionType'],\n    '0024': ['SH', '1', 'SequenceName'],\n    '0025': ['CS', '1', 'AngioFlag'],\n    '0026': ['SQ', '1', 'InterventionDrugInformationSequence'],\n    '0027': ['TM', '1', 'InterventionDrugStopTime'],\n    '0028': ['DS', '1', 'InterventionDrugDose'],\n    '0029': ['SQ', '1', 'InterventionDrugCodeSequence'],\n    '002A': ['SQ', '1', 'AdditionalDrugSequence'],\n    '0030': ['LO', '1-n', 'Radionuclide'],\n    '0031': ['LO', '1', 'Radiopharmaceutical'],\n    '0032': ['DS', '1', 'EnergyWindowCenterline'],\n    '0033': ['DS', '1-n', 'EnergyWindowTotalWidth'],\n    '0034': ['LO', '1', 'InterventionDrugName'],\n    '0035': ['TM', '1', 'InterventionDrugStartTime'],\n    '0036': ['SQ', '1', 'InterventionSequence'],\n    '0037': ['CS', '1', 'TherapyType'],\n    '0038': ['CS', '1', 'InterventionStatus'],\n    '0039': ['CS', '1', 'TherapyDescription'],\n    '003A': ['ST', '1', 'InterventionDescription'],\n    '0040': ['IS', '1', 'CineRate'],\n    '0042': ['CS', '1', 'InitialCineRunState'],\n    '0050': ['DS', '1', 'SliceThickness'],\n    '0060': ['DS', '1', 'KVP'],\n    '0061': ['DS', '1', ''],\n    '0070': ['IS', '1', 'CountsAccumulated'],\n    '0071': ['CS', '1', 'AcquisitionTerminationCondition'],\n    '0072': ['DS', '1', 'EffectiveDuration'],\n    '0073': ['CS', '1', 'AcquisitionStartCondition'],\n    '0074': ['IS', '1', 'AcquisitionStartConditionData'],\n    '0075': ['IS', '1', 'AcquisitionTerminationConditionData'],\n    '0080': ['DS', '1', 'RepetitionTime'],\n    '0081': ['DS', '1', 'EchoTime'],\n    '0082': ['DS', '1', 'InversionTime'],\n    '0083': ['DS', '1', 'NumberOfAverages'],\n    '0084': ['DS', '1', 'ImagingFrequency'],\n    '0085': ['SH', '1', 'ImagedNucleus'],\n    '0086': ['IS', '1-n', 'EchoNumbers'],\n    '0087': ['DS', '1', 'MagneticFieldStrength'],\n    '0088': ['DS', '1', 'SpacingBetweenSlices'],\n    '0089': ['IS', '1', 'NumberOfPhaseEncodingSteps'],\n    '0090': ['DS', '1', 'DataCollectionDiameter'],\n    '0091': ['IS', '1', 'EchoTrainLength'],\n    '0093': ['DS', '1', 'PercentSampling'],\n    '0094': ['DS', '1', 'PercentPhaseFieldOfView'],\n    '0095': ['DS', '1', 'PixelBandwidth'],\n    '1000': ['LO', '1', 'DeviceSerialNumber'],\n    '1002': ['UI', '1', 'DeviceUID'],\n    '1003': ['LO', '1', 'DeviceID'],\n    '1004': ['LO', '1', 'PlateID'],\n    '1005': ['LO', '1', 'GeneratorID'],\n    '1006': ['LO', '1', 'GridID'],\n    '1007': ['LO', '1', 'CassetteID'],\n    '1008': ['LO', '1', 'GantryID'],\n    '1009': ['UT', '1', 'UniqueDeviceIdentifier'],\n    '100A': ['SQ', '1', 'UDISequence'],\n    '100B': ['UI', '1-n', 'ManufacturerDeviceClassUID'],\n    '1010': ['LO', '1', 'SecondaryCaptureDeviceID'],\n    '1011': ['LO', '1', 'HardcopyCreationDeviceID'],\n    '1012': ['DA', '1', 'DateOfSecondaryCapture'],\n    '1014': ['TM', '1', 'TimeOfSecondaryCapture'],\n    '1016': ['LO', '1', 'SecondaryCaptureDeviceManufacturer'],\n    '1017': ['LO', '1', 'HardcopyDeviceManufacturer'],\n    '1018': ['LO', '1', 'SecondaryCaptureDeviceManufacturerModelName'],\n    '1019': ['LO', '1-n', 'SecondaryCaptureDeviceSoftwareVersions'],\n    '101A': ['LO', '1-n', 'HardcopyDeviceSoftwareVersion'],\n    '101B': ['LO', '1', 'HardcopyDeviceManufacturerModelName'],\n    '1020': ['LO', '1-n', 'SoftwareVersions'],\n    '1022': ['SH', '1', 'VideoImageFormatAcquired'],\n    '1023': ['LO', '1', 'DigitalImageFormatAcquired'],\n    '1030': ['LO', '1', 'ProtocolName'],\n    '1040': ['LO', '1', 'ContrastBolusRoute'],\n    '1041': ['DS', '1', 'ContrastBolusVolume'],\n    '1042': ['TM', '1', 'ContrastBolusStartTime'],\n    '1043': ['TM', '1', 'ContrastBolusStopTime'],\n    '1044': ['DS', '1', 'ContrastBolusTotalDose'],\n    '1045': ['IS', '1', 'SyringeCounts'],\n    '1046': ['DS', '1-n', 'ContrastFlowRate'],\n    '1047': ['DS', '1-n', 'ContrastFlowDuration'],\n    '1048': ['CS', '1', 'ContrastBolusIngredient'],\n    '1049': ['DS', '1', 'ContrastBolusIngredientConcentration'],\n    '1050': ['DS', '1', 'SpatialResolution'],\n    '1060': ['DS', '1', 'TriggerTime'],\n    '1061': ['LO', '1', 'TriggerSourceOrType'],\n    '1062': ['IS', '1', 'NominalInterval'],\n    '1063': ['DS', '1', 'FrameTime'],\n    '1064': ['LO', '1', 'CardiacFramingType'],\n    '1065': ['DS', '1-n', 'FrameTimeVector'],\n    '1066': ['DS', '1', 'FrameDelay'],\n    '1067': ['DS', '1', 'ImageTriggerDelay'],\n    '1068': ['DS', '1', 'MultiplexGroupTimeOffset'],\n    '1069': ['DS', '1', 'TriggerTimeOffset'],\n    '106A': ['CS', '1', 'SynchronizationTrigger'],\n    '106C': ['US', '2', 'SynchronizationChannel'],\n    '106E': ['UL', '1', 'TriggerSamplePosition'],\n    '1070': ['LO', '1', 'RadiopharmaceuticalRoute'],\n    '1071': ['DS', '1', 'RadiopharmaceuticalVolume'],\n    '1072': ['TM', '1', 'RadiopharmaceuticalStartTime'],\n    '1073': ['TM', '1', 'RadiopharmaceuticalStopTime'],\n    '1074': ['DS', '1', 'RadionuclideTotalDose'],\n    '1075': ['DS', '1', 'RadionuclideHalfLife'],\n    '1076': ['DS', '1', 'RadionuclidePositronFraction'],\n    '1077': ['DS', '1', 'RadiopharmaceuticalSpecificActivity'],\n    '1078': ['DT', '1', 'RadiopharmaceuticalStartDateTime'],\n    '1079': ['DT', '1', 'RadiopharmaceuticalStopDateTime'],\n    '1080': ['CS', '1', 'BeatRejectionFlag'],\n    '1081': ['IS', '1', 'LowRRValue'],\n    '1082': ['IS', '1', 'HighRRValue'],\n    '1083': ['IS', '1', 'IntervalsAcquired'],\n    '1084': ['IS', '1', 'IntervalsRejected'],\n    '1085': ['LO', '1', 'PVCRejection'],\n    '1086': ['IS', '1', 'SkipBeats'],\n    '1088': ['IS', '1', 'HeartRate'],\n    '1090': ['IS', '1', 'CardiacNumberOfImages'],\n    '1094': ['IS', '1', 'TriggerWindow'],\n    '1100': ['DS', '1', 'ReconstructionDiameter'],\n    '1110': ['DS', '1', 'DistanceSourceToDetector'],\n    '1111': ['DS', '1', 'DistanceSourceToPatient'],\n    '1114': ['DS', '1', 'EstimatedRadiographicMagnificationFactor'],\n    '1120': ['DS', '1', 'GantryDetectorTilt'],\n    '1121': ['DS', '1', 'GantryDetectorSlew'],\n    '1130': ['DS', '1', 'TableHeight'],\n    '1131': ['DS', '1', 'TableTraverse'],\n    '1134': ['CS', '1', 'TableMotion'],\n    '1135': ['DS', '1-n', 'TableVerticalIncrement'],\n    '1136': ['DS', '1-n', 'TableLateralIncrement'],\n    '1137': ['DS', '1-n', 'TableLongitudinalIncrement'],\n    '1138': ['DS', '1', 'TableAngle'],\n    '113A': ['CS', '1', 'TableType'],\n    '1140': ['CS', '1', 'RotationDirection'],\n    '1141': ['DS', '1', 'AngularPosition'],\n    '1142': ['DS', '1-n', 'RadialPosition'],\n    '1143': ['DS', '1', 'ScanArc'],\n    '1144': ['DS', '1', 'AngularStep'],\n    '1145': ['DS', '1', 'CenterOfRotationOffset'],\n    '1146': ['DS', '1-n', 'RotationOffset'],\n    '1147': ['CS', '1', 'FieldOfViewShape'],\n    '1149': ['IS', '1-2', 'FieldOfViewDimensions'],\n    '1150': ['IS', '1', 'ExposureTime'],\n    '1151': ['IS', '1', 'XRayTubeCurrent'],\n    '1152': ['IS', '1', 'Exposure'],\n    '1153': ['IS', '1', 'ExposureInuAs'],\n    '1154': ['DS', '1', 'AveragePulseWidth'],\n    '1155': ['CS', '1', 'RadiationSetting'],\n    '1156': ['CS', '1', 'RectificationType'],\n    '115A': ['CS', '1', 'RadiationMode'],\n    '115E': ['DS', '1', 'ImageAndFluoroscopyAreaDoseProduct'],\n    '1160': ['SH', '1', 'FilterType'],\n    '1161': ['LO', '1-n', 'TypeOfFilters'],\n    '1162': ['DS', '1', 'IntensifierSize'],\n    '1164': ['DS', '2', 'ImagerPixelSpacing'],\n    '1166': ['CS', '1-n', 'Grid'],\n    '1170': ['IS', '1', 'GeneratorPower'],\n    '1180': ['SH', '1', 'CollimatorGridName'],\n    '1181': ['CS', '1', 'CollimatorType'],\n    '1182': ['IS', '1-2', 'FocalDistance'],\n    '1183': ['DS', '1-2', 'XFocusCenter'],\n    '1184': ['DS', '1-2', 'YFocusCenter'],\n    '1190': ['DS', '1-n', 'FocalSpots'],\n    '1191': ['CS', '1', 'AnodeTargetMaterial'],\n    '11A0': ['DS', '1', 'BodyPartThickness'],\n    '11A2': ['DS', '1', 'CompressionForce'],\n    '11A3': ['DS', '1', 'CompressionPressure'],\n    '11A4': ['LO', '1', 'PaddleDescription'],\n    '11A5': ['DS', '1', 'CompressionContactArea'],\n    '11B0': ['LO', '1', 'AcquisitionMode'],\n    '11B1': ['LO', '1', 'DoseModeName'],\n    '11B2': ['CS', '1', 'AcquiredSubtractionMaskFlag'],\n    '11B3': ['CS', '1', 'FluoroscopyPersistenceFlag'],\n    '11B4': ['CS', '1', 'FluoroscopyLastImageHoldPersistenceFlag'],\n    '11B5': ['IS', '1', 'UpperLimitNumberOfPersistentFluoroscopyFrames'],\n    '11B6': ['CS', '1', 'ContrastBolusAutoInjectionTriggerFlag'],\n    '11B7': ['FD', '1', 'ContrastBolusInjectionDelay'],\n    '11B8': ['SQ', '1', 'XAAcquisitionPhaseDetailsSequence'],\n    '11B9': ['FD', '1', 'XAAcquisitionFrameRate'],\n    '11BA': ['SQ', '1', 'XAPlaneDetailsSequence'],\n    '11BB': ['LO', '1', 'AcquisitionFieldOfViewLabel'],\n    '11BC': ['SQ', '1', 'XRayFilterDetailsSequence'],\n    '11BD': ['FD', '1', 'XAAcquisitionDuration'],\n    '11BE': ['CS', '1', 'ReconstructionPipelineType'],\n    '11BF': ['SQ', '1', 'ImageFilterDetailsSequence'],\n    '11C0': ['CS', '1', 'AppliedMaskSubtractionFlag'],\n    '11C1': ['SQ', '1', 'RequestedSeriesDescriptionCodeSequence'],\n    '1200': ['DA', '1-n', 'DateOfLastCalibration'],\n    '1201': ['TM', '1-n', 'TimeOfLastCalibration'],\n    '1202': ['DT', '1', 'DateTimeOfLastCalibration'],\n    '1203': ['DT', '1', 'CalibrationDateTime'],\n    '1210': ['SH', '1-n', 'ConvolutionKernel'],\n    '1240': ['IS', '1-n', 'UpperLowerPixelValues'],\n    '1242': ['IS', '1', 'ActualFrameDuration'],\n    '1243': ['IS', '1', 'CountRate'],\n    '1244': ['US', '1', 'PreferredPlaybackSequencing'],\n    '1250': ['SH', '1', 'ReceiveCoilName'],\n    '1251': ['SH', '1', 'TransmitCoilName'],\n    '1260': ['SH', '1', 'PlateType'],\n    '1261': ['LO', '1', 'PhosphorType'],\n    '1271': ['FD', '1', 'WaterEquivalentDiameter'],\n    '1272': ['SQ', '1', 'WaterEquivalentDiameterCalculationMethodCodeSequence'],\n    '1300': ['DS', '1', 'ScanVelocity'],\n    '1301': ['CS', '1-n', 'WholeBodyTechnique'],\n    '1302': ['IS', '1', 'ScanLength'],\n    '1310': ['US', '4', 'AcquisitionMatrix'],\n    '1312': ['CS', '1', 'InPlanePhaseEncodingDirection'],\n    '1314': ['DS', '1', 'FlipAngle'],\n    '1315': ['CS', '1', 'VariableFlipAngleFlag'],\n    '1316': ['DS', '1', 'SAR'],\n    '1318': ['DS', '1', 'dBdt'],\n    '1320': ['FL', '1', 'B1rms'],\n    '1400': ['LO', '1', 'AcquisitionDeviceProcessingDescription'],\n    '1401': ['LO', '1', 'AcquisitionDeviceProcessingCode'],\n    '1402': ['CS', '1', 'CassetteOrientation'],\n    '1403': ['CS', '1', 'CassetteSize'],\n    '1404': ['US', '1', 'ExposuresOnPlate'],\n    '1405': ['IS', '1', 'RelativeXRayExposure'],\n    '1411': ['DS', '1', 'ExposureIndex'],\n    '1412': ['DS', '1', 'TargetExposureIndex'],\n    '1413': ['DS', '1', 'DeviationIndex'],\n    '1450': ['DS', '1', 'ColumnAngulation'],\n    '1460': ['DS', '1', 'TomoLayerHeight'],\n    '1470': ['DS', '1', 'TomoAngle'],\n    '1480': ['DS', '1', 'TomoTime'],\n    '1490': ['CS', '1', 'TomoType'],\n    '1491': ['CS', '1', 'TomoClass'],\n    '1495': ['IS', '1', 'NumberOfTomosynthesisSourceImages'],\n    '1500': ['CS', '1', 'PositionerMotion'],\n    '1508': ['CS', '1', 'PositionerType'],\n    '1510': ['DS', '1', 'PositionerPrimaryAngle'],\n    '1511': ['DS', '1', 'PositionerSecondaryAngle'],\n    '1520': ['DS', '1-n', 'PositionerPrimaryAngleIncrement'],\n    '1521': ['DS', '1-n', 'PositionerSecondaryAngleIncrement'],\n    '1530': ['DS', '1', 'DetectorPrimaryAngle'],\n    '1531': ['DS', '1', 'DetectorSecondaryAngle'],\n    '1600': ['CS', '1-3', 'ShutterShape'],\n    '1602': ['IS', '1', 'ShutterLeftVerticalEdge'],\n    '1604': ['IS', '1', 'ShutterRightVerticalEdge'],\n    '1606': ['IS', '1', 'ShutterUpperHorizontalEdge'],\n    '1608': ['IS', '1', 'ShutterLowerHorizontalEdge'],\n    '1610': ['IS', '2', 'CenterOfCircularShutter'],\n    '1612': ['IS', '1', 'RadiusOfCircularShutter'],\n    '1620': ['IS', '2-2n', 'VerticesOfThePolygonalShutter'],\n    '1622': ['US', '1', 'ShutterPresentationValue'],\n    '1623': ['US', '1', 'ShutterOverlayGroup'],\n    '1624': ['US', '3', 'ShutterPresentationColorCIELabValue'],\n    '1630': ['CS', '1', 'OutlineShapeType'],\n    '1631': ['FD', '1', 'OutlineLeftVerticalEdge'],\n    '1632': ['FD', '1', 'OutlineRightVerticalEdge'],\n    '1633': ['FD', '1', 'OutlineUpperHorizontalEdge'],\n    '1634': ['FD', '1', 'OutlineLowerHorizontalEdge'],\n    '1635': ['FD', '2', 'CenterOfCircularOutline'],\n    '1636': ['FD', '1', 'DiameterOfCircularOutline'],\n    '1637': ['UL', '1', 'NumberOfPolygonalVertices'],\n    '1638': ['OF', '1', 'VerticesOfThePolygonalOutline'],\n    '1700': ['CS', '1-3', 'CollimatorShape'],\n    '1702': ['IS', '1', 'CollimatorLeftVerticalEdge'],\n    '1704': ['IS', '1', 'CollimatorRightVerticalEdge'],\n    '1706': ['IS', '1', 'CollimatorUpperHorizontalEdge'],\n    '1708': ['IS', '1', 'CollimatorLowerHorizontalEdge'],\n    '1710': ['IS', '2', 'CenterOfCircularCollimator'],\n    '1712': ['IS', '1', 'RadiusOfCircularCollimator'],\n    '1720': ['IS', '2-2n', 'VerticesOfThePolygonalCollimator'],\n    '1800': ['CS', '1', 'AcquisitionTimeSynchronized'],\n    '1801': ['SH', '1', 'TimeSource'],\n    '1802': ['CS', '1', 'TimeDistributionProtocol'],\n    '1803': ['LO', '1', 'NTPSourceAddress'],\n    '2001': ['IS', '1-n', 'PageNumberVector'],\n    '2002': ['SH', '1-n', 'FrameLabelVector'],\n    '2003': ['DS', '1-n', 'FramePrimaryAngleVector'],\n    '2004': ['DS', '1-n', 'FrameSecondaryAngleVector'],\n    '2005': ['DS', '1-n', 'SliceLocationVector'],\n    '2006': ['SH', '1-n', 'DisplayWindowLabelVector'],\n    '2010': ['DS', '2', 'NominalScannedPixelSpacing'],\n    '2020': ['CS', '1', 'DigitizingDeviceTransportDirection'],\n    '2030': ['DS', '1', 'RotationOfScannedFilm'],\n    '2041': ['SQ', '1', 'BiopsyTargetSequence'],\n    '2042': ['UI', '1', 'TargetUID'],\n    '2043': ['FL', '2', 'LocalizingCursorPosition'],\n    '2044': ['FL', '3', 'CalculatedTargetPosition'],\n    '2045': ['SH', '1', 'TargetLabel'],\n    '2046': ['FL', '1', 'DisplayedZValue'],\n    '3100': ['CS', '1', 'IVUSAcquisition'],\n    '3101': ['DS', '1', 'IVUSPullbackRate'],\n    '3102': ['DS', '1', 'IVUSGatedRate'],\n    '3103': ['IS', '1', 'IVUSPullbackStartFrameNumber'],\n    '3104': ['IS', '1', 'IVUSPullbackStopFrameNumber'],\n    '3105': ['IS', '1-n', 'LesionNumber'],\n    '4000': ['LT', '1', 'AcquisitionComments'],\n    '5000': ['SH', '1-n', 'OutputPower'],\n    '5010': ['LO', '1-n', 'TransducerData'],\n    '5011': ['SQ', '1', 'TransducerIdentificationSequence'],\n    '5012': ['DS', '1', 'FocusDepth'],\n    '5020': ['LO', '1', 'ProcessingFunction'],\n    '5021': ['LO', '1', 'PostprocessingFunction'],\n    '5022': ['DS', '1', 'MechanicalIndex'],\n    '5024': ['DS', '1', 'BoneThermalIndex'],\n    '5026': ['DS', '1', 'CranialThermalIndex'],\n    '5027': ['DS', '1', 'SoftTissueThermalIndex'],\n    '5028': ['DS', '1', 'SoftTissueFocusThermalIndex'],\n    '5029': ['DS', '1', 'SoftTissueSurfaceThermalIndex'],\n    '5030': ['DS', '1', 'DynamicRange'],\n    '5040': ['DS', '1', 'TotalGain'],\n    '5050': ['IS', '1', 'DepthOfScanField'],\n    '5100': ['CS', '1', 'PatientPosition'],\n    '5101': ['CS', '1', 'ViewPosition'],\n    '5104': ['SQ', '1', 'ProjectionEponymousNameCodeSequence'],\n    '5210': ['DS', '6', 'ImageTransformationMatrix'],\n    '5212': ['DS', '3', 'ImageTranslationVector'],\n    '6000': ['DS', '1', 'Sensitivity'],\n    '6011': ['SQ', '1', 'SequenceOfUltrasoundRegions'],\n    '6012': ['US', '1', 'RegionSpatialFormat'],\n    '6014': ['US', '1', 'RegionDataType'],\n    '6016': ['UL', '1', 'RegionFlags'],\n    '6018': ['UL', '1', 'RegionLocationMinX0'],\n    '601A': ['UL', '1', 'RegionLocationMinY0'],\n    '601C': ['UL', '1', 'RegionLocationMaxX1'],\n    '601E': ['UL', '1', 'RegionLocationMaxY1'],\n    '6020': ['SL', '1', 'ReferencePixelX0'],\n    '6022': ['SL', '1', 'ReferencePixelY0'],\n    '6024': ['US', '1', 'PhysicalUnitsXDirection'],\n    '6026': ['US', '1', 'PhysicalUnitsYDirection'],\n    '6028': ['FD', '1', 'ReferencePixelPhysicalValueX'],\n    '602A': ['FD', '1', 'ReferencePixelPhysicalValueY'],\n    '602C': ['FD', '1', 'PhysicalDeltaX'],\n    '602E': ['FD', '1', 'PhysicalDeltaY'],\n    '6030': ['UL', '1', 'TransducerFrequency'],\n    '6031': ['CS', '1', 'TransducerType'],\n    '6032': ['UL', '1', 'PulseRepetitionFrequency'],\n    '6034': ['FD', '1', 'DopplerCorrectionAngle'],\n    '6036': ['FD', '1', 'SteeringAngle'],\n    '6038': ['UL', '1', 'DopplerSampleVolumeXPositionRetired'],\n    '6039': ['SL', '1', 'DopplerSampleVolumeXPosition'],\n    '603A': ['UL', '1', 'DopplerSampleVolumeYPositionRetired'],\n    '603B': ['SL', '1', 'DopplerSampleVolumeYPosition'],\n    '603C': ['UL', '1', 'TMLinePositionX0Retired'],\n    '603D': ['SL', '1', 'TMLinePositionX0'],\n    '603E': ['UL', '1', 'TMLinePositionY0Retired'],\n    '603F': ['SL', '1', 'TMLinePositionY0'],\n    '6040': ['UL', '1', 'TMLinePositionX1Retired'],\n    '6041': ['SL', '1', 'TMLinePositionX1'],\n    '6042': ['UL', '1', 'TMLinePositionY1Retired'],\n    '6043': ['SL', '1', 'TMLinePositionY1'],\n    '6044': ['US', '1', 'PixelComponentOrganization'],\n    '6046': ['UL', '1', 'PixelComponentMask'],\n    '6048': ['UL', '1', 'PixelComponentRangeStart'],\n    '604A': ['UL', '1', 'PixelComponentRangeStop'],\n    '604C': ['US', '1', 'PixelComponentPhysicalUnits'],\n    '604E': ['US', '1', 'PixelComponentDataType'],\n    '6050': ['UL', '1', 'NumberOfTableBreakPoints'],\n    '6052': ['UL', '1-n', 'TableOfXBreakPoints'],\n    '6054': ['FD', '1-n', 'TableOfYBreakPoints'],\n    '6056': ['UL', '1', 'NumberOfTableEntries'],\n    '6058': ['UL', '1-n', 'TableOfPixelValues'],\n    '605A': ['FL', '1-n', 'TableOfParameterValues'],\n    '6060': ['FL', '1-n', 'RWaveTimeVector'],\n    '6070': ['US', '1', 'ActiveImageAreaOverlayGroup'],\n    '7000': ['CS', '1', 'DetectorConditionsNominalFlag'],\n    '7001': ['DS', '1', 'DetectorTemperature'],\n    '7004': ['CS', '1', 'DetectorType'],\n    '7005': ['CS', '1', 'DetectorConfiguration'],\n    '7006': ['LT', '1', 'DetectorDescription'],\n    '7008': ['LT', '1', 'DetectorMode'],\n    '700A': ['SH', '1', 'DetectorID'],\n    '700C': ['DA', '1', 'DateOfLastDetectorCalibration'],\n    '700E': ['TM', '1', 'TimeOfLastDetectorCalibration'],\n    '7010': ['IS', '1', 'ExposuresOnDetectorSinceLastCalibration'],\n    '7011': ['IS', '1', 'ExposuresOnDetectorSinceManufactured'],\n    '7012': ['DS', '1', 'DetectorTimeSinceLastExposure'],\n    '7014': ['DS', '1', 'DetectorActiveTime'],\n    '7016': ['DS', '1', 'DetectorActivationOffsetFromExposure'],\n    '701A': ['DS', '2', 'DetectorBinning'],\n    '7020': ['DS', '2', 'DetectorElementPhysicalSize'],\n    '7022': ['DS', '2', 'DetectorElementSpacing'],\n    '7024': ['CS', '1', 'DetectorActiveShape'],\n    '7026': ['DS', '1-2', 'DetectorActiveDimensions'],\n    '7028': ['DS', '2', 'DetectorActiveOrigin'],\n    '702A': ['LO', '1', 'DetectorManufacturerName'],\n    '702B': ['LO', '1', 'DetectorManufacturerModelName'],\n    '7030': ['DS', '2', 'FieldOfViewOrigin'],\n    '7032': ['DS', '1', 'FieldOfViewRotation'],\n    '7034': ['CS', '1', 'FieldOfViewHorizontalFlip'],\n    '7036': ['FL', '2', 'PixelDataAreaOriginRelativeToFOV'],\n    '7038': ['FL', '1', 'PixelDataAreaRotationAngleRelativeToFOV'],\n    '7040': ['LT', '1', 'GridAbsorbingMaterial'],\n    '7041': ['LT', '1', 'GridSpacingMaterial'],\n    '7042': ['DS', '1', 'GridThickness'],\n    '7044': ['DS', '1', 'GridPitch'],\n    '7046': ['IS', '2', 'GridAspectRatio'],\n    '7048': ['DS', '1', 'GridPeriod'],\n    '704C': ['DS', '1', 'GridFocalDistance'],\n    '7050': ['CS', '1-n', 'FilterMaterial'],\n    '7052': ['DS', '1-n', 'FilterThicknessMinimum'],\n    '7054': ['DS', '1-n', 'FilterThicknessMaximum'],\n    '7056': ['FL', '1-n', 'FilterBeamPathLengthMinimum'],\n    '7058': ['FL', '1-n', 'FilterBeamPathLengthMaximum'],\n    '7060': ['CS', '1', 'ExposureControlMode'],\n    '7062': ['LT', '1', 'ExposureControlModeDescription'],\n    '7064': ['CS', '1', 'ExposureStatus'],\n    '7065': ['DS', '1', 'PhototimerSetting'],\n    '8150': ['DS', '1', 'ExposureTimeInuS'],\n    '8151': ['DS', '1', 'XRayTubeCurrentInuA'],\n    '9004': ['CS', '1', 'ContentQualification'],\n    '9005': ['SH', '1', 'PulseSequenceName'],\n    '9006': ['SQ', '1', 'MRImagingModifierSequence'],\n    '9008': ['CS', '1', 'EchoPulseSequence'],\n    '9009': ['CS', '1', 'InversionRecovery'],\n    '9010': ['CS', '1', 'FlowCompensation'],\n    '9011': ['CS', '1', 'MultipleSpinEcho'],\n    '9012': ['CS', '1', 'MultiPlanarExcitation'],\n    '9014': ['CS', '1', 'PhaseContrast'],\n    '9015': ['CS', '1', 'TimeOfFlightContrast'],\n    '9016': ['CS', '1', 'Spoiling'],\n    '9017': ['CS', '1', 'SteadyStatePulseSequence'],\n    '9018': ['CS', '1', 'EchoPlanarPulseSequence'],\n    '9019': ['FD', '1', 'TagAngleFirstAxis'],\n    '9020': ['CS', '1', 'MagnetizationTransfer'],\n    '9021': ['CS', '1', 'T2Preparation'],\n    '9022': ['CS', '1', 'BloodSignalNulling'],\n    '9024': ['CS', '1', 'SaturationRecovery'],\n    '9025': ['CS', '1', 'SpectrallySelectedSuppression'],\n    '9026': ['CS', '1', 'SpectrallySelectedExcitation'],\n    '9027': ['CS', '1', 'SpatialPresaturation'],\n    '9028': ['CS', '1', 'Tagging'],\n    '9029': ['CS', '1', 'OversamplingPhase'],\n    '9030': ['FD', '1', 'TagSpacingFirstDimension'],\n    '9032': ['CS', '1', 'GeometryOfKSpaceTraversal'],\n    '9033': ['CS', '1', 'SegmentedKSpaceTraversal'],\n    '9034': ['CS', '1', 'RectilinearPhaseEncodeReordering'],\n    '9035': ['FD', '1', 'TagThickness'],\n    '9036': ['CS', '1', 'PartialFourierDirection'],\n    '9037': ['CS', '1', 'CardiacSynchronizationTechnique'],\n    '9041': ['LO', '1', 'ReceiveCoilManufacturerName'],\n    '9042': ['SQ', '1', 'MRReceiveCoilSequence'],\n    '9043': ['CS', '1', 'ReceiveCoilType'],\n    '9044': ['CS', '1', 'QuadratureReceiveCoil'],\n    '9045': ['SQ', '1', 'MultiCoilDefinitionSequence'],\n    '9046': ['LO', '1', 'MultiCoilConfiguration'],\n    '9047': ['SH', '1', 'MultiCoilElementName'],\n    '9048': ['CS', '1', 'MultiCoilElementUsed'],\n    '9049': ['SQ', '1', 'MRTransmitCoilSequence'],\n    '9050': ['LO', '1', 'TransmitCoilManufacturerName'],\n    '9051': ['CS', '1', 'TransmitCoilType'],\n    '9052': ['FD', '1-2', 'SpectralWidth'],\n    '9053': ['FD', '1-2', 'ChemicalShiftReference'],\n    '9054': ['CS', '1', 'VolumeLocalizationTechnique'],\n    '9058': ['US', '1', 'MRAcquisitionFrequencyEncodingSteps'],\n    '9059': ['CS', '1', 'Decoupling'],\n    '9060': ['CS', '1-2', 'DecoupledNucleus'],\n    '9061': ['FD', '1-2', 'DecouplingFrequency'],\n    '9062': ['CS', '1', 'DecouplingMethod'],\n    '9063': ['FD', '1-2', 'DecouplingChemicalShiftReference'],\n    '9064': ['CS', '1', 'KSpaceFiltering'],\n    '9065': ['CS', '1-2', 'TimeDomainFiltering'],\n    '9066': ['US', '1-2', 'NumberOfZeroFills'],\n    '9067': ['CS', '1', 'BaselineCorrection'],\n    '9069': ['FD', '1', 'ParallelReductionFactorInPlane'],\n    '9070': ['FD', '1', 'CardiacRRIntervalSpecified'],\n    '9073': ['FD', '1', 'AcquisitionDuration'],\n    '9074': ['DT', '1', 'FrameAcquisitionDateTime'],\n    '9075': ['CS', '1', 'DiffusionDirectionality'],\n    '9076': ['SQ', '1', 'DiffusionGradientDirectionSequence'],\n    '9077': ['CS', '1', 'ParallelAcquisition'],\n    '9078': ['CS', '1', 'ParallelAcquisitionTechnique'],\n    '9079': ['FD', '1-n', 'InversionTimes'],\n    '9080': ['ST', '1', 'MetaboliteMapDescription'],\n    '9081': ['CS', '1', 'PartialFourier'],\n    '9082': ['FD', '1', 'EffectiveEchoTime'],\n    '9083': ['SQ', '1', 'MetaboliteMapCodeSequence'],\n    '9084': ['SQ', '1', 'ChemicalShiftSequence'],\n    '9085': ['CS', '1', 'CardiacSignalSource'],\n    '9087': ['FD', '1', 'DiffusionBValue'],\n    '9089': ['FD', '3', 'DiffusionGradientOrientation'],\n    '9090': ['FD', '3', 'VelocityEncodingDirection'],\n    '9091': ['FD', '1', 'VelocityEncodingMinimumValue'],\n    '9092': ['SQ', '1', 'VelocityEncodingAcquisitionSequence'],\n    '9093': ['US', '1', 'NumberOfKSpaceTrajectories'],\n    '9094': ['CS', '1', 'CoverageOfKSpace'],\n    '9095': ['UL', '1', 'SpectroscopyAcquisitionPhaseRows'],\n    '9096': ['FD', '1', 'ParallelReductionFactorInPlaneRetired'],\n    '9098': ['FD', '1-2', 'TransmitterFrequency'],\n    '9100': ['CS', '1-2', 'ResonantNucleus'],\n    '9101': ['CS', '1', 'FrequencyCorrection'],\n    '9103': ['SQ', '1', 'MRSpectroscopyFOVGeometrySequence'],\n    '9104': ['FD', '1', 'SlabThickness'],\n    '9105': ['FD', '3', 'SlabOrientation'],\n    '9106': ['FD', '3', 'MidSlabPosition'],\n    '9107': ['SQ', '1', 'MRSpatialSaturationSequence'],\n    '9112': ['SQ', '1', 'MRTimingAndRelatedParametersSequence'],\n    '9114': ['SQ', '1', 'MREchoSequence'],\n    '9115': ['SQ', '1', 'MRModifierSequence'],\n    '9117': ['SQ', '1', 'MRDiffusionSequence'],\n    '9118': ['SQ', '1', 'CardiacSynchronizationSequence'],\n    '9119': ['SQ', '1', 'MRAveragesSequence'],\n    '9125': ['SQ', '1', 'MRFOVGeometrySequence'],\n    '9126': ['SQ', '1', 'VolumeLocalizationSequence'],\n    '9127': ['UL', '1', 'SpectroscopyAcquisitionDataColumns'],\n    '9147': ['CS', '1', 'DiffusionAnisotropyType'],\n    '9151': ['DT', '1', 'FrameReferenceDateTime'],\n    '9152': ['SQ', '1', 'MRMetaboliteMapSequence'],\n    '9155': ['FD', '1', 'ParallelReductionFactorOutOfPlane'],\n    '9159': ['UL', '1', 'SpectroscopyAcquisitionOutOfPlanePhaseSteps'],\n    '9166': ['CS', '1', 'BulkMotionStatus'],\n    '9168': ['FD', '1', 'ParallelReductionFactorSecondInPlane'],\n    '9169': ['CS', '1', 'CardiacBeatRejectionTechnique'],\n    '9170': ['CS', '1', 'RespiratoryMotionCompensationTechnique'],\n    '9171': ['CS', '1', 'RespiratorySignalSource'],\n    '9172': ['CS', '1', 'BulkMotionCompensationTechnique'],\n    '9173': ['CS', '1', 'BulkMotionSignalSource'],\n    '9174': ['CS', '1', 'ApplicableSafetyStandardAgency'],\n    '9175': ['LO', '1', 'ApplicableSafetyStandardDescription'],\n    '9176': ['SQ', '1', 'OperatingModeSequence'],\n    '9177': ['CS', '1', 'OperatingModeType'],\n    '9178': ['CS', '1', 'OperatingMode'],\n    '9179': ['CS', '1', 'SpecificAbsorptionRateDefinition'],\n    '9180': ['CS', '1', 'GradientOutputType'],\n    '9181': ['FD', '1', 'SpecificAbsorptionRateValue'],\n    '9182': ['FD', '1', 'GradientOutput'],\n    '9183': ['CS', '1', 'FlowCompensationDirection'],\n    '9184': ['FD', '1', 'TaggingDelay'],\n    '9185': ['ST', '1', 'RespiratoryMotionCompensationTechniqueDescription'],\n    '9186': ['SH', '1', 'RespiratorySignalSourceID'],\n    '9195': ['FD', '1', 'ChemicalShiftMinimumIntegrationLimitInHz'],\n    '9196': ['FD', '1', 'ChemicalShiftMaximumIntegrationLimitInHz'],\n    '9197': ['SQ', '1', 'MRVelocityEncodingSequence'],\n    '9198': ['CS', '1', 'FirstOrderPhaseCorrection'],\n    '9199': ['CS', '1', 'WaterReferencedPhaseCorrection'],\n    '9200': ['CS', '1', 'MRSpectroscopyAcquisitionType'],\n    '9214': ['CS', '1', 'RespiratoryCyclePosition'],\n    '9217': ['FD', '1', 'VelocityEncodingMaximumValue'],\n    '9218': ['FD', '1', 'TagSpacingSecondDimension'],\n    '9219': ['SS', '1', 'TagAngleSecondAxis'],\n    '9220': ['FD', '1', 'FrameAcquisitionDuration'],\n    '9226': ['SQ', '1', 'MRImageFrameTypeSequence'],\n    '9227': ['SQ', '1', 'MRSpectroscopyFrameTypeSequence'],\n    '9231': ['US', '1', 'MRAcquisitionPhaseEncodingStepsInPlane'],\n    '9232': ['US', '1', 'MRAcquisitionPhaseEncodingStepsOutOfPlane'],\n    '9234': ['UL', '1', 'SpectroscopyAcquisitionPhaseColumns'],\n    '9236': ['CS', '1', 'CardiacCyclePosition'],\n    '9239': ['SQ', '1', 'SpecificAbsorptionRateSequence'],\n    '9240': ['US', '1', 'RFEchoTrainLength'],\n    '9241': ['US', '1', 'GradientEchoTrainLength'],\n    '9250': ['CS', '1', 'ArterialSpinLabelingContrast'],\n    '9251': ['SQ', '1', 'MRArterialSpinLabelingSequence'],\n    '9252': ['LO', '1', 'ASLTechniqueDescription'],\n    '9253': ['US', '1', 'ASLSlabNumber'],\n    '9254': ['FD', '1', 'ASLSlabThickness'],\n    '9255': ['FD', '3', 'ASLSlabOrientation'],\n    '9256': ['FD', '3', 'ASLMidSlabPosition'],\n    '9257': ['CS', '1', 'ASLContext'],\n    '9258': ['UL', '1', 'ASLPulseTrainDuration'],\n    '9259': ['CS', '1', 'ASLCrusherFlag'],\n    '925A': ['FD', '1', 'ASLCrusherFlowLimit'],\n    '925B': ['LO', '1', 'ASLCrusherDescription'],\n    '925C': ['CS', '1', 'ASLBolusCutoffFlag'],\n    '925D': ['SQ', '1', 'ASLBolusCutoffTimingSequence'],\n    '925E': ['LO', '1', 'ASLBolusCutoffTechnique'],\n    '925F': ['UL', '1', 'ASLBolusCutoffDelayTime'],\n    '9260': ['SQ', '1', 'ASLSlabSequence'],\n    '9295': ['FD', '1', 'ChemicalShiftMinimumIntegrationLimitInppm'],\n    '9296': ['FD', '1', 'ChemicalShiftMaximumIntegrationLimitInppm'],\n    '9297': ['CS', '1', 'WaterReferenceAcquisition'],\n    '9298': ['IS', '1', 'EchoPeakPosition'],\n    '9301': ['SQ', '1', 'CTAcquisitionTypeSequence'],\n    '9302': ['CS', '1', 'AcquisitionType'],\n    '9303': ['FD', '1', 'TubeAngle'],\n    '9304': ['SQ', '1', 'CTAcquisitionDetailsSequence'],\n    '9305': ['FD', '1', 'RevolutionTime'],\n    '9306': ['FD', '1', 'SingleCollimationWidth'],\n    '9307': ['FD', '1', 'TotalCollimationWidth'],\n    '9308': ['SQ', '1', 'CTTableDynamicsSequence'],\n    '9309': ['FD', '1', 'TableSpeed'],\n    '9310': ['FD', '1', 'TableFeedPerRotation'],\n    '9311': ['FD', '1', 'SpiralPitchFactor'],\n    '9312': ['SQ', '1', 'CTGeometrySequence'],\n    '9313': ['FD', '3', 'DataCollectionCenterPatient'],\n    '9314': ['SQ', '1', 'CTReconstructionSequence'],\n    '9315': ['CS', '1', 'ReconstructionAlgorithm'],\n    '9316': ['CS', '1', 'ConvolutionKernelGroup'],\n    '9317': ['FD', '2', 'ReconstructionFieldOfView'],\n    '9318': ['FD', '3', 'ReconstructionTargetCenterPatient'],\n    '9319': ['FD', '1', 'ReconstructionAngle'],\n    '9320': ['SH', '1', 'ImageFilter'],\n    '9321': ['SQ', '1', 'CTExposureSequence'],\n    '9322': ['FD', '2', 'ReconstructionPixelSpacing'],\n    '9323': ['CS', '1-n', 'ExposureModulationType'],\n    '9324': ['FD', '1', 'EstimatedDoseSaving'],\n    '9325': ['SQ', '1', 'CTXRayDetailsSequence'],\n    '9326': ['SQ', '1', 'CTPositionSequence'],\n    '9327': ['FD', '1', 'TablePosition'],\n    '9328': ['FD', '1', 'ExposureTimeInms'],\n    '9329': ['SQ', '1', 'CTImageFrameTypeSequence'],\n    '9330': ['FD', '1', 'XRayTubeCurrentInmA'],\n    '9332': ['FD', '1', 'ExposureInmAs'],\n    '9333': ['CS', '1', 'ConstantVolumeFlag'],\n    '9334': ['CS', '1', 'FluoroscopyFlag'],\n    '9335': ['FD', '1', 'DistanceSourceToDataCollectionCenter'],\n    '9337': ['US', '1', 'ContrastBolusAgentNumber'],\n    '9338': ['SQ', '1', 'ContrastBolusIngredientCodeSequence'],\n    '9340': ['SQ', '1', 'ContrastAdministrationProfileSequence'],\n    '9341': ['SQ', '1', 'ContrastBolusUsageSequence'],\n    '9342': ['CS', '1', 'ContrastBolusAgentAdministered'],\n    '9343': ['CS', '1', 'ContrastBolusAgentDetected'],\n    '9344': ['CS', '1', 'ContrastBolusAgentPhase'],\n    '9345': ['FD', '1', 'CTDIvol'],\n    '9346': ['SQ', '1', 'CTDIPhantomTypeCodeSequence'],\n    '9351': ['FL', '1', 'CalciumScoringMassFactorPatient'],\n    '9352': ['FL', '3', 'CalciumScoringMassFactorDevice'],\n    '9353': ['FL', '1', 'EnergyWeightingFactor'],\n    '9360': ['SQ', '1', 'CTAdditionalXRaySourceSequence'],\n    '9361': ['CS', '1', 'MultienergyCTAcquisition'],\n    '9362': ['SQ', '1', 'MultienergyCTAcquisitionSequence'],\n    '9363': ['SQ', '1', 'MultienergyCTProcessingSequence'],\n    '9364': ['SQ', '1', 'MultienergyCTCharacteristicsSequence'],\n    '9365': ['SQ', '1', 'MultienergyCTXRaySourceSequence'],\n    '9366': ['US', '1', 'XRaySourceIndex'],\n    '9367': ['UC', '1', 'XRaySourceID'],\n    '9368': ['CS', '1', 'MultienergySourceTechnique'],\n    '9369': ['DT', '1', 'SourceStartDateTime'],\n    '936A': ['DT', '1', 'SourceEndDateTime'],\n    '936B': ['US', '1', 'SwitchingPhaseNumber'],\n    '936C': ['DS', '1', 'SwitchingPhaseNominalDuration'],\n    '936D': ['DS', '1', 'SwitchingPhaseTransitionDuration'],\n    '936E': ['DS', '1', 'EffectiveBinEnergy'],\n    '936F': ['SQ', '1', 'MultienergyCTXRayDetectorSequence'],\n    '9370': ['US', '1', 'XRayDetectorIndex'],\n    '9371': ['UC', '1', 'XRayDetectorID'],\n    '9372': ['CS', '1', 'MultienergyDetectorType'],\n    '9373': ['ST', '1', 'XRayDetectorLabel'],\n    '9374': ['DS', '1', 'NominalMaxEnergy'],\n    '9375': ['DS', '1', 'NominalMinEnergy'],\n    '9376': ['US', '1-n', 'ReferencedXRayDetectorIndex'],\n    '9377': ['US', '1-n', 'ReferencedXRaySourceIndex'],\n    '9378': ['US', '1-n', 'ReferencedPathIndex'],\n    '9379': ['SQ', '1', 'MultienergyCTPathSequence'],\n    '937A': ['US', '1', 'MultienergyCTPathIndex'],\n    '937B': ['UT', '1', 'MultienergyAcquisitionDescription'],\n    '937C': ['FD', '1', 'MonoenergeticEnergyEquivalent'],\n    '937D': ['SQ', '1', 'MaterialCodeSequence'],\n    '937E': ['CS', '1', 'DecompositionMethod'],\n    '937F': ['UT', '1', 'DecompositionDescription'],\n    '9380': ['SQ', '1', 'DecompositionAlgorithmIdentificationSequence'],\n    '9381': ['SQ', '1', 'DecompositionMaterialSequence'],\n    '9382': ['SQ', '1', 'MaterialAttenuationSequence'],\n    '9383': ['DS', '1', 'PhotonEnergy'],\n    '9384': ['DS', '1', 'XRayMassAttenuationCoefficient'],\n    '9401': ['SQ', '1', 'ProjectionPixelCalibrationSequence'],\n    '9402': ['FL', '1', 'DistanceSourceToIsocenter'],\n    '9403': ['FL', '1', 'DistanceObjectToTableTop'],\n    '9404': ['FL', '2', 'ObjectPixelSpacingInCenterOfBeam'],\n    '9405': ['SQ', '1', 'PositionerPositionSequence'],\n    '9406': ['SQ', '1', 'TablePositionSequence'],\n    '9407': ['SQ', '1', 'CollimatorShapeSequence'],\n    '9410': ['CS', '1', 'PlanesInAcquisition'],\n    '9412': ['SQ', '1', 'XAXRFFrameCharacteristicsSequence'],\n    '9417': ['SQ', '1', 'FrameAcquisitionSequence'],\n    '9420': ['CS', '1', 'XRayReceptorType'],\n    '9423': ['LO', '1', 'AcquisitionProtocolName'],\n    '9424': ['LT', '1', 'AcquisitionProtocolDescription'],\n    '9425': ['CS', '1', 'ContrastBolusIngredientOpaque'],\n    '9426': ['FL', '1', 'DistanceReceptorPlaneToDetectorHousing'],\n    '9427': ['CS', '1', 'IntensifierActiveShape'],\n    '9428': ['FL', '1-2', 'IntensifierActiveDimensions'],\n    '9429': ['FL', '2', 'PhysicalDetectorSize'],\n    '9430': ['FL', '2', 'PositionOfIsocenterProjection'],\n    '9432': ['SQ', '1', 'FieldOfViewSequence'],\n    '9433': ['LO', '1', 'FieldOfViewDescription'],\n    '9434': ['SQ', '1', 'ExposureControlSensingRegionsSequence'],\n    '9435': ['CS', '1', 'ExposureControlSensingRegionShape'],\n    '9436': ['SS', '1', 'ExposureControlSensingRegionLeftVerticalEdge'],\n    '9437': ['SS', '1', 'ExposureControlSensingRegionRightVerticalEdge'],\n    '9438': ['SS', '1', 'ExposureControlSensingRegionUpperHorizontalEdge'],\n    '9439': ['SS', '1', 'ExposureControlSensingRegionLowerHorizontalEdge'],\n    '9440': ['SS', '2', 'CenterOfCircularExposureControlSensingRegion'],\n    '9441': ['US', '1', 'RadiusOfCircularExposureControlSensingRegion'],\n    '9442': ['SS', '2-n', 'VerticesOfThePolygonalExposureControlSensingRegion'],\n    '9445': ['', '', ''],\n    '9447': ['FL', '1', 'ColumnAngulationPatient'],\n    '9449': ['FL', '1', 'BeamAngle'],\n    '9451': ['SQ', '1', 'FrameDetectorParametersSequence'],\n    '9452': ['FL', '1', 'CalculatedAnatomyThickness'],\n    '9455': ['SQ', '1', 'CalibrationSequence'],\n    '9456': ['SQ', '1', 'ObjectThicknessSequence'],\n    '9457': ['CS', '1', 'PlaneIdentification'],\n    '9461': ['FL', '1-2', 'FieldOfViewDimensionsInFloat'],\n    '9462': ['SQ', '1', 'IsocenterReferenceSystemSequence'],\n    '9463': ['FL', '1', 'PositionerIsocenterPrimaryAngle'],\n    '9464': ['FL', '1', 'PositionerIsocenterSecondaryAngle'],\n    '9465': ['FL', '1', 'PositionerIsocenterDetectorRotationAngle'],\n    '9466': ['FL', '1', 'TableXPositionToIsocenter'],\n    '9467': ['FL', '1', 'TableYPositionToIsocenter'],\n    '9468': ['FL', '1', 'TableZPositionToIsocenter'],\n    '9469': ['FL', '1', 'TableHorizontalRotationAngle'],\n    '9470': ['FL', '1', 'TableHeadTiltAngle'],\n    '9471': ['FL', '1', 'TableCradleTiltAngle'],\n    '9472': ['SQ', '1', 'FrameDisplayShutterSequence'],\n    '9473': ['FL', '1', 'AcquiredImageAreaDoseProduct'],\n    '9474': ['CS', '1', 'CArmPositionerTabletopRelationship'],\n    '9476': ['SQ', '1', 'XRayGeometrySequence'],\n    '9477': ['SQ', '1', 'IrradiationEventIdentificationSequence'],\n    '9504': ['SQ', '1', 'XRay3DFrameTypeSequence'],\n    '9506': ['SQ', '1', 'ContributingSourcesSequence'],\n    '9507': ['SQ', '1', 'XRay3DAcquisitionSequence'],\n    '9508': ['FL', '1', 'PrimaryPositionerScanArc'],\n    '9509': ['FL', '1', 'SecondaryPositionerScanArc'],\n    '9510': ['FL', '1', 'PrimaryPositionerScanStartAngle'],\n    '9511': ['FL', '1', 'SecondaryPositionerScanStartAngle'],\n    '9514': ['FL', '1', 'PrimaryPositionerIncrement'],\n    '9515': ['FL', '1', 'SecondaryPositionerIncrement'],\n    '9516': ['DT', '1', 'StartAcquisitionDateTime'],\n    '9517': ['DT', '1', 'EndAcquisitionDateTime'],\n    '9518': ['SS', '1', 'PrimaryPositionerIncrementSign'],\n    '9519': ['SS', '1', 'SecondaryPositionerIncrementSign'],\n    '9524': ['LO', '1', 'ApplicationName'],\n    '9525': ['LO', '1', 'ApplicationVersion'],\n    '9526': ['LO', '1', 'ApplicationManufacturer'],\n    '9527': ['CS', '1', 'AlgorithmType'],\n    '9528': ['LO', '1', 'AlgorithmDescription'],\n    '9530': ['SQ', '1', 'XRay3DReconstructionSequence'],\n    '9531': ['LO', '1', 'ReconstructionDescription'],\n    '9538': ['SQ', '1', 'PerProjectionAcquisitionSequence'],\n    '9541': ['SQ', '1', 'DetectorPositionSequence'],\n    '9542': ['SQ', '1', 'XRayAcquisitionDoseSequence'],\n    '9543': ['FD', '1', 'XRaySourceIsocenterPrimaryAngle'],\n    '9544': ['FD', '1', 'XRaySourceIsocenterSecondaryAngle'],\n    '9545': ['FD', '1', 'BreastSupportIsocenterPrimaryAngle'],\n    '9546': ['FD', '1', 'BreastSupportIsocenterSecondaryAngle'],\n    '9547': ['FD', '1', 'BreastSupportXPositionToIsocenter'],\n    '9548': ['FD', '1', 'BreastSupportYPositionToIsocenter'],\n    '9549': ['FD', '1', 'BreastSupportZPositionToIsocenter'],\n    '9550': ['FD', '1', 'DetectorIsocenterPrimaryAngle'],\n    '9551': ['FD', '1', 'DetectorIsocenterSecondaryAngle'],\n    '9552': ['FD', '1', 'DetectorXPositionToIsocenter'],\n    '9553': ['FD', '1', 'DetectorYPositionToIsocenter'],\n    '9554': ['FD', '1', 'DetectorZPositionToIsocenter'],\n    '9555': ['SQ', '1', 'XRayGridSequence'],\n    '9556': ['SQ', '1', 'XRayFilterSequence'],\n    '9557': ['FD', '3', 'DetectorActiveAreaTLHCPosition'],\n    '9558': ['FD', '6', 'DetectorActiveAreaOrientation'],\n    '9559': ['CS', '1', 'PositionerPrimaryAngleDirection'],\n    '9601': ['SQ', '1', 'DiffusionBMatrixSequence'],\n    '9602': ['FD', '1', 'DiffusionBValueXX'],\n    '9603': ['FD', '1', 'DiffusionBValueXY'],\n    '9604': ['FD', '1', 'DiffusionBValueXZ'],\n    '9605': ['FD', '1', 'DiffusionBValueYY'],\n    '9606': ['FD', '1', 'DiffusionBValueYZ'],\n    '9607': ['FD', '1', 'DiffusionBValueZZ'],\n    '9621': ['SQ', '1', 'FunctionalMRSequence'],\n    '9622': ['CS', '1', 'FunctionalSettlingPhaseFramesPresent'],\n    '9623': ['DT', '1', 'FunctionalSyncPulse'],\n    '9624': ['CS', '1', 'SettlingPhaseFrame'],\n    '9701': ['DT', '1', 'DecayCorrectionDateTime'],\n    '9715': ['FD', '1', 'StartDensityThreshold'],\n    '9716': ['FD', '1', 'StartRelativeDensityDifferenceThreshold'],\n    '9717': ['FD', '1', 'StartCardiacTriggerCountThreshold'],\n    '9718': ['FD', '1', 'StartRespiratoryTriggerCountThreshold'],\n    '9719': ['FD', '1', 'TerminationCountsThreshold'],\n    '9720': ['FD', '1', 'TerminationDensityThreshold'],\n    '9721': ['FD', '1', 'TerminationRelativeDensityThreshold'],\n    '9722': ['FD', '1', 'TerminationTimeThreshold'],\n    '9723': ['FD', '1', 'TerminationCardiacTriggerCountThreshold'],\n    '9724': ['FD', '1', 'TerminationRespiratoryTriggerCountThreshold'],\n    '9725': ['CS', '1', 'DetectorGeometry'],\n    '9726': ['FD', '1', 'TransverseDetectorSeparation'],\n    '9727': ['FD', '1', 'AxialDetectorDimension'],\n    '9729': ['US', '1', 'RadiopharmaceuticalAgentNumber'],\n    '9732': ['SQ', '1', 'PETFrameAcquisitionSequence'],\n    '9733': ['SQ', '1', 'PETDetectorMotionDetailsSequence'],\n    '9734': ['SQ', '1', 'PETTableDynamicsSequence'],\n    '9735': ['SQ', '1', 'PETPositionSequence'],\n    '9736': ['SQ', '1', 'PETFrameCorrectionFactorsSequence'],\n    '9737': ['SQ', '1', 'RadiopharmaceuticalUsageSequence'],\n    '9738': ['CS', '1', 'AttenuationCorrectionSource'],\n    '9739': ['US', '1', 'NumberOfIterations'],\n    '9740': ['US', '1', 'NumberOfSubsets'],\n    '9749': ['SQ', '1', 'PETReconstructionSequence'],\n    '9751': ['SQ', '1', 'PETFrameTypeSequence'],\n    '9755': ['CS', '1', 'TimeOfFlightInformationUsed'],\n    '9756': ['CS', '1', 'ReconstructionType'],\n    '9758': ['CS', '1', 'DecayCorrected'],\n    '9759': ['CS', '1', 'AttenuationCorrected'],\n    '9760': ['CS', '1', 'ScatterCorrected'],\n    '9761': ['CS', '1', 'DeadTimeCorrected'],\n    '9762': ['CS', '1', 'GantryMotionCorrected'],\n    '9763': ['CS', '1', 'PatientMotionCorrected'],\n    '9764': ['CS', '1', 'CountLossNormalizationCorrected'],\n    '9765': ['CS', '1', 'RandomsCorrected'],\n    '9766': ['CS', '1', 'NonUniformRadialSamplingCorrected'],\n    '9767': ['CS', '1', 'SensitivityCalibrated'],\n    '9768': ['CS', '1', 'DetectorNormalizationCorrection'],\n    '9769': ['CS', '1', 'IterativeReconstructionMethod'],\n    '9770': ['CS', '1', 'AttenuationCorrectionTemporalRelationship'],\n    '9771': ['SQ', '1', 'PatientPhysiologicalStateSequence'],\n    '9772': ['SQ', '1', 'PatientPhysiologicalStateCodeSequence'],\n    '9801': ['FD', '1-n', 'DepthsOfFocus'],\n    '9803': ['SQ', '1', 'ExcludedIntervalsSequence'],\n    '9804': ['DT', '1', 'ExclusionStartDateTime'],\n    '9805': ['FD', '1', 'ExclusionDuration'],\n    '9806': ['SQ', '1', 'USImageDescriptionSequence'],\n    '9807': ['SQ', '1', 'ImageDataTypeSequence'],\n    '9808': ['CS', '1', 'DataType'],\n    '9809': ['SQ', '1', 'TransducerScanPatternCodeSequence'],\n    '980B': ['CS', '1', 'AliasedDataType'],\n    '980C': ['CS', '1', 'PositionMeasuringDeviceUsed'],\n    '980D': ['SQ', '1', 'TransducerGeometryCodeSequence'],\n    '980E': ['SQ', '1', 'TransducerBeamSteeringCodeSequence'],\n    '980F': ['SQ', '1', 'TransducerApplicationCodeSequence'],\n    '9810': ['xs', '1', 'ZeroVelocityPixelValue'],\n    '9900': ['LO', '1', 'ReferenceLocationLabel'],\n    '9901': ['UT', '1', 'ReferenceLocationDescription'],\n    '9902': ['SQ', '1', 'ReferenceBasisCodeSequence'],\n    '9903': ['SQ', '1', 'ReferenceGeometryCodeSequence'],\n    '9904': ['DS', '1', 'OffsetDistance'],\n    '9905': ['CS', '1', 'OffsetDirection'],\n    '9906': ['SQ', '1', 'PotentialScheduledProtocolCodeSequence'],\n    '9907': ['SQ', '1', 'PotentialRequestedProcedureCodeSequence'],\n    '9908': ['UC', '1-n', 'PotentialReasonsForProcedure'],\n    '9909': ['SQ', '1', 'PotentialReasonsForProcedureCodeSequence'],\n    '990A': ['UC', '1-n', 'PotentialDiagnosticTasks'],\n    '990B': ['SQ', '1', 'ContraindicationsCodeSequence'],\n    '990C': ['SQ', '1', 'ReferencedDefinedProtocolSequence'],\n    '990D': ['SQ', '1', 'ReferencedPerformedProtocolSequence'],\n    '990E': ['SQ', '1', 'PredecessorProtocolSequence'],\n    '990F': ['UT', '1', 'ProtocolPlanningInformation'],\n    '9910': ['UT', '1', 'ProtocolDesignRationale'],\n    '9911': ['SQ', '1', 'PatientSpecificationSequence'],\n    '9912': ['SQ', '1', 'ModelSpecificationSequence'],\n    '9913': ['SQ', '1', 'ParametersSpecificationSequence'],\n    '9914': ['SQ', '1', 'InstructionSequence'],\n    '9915': ['US', '1', 'InstructionIndex'],\n    '9916': ['LO', '1', 'InstructionText'],\n    '9917': ['UT', '1', 'InstructionDescription'],\n    '9918': ['CS', '1', 'InstructionPerformedFlag'],\n    '9919': ['DT', '1', 'InstructionPerformedDateTime'],\n    '991A': ['UT', '1', 'InstructionPerformanceComment'],\n    '991B': ['SQ', '1', 'PatientPositioningInstructionSequence'],\n    '991C': ['SQ', '1', 'PositioningMethodCodeSequence'],\n    '991D': ['SQ', '1', 'PositioningLandmarkSequence'],\n    '991E': ['UI', '1', 'TargetFrameOfReferenceUID'],\n    '991F': ['SQ', '1', 'AcquisitionProtocolElementSpecificationSequence'],\n    '9920': ['SQ', '1', 'AcquisitionProtocolElementSequence'],\n    '9921': ['US', '1', 'ProtocolElementNumber'],\n    '9922': ['LO', '1', 'ProtocolElementName'],\n    '9923': ['UT', '1', 'ProtocolElementCharacteristicsSummary'],\n    '9924': ['UT', '1', 'ProtocolElementPurpose'],\n    '9930': ['CS', '1', 'AcquisitionMotion'],\n    '9931': ['SQ', '1', 'AcquisitionStartLocationSequence'],\n    '9932': ['SQ', '1', 'AcquisitionEndLocationSequence'],\n    '9933': ['SQ', '1', 'ReconstructionProtocolElementSpecificationSequence'],\n    '9934': ['SQ', '1', 'ReconstructionProtocolElementSequence'],\n    '9935': ['SQ', '1', 'StorageProtocolElementSpecificationSequence'],\n    '9936': ['SQ', '1', 'StorageProtocolElementSequence'],\n    '9937': ['LO', '1', 'RequestedSeriesDescription'],\n    '9938': ['US', '1-n', 'SourceAcquisitionProtocolElementNumber'],\n    '9939': ['US', '1-n', 'SourceAcquisitionBeamNumber'],\n    '993A': ['US', '1-n', 'SourceReconstructionProtocolElementNumber'],\n    '993B': ['SQ', '1', 'ReconstructionStartLocationSequence'],\n    '993C': ['SQ', '1', 'ReconstructionEndLocationSequence'],\n    '993D': ['SQ', '1', 'ReconstructionAlgorithmSequence'],\n    '993E': ['SQ', '1', 'ReconstructionTargetCenterLocationSequence'],\n    '9941': ['UT', '1', 'ImageFilterDescription'],\n    '9942': ['FD', '1', 'CTDIvolNotificationTrigger'],\n    '9943': ['FD', '1', 'DLPNotificationTrigger'],\n    '9944': ['CS', '1', 'AutoKVPSelectionType'],\n    '9945': ['FD', '1', 'AutoKVPUpperBound'],\n    '9946': ['FD', '1', 'AutoKVPLowerBound'],\n    '9947': ['CS', '1', 'ProtocolDefinedPatientPosition'],\n    'A001': ['SQ', '1', 'ContributingEquipmentSequence'],\n    'A002': ['DT', '1', 'ContributionDateTime'],\n    'A003': ['ST', '1', 'ContributionDescription']\n  },\n  '0020': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '000D': ['UI', '1', 'StudyInstanceUID'],\n    '000E': ['UI', '1', 'SeriesInstanceUID'],\n    '0010': ['SH', '1', 'StudyID'],\n    '0011': ['IS', '1', 'SeriesNumber'],\n    '0012': ['IS', '1', 'AcquisitionNumber'],\n    '0013': ['IS', '1', 'InstanceNumber'],\n    '0014': ['IS', '1', 'IsotopeNumber'],\n    '0015': ['IS', '1', 'PhaseNumber'],\n    '0016': ['IS', '1', 'IntervalNumber'],\n    '0017': ['IS', '1', 'TimeSlotNumber'],\n    '0018': ['IS', '1', 'AngleNumber'],\n    '0019': ['IS', '1', 'ItemNumber'],\n    '0020': ['CS', '2', 'PatientOrientation'],\n    '0022': ['IS', '1', 'OverlayNumber'],\n    '0024': ['IS', '1', 'CurveNumber'],\n    '0026': ['IS', '1', 'LUTNumber'],\n    '0030': ['DS', '3', 'ImagePosition'],\n    '0032': ['DS', '3', 'ImagePositionPatient'],\n    '0035': ['DS', '6', 'ImageOrientation'],\n    '0037': ['DS', '6', 'ImageOrientationPatient'],\n    '0050': ['DS', '1', 'Location'],\n    '0052': ['UI', '1', 'FrameOfReferenceUID'],\n    '0060': ['CS', '1', 'Laterality'],\n    '0062': ['CS', '1', 'ImageLaterality'],\n    '0070': ['LO', '1', 'ImageGeometryType'],\n    '0080': ['CS', '1-n', 'MaskingImage'],\n    '00AA': ['IS', '1', 'ReportNumber'],\n    '0100': ['IS', '1', 'TemporalPositionIdentifier'],\n    '0105': ['IS', '1', 'NumberOfTemporalPositions'],\n    '0110': ['DS', '1', 'TemporalResolution'],\n    '0200': ['UI', '1', 'SynchronizationFrameOfReferenceUID'],\n    '0242': ['UI', '1', 'SOPInstanceUIDOfConcatenationSource'],\n    '1000': ['IS', '1', 'SeriesInStudy'],\n    '1001': ['IS', '1', 'AcquisitionsInSeries'],\n    '1002': ['IS', '1', 'ImagesInAcquisition'],\n    '1003': ['IS', '1', 'ImagesInSeries'],\n    '1004': ['IS', '1', 'AcquisitionsInStudy'],\n    '1005': ['IS', '1', 'ImagesInStudy'],\n    '1020': ['LO', '1-n', 'Reference'],\n    '103F': ['LO', '1', 'TargetPositionReferenceIndicator'],\n    '1040': ['LO', '1', 'PositionReferenceIndicator'],\n    '1041': ['DS', '1', 'SliceLocation'],\n    '1070': ['IS', '1-n', 'OtherStudyNumbers'],\n    '1200': ['IS', '1', 'NumberOfPatientRelatedStudies'],\n    '1202': ['IS', '1', 'NumberOfPatientRelatedSeries'],\n    '1204': ['IS', '1', 'NumberOfPatientRelatedInstances'],\n    '1206': ['IS', '1', 'NumberOfStudyRelatedSeries'],\n    '1208': ['IS', '1', 'NumberOfStudyRelatedInstances'],\n    '1209': ['IS', '1', 'NumberOfSeriesRelatedInstances'],\n    '3100': ['CS', '1-n', 'SourceImageIDs'],\n    '3401': ['CS', '1', 'ModifyingDeviceID'],\n    '3402': ['CS', '1', 'ModifiedImageID'],\n    '3403': ['DA', '1', 'ModifiedImageDate'],\n    '3404': ['LO', '1', 'ModifyingDeviceManufacturer'],\n    '3405': ['TM', '1', 'ModifiedImageTime'],\n    '3406': ['LO', '1', 'ModifiedImageDescription'],\n    '4000': ['LT', '1', 'ImageComments'],\n    '5000': ['AT', '1-n', 'OriginalImageIdentification'],\n    '5002': ['LO', '1-n', 'OriginalImageIdentificationNomenclature'],\n    '9056': ['SH', '1', 'StackID'],\n    '9057': ['UL', '1', 'InStackPositionNumber'],\n    '9071': ['SQ', '1', 'FrameAnatomySequence'],\n    '9072': ['CS', '1', 'FrameLaterality'],\n    '9111': ['SQ', '1', 'FrameContentSequence'],\n    '9113': ['SQ', '1', 'PlanePositionSequence'],\n    '9116': ['SQ', '1', 'PlaneOrientationSequence'],\n    '9128': ['UL', '1', 'TemporalPositionIndex'],\n    '9153': ['FD', '1', 'NominalCardiacTriggerDelayTime'],\n    '9154': ['FL', '1', 'NominalCardiacTriggerTimePriorToRPeak'],\n    '9155': ['FL', '1', 'ActualCardiacTriggerTimePriorToRPeak'],\n    '9156': ['US', '1', 'FrameAcquisitionNumber'],\n    '9157': ['UL', '1-n', 'DimensionIndexValues'],\n    '9158': ['LT', '1', 'FrameComments'],\n    '9161': ['UI', '1', 'ConcatenationUID'],\n    '9162': ['US', '1', 'InConcatenationNumber'],\n    '9163': ['US', '1', 'InConcatenationTotalNumber'],\n    '9164': ['UI', '1', 'DimensionOrganizationUID'],\n    '9165': ['AT', '1', 'DimensionIndexPointer'],\n    '9167': ['AT', '1', 'FunctionalGroupPointer'],\n    '9170': ['SQ', '1', 'UnassignedSharedConvertedAttributesSequence'],\n    '9171': ['SQ', '1', 'UnassignedPerFrameConvertedAttributesSequence'],\n    '9172': ['SQ', '1', 'ConversionSourceAttributesSequence'],\n    '9213': ['LO', '1', 'DimensionIndexPrivateCreator'],\n    '9221': ['SQ', '1', 'DimensionOrganizationSequence'],\n    '9222': ['SQ', '1', 'DimensionIndexSequence'],\n    '9228': ['UL', '1', 'ConcatenationFrameOffsetNumber'],\n    '9238': ['LO', '1', 'FunctionalGroupPrivateCreator'],\n    '9241': ['FL', '1', 'NominalPercentageOfCardiacPhase'],\n    '9245': ['FL', '1', 'NominalPercentageOfRespiratoryPhase'],\n    '9246': ['FL', '1', 'StartingRespiratoryAmplitude'],\n    '9247': ['CS', '1', 'StartingRespiratoryPhase'],\n    '9248': ['FL', '1', 'EndingRespiratoryAmplitude'],\n    '9249': ['CS', '1', 'EndingRespiratoryPhase'],\n    '9250': ['CS', '1', 'RespiratoryTriggerType'],\n    '9251': ['FD', '1', 'RRIntervalTimeNominal'],\n    '9252': ['FD', '1', 'ActualCardiacTriggerDelayTime'],\n    '9253': ['SQ', '1', 'RespiratorySynchronizationSequence'],\n    '9254': ['FD', '1', 'RespiratoryIntervalTime'],\n    '9255': ['FD', '1', 'NominalRespiratoryTriggerDelayTime'],\n    '9256': ['FD', '1', 'RespiratoryTriggerDelayThreshold'],\n    '9257': ['FD', '1', 'ActualRespiratoryTriggerDelayTime'],\n    '9301': ['FD', '3', 'ImagePositionVolume'],\n    '9302': ['FD', '6', 'ImageOrientationVolume'],\n    '9307': ['CS', '1', 'UltrasoundAcquisitionGeometry'],\n    '9308': ['FD', '3', 'ApexPosition'],\n    '9309': ['FD', '16', 'VolumeToTransducerMappingMatrix'],\n    '930A': ['FD', '16', 'VolumeToTableMappingMatrix'],\n    '930B': ['CS', '1', 'VolumeToTransducerRelationship'],\n    '930C': ['CS', '1', 'PatientFrameOfReferenceSource'],\n    '930D': ['FD', '1', 'TemporalPositionTimeOffset'],\n    '930E': ['SQ', '1', 'PlanePositionVolumeSequence'],\n    '930F': ['SQ', '1', 'PlaneOrientationVolumeSequence'],\n    '9310': ['SQ', '1', 'TemporalPositionSequence'],\n    '9311': ['CS', '1', 'DimensionOrganizationType'],\n    '9312': ['UI', '1', 'VolumeFrameOfReferenceUID'],\n    '9313': ['UI', '1', 'TableFrameOfReferenceUID'],\n    '9421': ['LO', '1', 'DimensionDescriptionLabel'],\n    '9450': ['SQ', '1', 'PatientOrientationInFrameSequence'],\n    '9453': ['LO', '1', 'FrameLabel'],\n    '9518': ['US', '1-n', 'AcquisitionIndex'],\n    '9529': ['SQ', '1', 'ContributingSOPInstancesReferenceSequence'],\n    '9536': ['US', '1', 'ReconstructionIndex']\n  },\n  '0022': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['US', '1', 'LightPathFilterPassThroughWavelength'],\n    '0002': ['US', '2', 'LightPathFilterPassBand'],\n    '0003': ['US', '1', 'ImagePathFilterPassThroughWavelength'],\n    '0004': ['US', '2', 'ImagePathFilterPassBand'],\n    '0005': ['CS', '1', 'PatientEyeMovementCommanded'],\n    '0006': ['SQ', '1', 'PatientEyeMovementCommandCodeSequence'],\n    '0007': ['FL', '1', 'SphericalLensPower'],\n    '0008': ['FL', '1', 'CylinderLensPower'],\n    '0009': ['FL', '1', 'CylinderAxis'],\n    '000A': ['FL', '1', 'EmmetropicMagnification'],\n    '000B': ['FL', '1', 'IntraOcularPressure'],\n    '000C': ['FL', '1', 'HorizontalFieldOfView'],\n    '000D': ['CS', '1', 'PupilDilated'],\n    '000E': ['FL', '1', 'DegreeOfDilation'],\n    '0010': ['FL', '1', 'StereoBaselineAngle'],\n    '0011': ['FL', '1', 'StereoBaselineDisplacement'],\n    '0012': ['FL', '1', 'StereoHorizontalPixelOffset'],\n    '0013': ['FL', '1', 'StereoVerticalPixelOffset'],\n    '0014': ['FL', '1', 'StereoRotation'],\n    '0015': ['SQ', '1', 'AcquisitionDeviceTypeCodeSequence'],\n    '0016': ['SQ', '1', 'IlluminationTypeCodeSequence'],\n    '0017': ['SQ', '1', 'LightPathFilterTypeStackCodeSequence'],\n    '0018': ['SQ', '1', 'ImagePathFilterTypeStackCodeSequence'],\n    '0019': ['SQ', '1', 'LensesCodeSequence'],\n    '001A': ['SQ', '1', 'ChannelDescriptionCodeSequence'],\n    '001B': ['SQ', '1', 'RefractiveStateSequence'],\n    '001C': ['SQ', '1', 'MydriaticAgentCodeSequence'],\n    '001D': ['SQ', '1', 'RelativeImagePositionCodeSequence'],\n    '001E': ['FL', '1', 'CameraAngleOfView'],\n    '0020': ['SQ', '1', 'StereoPairsSequence'],\n    '0021': ['SQ', '1', 'LeftImageSequence'],\n    '0022': ['SQ', '1', 'RightImageSequence'],\n    '0028': ['CS', '1', 'StereoPairsPresent'],\n    '0030': ['FL', '1', 'AxialLengthOfTheEye'],\n    '0031': ['SQ', '1', 'OphthalmicFrameLocationSequence'],\n    '0032': ['FL', '2-2n', 'ReferenceCoordinates'],\n    '0035': ['FL', '1', 'DepthSpatialResolution'],\n    '0036': ['FL', '1', 'MaximumDepthDistortion'],\n    '0037': ['FL', '1', 'AlongScanSpatialResolution'],\n    '0038': ['FL', '1', 'MaximumAlongScanDistortion'],\n    '0039': ['CS', '1', 'OphthalmicImageOrientation'],\n    '0041': ['FL', '1', 'DepthOfTransverseImage'],\n    '0042': ['SQ', '1', 'MydriaticAgentConcentrationUnitsSequence'],\n    '0048': ['FL', '1', 'AcrossScanSpatialResolution'],\n    '0049': ['FL', '1', 'MaximumAcrossScanDistortion'],\n    '004E': ['DS', '1', 'MydriaticAgentConcentration'],\n    '0055': ['FL', '1', 'IlluminationWaveLength'],\n    '0056': ['FL', '1', 'IlluminationPower'],\n    '0057': ['FL', '1', 'IlluminationBandwidth'],\n    '0058': ['SQ', '1', 'MydriaticAgentSequence'],\n    '1007': ['SQ', '1', 'OphthalmicAxialMeasurementsRightEyeSequence'],\n    '1008': ['SQ', '1', 'OphthalmicAxialMeasurementsLeftEyeSequence'],\n    '1009': ['CS', '1', 'OphthalmicAxialMeasurementsDeviceType'],\n    '1010': ['CS', '1', 'OphthalmicAxialLengthMeasurementsType'],\n    '1012': ['SQ', '1', 'OphthalmicAxialLengthSequence'],\n    '1019': ['FL', '1', 'OphthalmicAxialLength'],\n    '1024': ['SQ', '1', 'LensStatusCodeSequence'],\n    '1025': ['SQ', '1', 'VitreousStatusCodeSequence'],\n    '1028': ['SQ', '1', 'IOLFormulaCodeSequence'],\n    '1029': ['LO', '1', 'IOLFormulaDetail'],\n    '1033': ['FL', '1', 'KeratometerIndex'],\n    '1035': ['SQ', '1', 'SourceOfOphthalmicAxialLengthCodeSequence'],\n    '1036': ['SQ', '1', 'SourceOfCornealSizeDataCodeSequence'],\n    '1037': ['FL', '1', 'TargetRefraction'],\n    '1039': ['CS', '1', 'RefractiveProcedureOccurred'],\n    '1040': ['SQ', '1', 'RefractiveSurgeryTypeCodeSequence'],\n    '1044': ['SQ', '1', 'OphthalmicUltrasoundMethodCodeSequence'],\n    '1045': ['SQ', '1', 'SurgicallyInducedAstigmatismSequence'],\n    '1046': ['CS', '1', 'TypeOfOpticalCorrection'],\n    '1047': ['SQ', '1', 'ToricIOLPowerSequence'],\n    '1048': ['SQ', '1', 'PredictedToricErrorSequence'],\n    '1049': ['CS', '1', 'PreSelectedForImplantation'],\n    '104A': ['SQ', '1', 'ToricIOLPowerForExactEmmetropiaSequence'],\n    '104B': ['SQ', '1', 'ToricIOLPowerForExactTargetRefractionSequence'],\n    '1050': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSequence'],\n    '1053': ['FL', '1', 'IOLPower'],\n    '1054': ['FL', '1', 'PredictedRefractiveError'],\n    '1059': ['FL', '1', 'OphthalmicAxialLengthVelocity'],\n    '1065': ['LO', '1', 'LensStatusDescription'],\n    '1066': ['LO', '1', 'VitreousStatusDescription'],\n    '1090': ['SQ', '1', 'IOLPowerSequence'],\n    '1092': ['SQ', '1', 'LensConstantSequence'],\n    '1093': ['LO', '1', 'IOLManufacturer'],\n    '1094': ['LO', '1', 'LensConstantDescription'],\n    '1095': ['LO', '1', 'ImplantName'],\n    '1096': ['SQ', '1', 'KeratometryMeasurementTypeCodeSequence'],\n    '1097': ['LO', '1', 'ImplantPartNumber'],\n    '1100': ['SQ', '1', 'ReferencedOphthalmicAxialMeasurementsSequence'],\n    '1101': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence'],\n    '1103': ['SQ', '1', 'RefractiveErrorBeforeRefractiveSurgeryCodeSequence'],\n    '1121': ['FL', '1', 'IOLPowerForExactEmmetropia'],\n    '1122': ['FL', '1', 'IOLPowerForExactTargetRefraction'],\n    '1125': ['SQ', '1', 'AnteriorChamberDepthDefinitionCodeSequence'],\n    '1127': ['SQ', '1', 'LensThicknessSequence'],\n    '1128': ['SQ', '1', 'AnteriorChamberDepthSequence'],\n    '112A': ['SQ', '1', 'CalculationCommentSequence'],\n    '112B': ['CS', '1', 'CalculationCommentType'],\n    '112C': ['LT', '1', 'CalculationComment'],\n    '1130': ['FL', '1', 'LensThickness'],\n    '1131': ['FL', '1', 'AnteriorChamberDepth'],\n    '1132': ['SQ', '1', 'SourceOfLensThicknessDataCodeSequence'],\n    '1133': ['SQ', '1', 'SourceOfAnteriorChamberDepthDataCodeSequence'],\n    '1134': ['SQ', '1', 'SourceOfRefractiveMeasurementsSequence'],\n    '1135': ['SQ', '1', 'SourceOfRefractiveMeasurementsCodeSequence'],\n    '1140': ['CS', '1', 'OphthalmicAxialLengthMeasurementModified'],\n    '1150': ['SQ', '1', 'OphthalmicAxialLengthDataSourceCodeSequence'],\n    '1153': ['SQ', '1', 'OphthalmicAxialLengthAcquisitionMethodCodeSequence'],\n    '1155': ['FL', '1', 'SignalToNoiseRatio'],\n    '1159': ['LO', '1', 'OphthalmicAxialLengthDataSourceDescription'],\n    '1210': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsTotalLengthSequence'],\n    '1211': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSegmentalLengthSequence'],\n    '1212': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsLengthSummationSequence'],\n    '1220': ['SQ', '1', 'UltrasoundOphthalmicAxialLengthMeasurementsSequence'],\n    '1225': ['SQ', '1', 'OpticalOphthalmicAxialLengthMeasurementsSequence'],\n    '1230': ['SQ', '1', 'UltrasoundSelectedOphthalmicAxialLengthSequence'],\n    '1250': ['SQ', '1', 'OphthalmicAxialLengthSelectionMethodCodeSequence'],\n    '1255': ['SQ', '1', 'OpticalSelectedOphthalmicAxialLengthSequence'],\n    '1257': ['SQ', '1', 'SelectedSegmentalOphthalmicAxialLengthSequence'],\n    '1260': ['SQ', '1', 'SelectedTotalOphthalmicAxialLengthSequence'],\n    '1262': ['SQ', '1', 'OphthalmicAxialLengthQualityMetricSequence'],\n    '1265': ['SQ', '1', 'OphthalmicAxialLengthQualityMetricTypeCodeSequence'],\n    '1273': ['LO', '1', 'OphthalmicAxialLengthQualityMetricTypeDescription'],\n    '1300': ['SQ', '1', 'IntraocularLensCalculationsRightEyeSequence'],\n    '1310': ['SQ', '1', 'IntraocularLensCalculationsLeftEyeSequence'],\n    '1330': ['SQ', '1', 'ReferencedOphthalmicAxialLengthMeasurementQCImageSequence'],\n    '1415': ['CS', '1', 'OphthalmicMappingDeviceType'],\n    '1420': ['SQ', '1', 'AcquisitionMethodCodeSequence'],\n    '1423': ['SQ', '1', 'AcquisitionMethodAlgorithmSequence'],\n    '1436': ['SQ', '1', 'OphthalmicThicknessMapTypeCodeSequence'],\n    '1443': ['SQ', '1', 'OphthalmicThicknessMappingNormalsSequence'],\n    '1445': ['SQ', '1', 'RetinalThicknessDefinitionCodeSequence'],\n    '1450': ['SQ', '1', 'PixelValueMappingToCodedConceptSequence'],\n    '1452': ['xs', '1', 'MappedPixelValue'],\n    '1454': ['LO', '1', 'PixelValueMappingExplanation'],\n    '1458': ['SQ', '1', 'OphthalmicThicknessMapQualityThresholdSequence'],\n    '1460': ['FL', '1', 'OphthalmicThicknessMapThresholdQualityRating'],\n    '1463': ['FL', '2', 'AnatomicStructureReferencePoint'],\n    '1465': ['SQ', '1', 'RegistrationToLocalizerSequence'],\n    '1466': ['CS', '1', 'RegisteredLocalizerUnits'],\n    '1467': ['FL', '2', 'RegisteredLocalizerTopLeftHandCorner'],\n    '1468': ['FL', '2', 'RegisteredLocalizerBottomRightHandCorner'],\n    '1470': ['SQ', '1', 'OphthalmicThicknessMapQualityRatingSequence'],\n    '1472': ['SQ', '1', 'RelevantOPTAttributesSequence'],\n    '1512': ['SQ', '1', 'TransformationMethodCodeSequence'],\n    '1513': ['SQ', '1', 'TransformationAlgorithmSequence'],\n    '1515': ['CS', '1', 'OphthalmicAxialLengthMethod'],\n    '1517': ['FL', '1', 'OphthalmicFOV'],\n    '1518': ['SQ', '1', 'TwoDimensionalToThreeDimensionalMapSequence'],\n    '1525': ['SQ', '1', 'WideFieldOphthalmicPhotographyQualityRatingSequence'],\n    '1526': ['SQ', '1', 'WideFieldOphthalmicPhotographyQualityThresholdSequence'],\n    '1527': ['FL', '1', 'WideFieldOphthalmicPhotographyThresholdQualityRating'],\n    '1528': ['FL', '1', 'XCoordinatesCenterPixelViewAngle'],\n    '1529': ['FL', '1', 'YCoordinatesCenterPixelViewAngle'],\n    '1530': ['UL', '1', 'NumberOfMapPoints'],\n    '1531': ['OF', '1', 'TwoDimensionalToThreeDimensionalMapData'],\n    '1612': ['SQ', '1', 'DerivationAlgorithmSequence'],\n    '1615': ['SQ', '1', 'OphthalmicImageTypeCodeSequence'],\n    '1616': ['LO', '1', 'OphthalmicImageTypeDescription'],\n    '1618': ['SQ', '1', 'ScanPatternTypeCodeSequence'],\n    '1620': ['SQ', '1', 'ReferencedSurfaceMeshIdentificationSequence'],\n    '1622': ['CS', '1', 'OphthalmicVolumetricPropertiesFlag'],\n    '1624': ['FL', '1', 'OphthalmicAnatomicReferencePointXCoordinate'],\n    '1626': ['FL', '1', 'OphthalmicAnatomicReferencePointYCoordinate'],\n    '1628': ['SQ', '1', 'OphthalmicEnFaceImageQualityRatingSequence'],\n    '1630': ['DS', '1', 'QualityThreshold'],\n    '1640': ['SQ', '1', 'OCTBscanAnalysisAcquisitionParametersSequence'],\n    '1642': ['UL', '1', 'NumberOfBscansPerFrame'],\n    '1643': ['FL', '1', 'BscanSlabThickness'],\n    '1644': ['FL', '1', 'DistanceBetweenBscanSlabs'],\n    '1645': ['FL', '1', 'BscanCycleTime'],\n    '1646': ['FL', '1-n', 'BscanCycleTimeVector'],\n    '1649': ['FL', '1', 'AscanRate'],\n    '1650': ['FL', '1', 'BscanRate'],\n    '1658': ['UL', '1', 'SurfaceMeshZPixelOffset']\n  },\n  '0024': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['FL', '1', 'VisualFieldHorizontalExtent'],\n    '0011': ['FL', '1', 'VisualFieldVerticalExtent'],\n    '0012': ['CS', '1', 'VisualFieldShape'],\n    '0016': ['SQ', '1', 'ScreeningTestModeCodeSequence'],\n    '0018': ['FL', '1', 'MaximumStimulusLuminance'],\n    '0020': ['FL', '1', 'BackgroundLuminance'],\n    '0021': ['SQ', '1', 'StimulusColorCodeSequence'],\n    '0024': ['SQ', '1', 'BackgroundIlluminationColorCodeSequence'],\n    '0025': ['FL', '1', 'StimulusArea'],\n    '0028': ['FL', '1', 'StimulusPresentationTime'],\n    '0032': ['SQ', '1', 'FixationSequence'],\n    '0033': ['SQ', '1', 'FixationMonitoringCodeSequence'],\n    '0034': ['SQ', '1', 'VisualFieldCatchTrialSequence'],\n    '0035': ['US', '1', 'FixationCheckedQuantity'],\n    '0036': ['US', '1', 'PatientNotProperlyFixatedQuantity'],\n    '0037': ['CS', '1', 'PresentedVisualStimuliDataFlag'],\n    '0038': ['US', '1', 'NumberOfVisualStimuli'],\n    '0039': ['CS', '1', 'ExcessiveFixationLossesDataFlag'],\n    '0040': ['CS', '1', 'ExcessiveFixationLosses'],\n    '0042': ['US', '1', 'StimuliRetestingQuantity'],\n    '0044': ['LT', '1', 'CommentsOnPatientPerformanceOfVisualField'],\n    '0045': ['CS', '1', 'FalseNegativesEstimateFlag'],\n    '0046': ['FL', '1', 'FalseNegativesEstimate'],\n    '0048': ['US', '1', 'NegativeCatchTrialsQuantity'],\n    '0050': ['US', '1', 'FalseNegativesQuantity'],\n    '0051': ['CS', '1', 'ExcessiveFalseNegativesDataFlag'],\n    '0052': ['CS', '1', 'ExcessiveFalseNegatives'],\n    '0053': ['CS', '1', 'FalsePositivesEstimateFlag'],\n    '0054': ['FL', '1', 'FalsePositivesEstimate'],\n    '0055': ['CS', '1', 'CatchTrialsDataFlag'],\n    '0056': ['US', '1', 'PositiveCatchTrialsQuantity'],\n    '0057': ['CS', '1', 'TestPointNormalsDataFlag'],\n    '0058': ['SQ', '1', 'TestPointNormalsSequence'],\n    '0059': ['CS', '1', 'GlobalDeviationProbabilityNormalsFlag'],\n    '0060': ['US', '1', 'FalsePositivesQuantity'],\n    '0061': ['CS', '1', 'ExcessiveFalsePositivesDataFlag'],\n    '0062': ['CS', '1', 'ExcessiveFalsePositives'],\n    '0063': ['CS', '1', 'VisualFieldTestNormalsFlag'],\n    '0064': ['SQ', '1', 'ResultsNormalsSequence'],\n    '0065': ['SQ', '1', 'AgeCorrectedSensitivityDeviationAlgorithmSequence'],\n    '0066': ['FL', '1', 'GlobalDeviationFromNormal'],\n    '0067': ['SQ', '1', 'GeneralizedDefectSensitivityDeviationAlgorithmSequence'],\n    '0068': ['FL', '1', 'LocalizedDeviationFromNormal'],\n    '0069': ['LO', '1', 'PatientReliabilityIndicator'],\n    '0070': ['FL', '1', 'VisualFieldMeanSensitivity'],\n    '0071': ['FL', '1', 'GlobalDeviationProbability'],\n    '0072': ['CS', '1', 'LocalDeviationProbabilityNormalsFlag'],\n    '0073': ['FL', '1', 'LocalizedDeviationProbability'],\n    '0074': ['CS', '1', 'ShortTermFluctuationCalculated'],\n    '0075': ['FL', '1', 'ShortTermFluctuation'],\n    '0076': ['CS', '1', 'ShortTermFluctuationProbabilityCalculated'],\n    '0077': ['FL', '1', 'ShortTermFluctuationProbability'],\n    '0078': ['CS', '1', 'CorrectedLocalizedDeviationFromNormalCalculated'],\n    '0079': ['FL', '1', 'CorrectedLocalizedDeviationFromNormal'],\n    '0080': ['CS', '1', 'CorrectedLocalizedDeviationFromNormalProbabilityCalculated'],\n    '0081': ['FL', '1', 'CorrectedLocalizedDeviationFromNormalProbability'],\n    '0083': ['SQ', '1', 'GlobalDeviationProbabilitySequence'],\n    '0085': ['SQ', '1', 'LocalizedDeviationProbabilitySequence'],\n    '0086': ['CS', '1', 'FovealSensitivityMeasured'],\n    '0087': ['FL', '1', 'FovealSensitivity'],\n    '0088': ['FL', '1', 'VisualFieldTestDuration'],\n    '0089': ['SQ', '1', 'VisualFieldTestPointSequence'],\n    '0090': ['FL', '1', 'VisualFieldTestPointXCoordinate'],\n    '0091': ['FL', '1', 'VisualFieldTestPointYCoordinate'],\n    '0092': ['FL', '1', 'AgeCorrectedSensitivityDeviationValue'],\n    '0093': ['CS', '1', 'StimulusResults'],\n    '0094': ['FL', '1', 'SensitivityValue'],\n    '0095': ['CS', '1', 'RetestStimulusSeen'],\n    '0096': ['FL', '1', 'RetestSensitivityValue'],\n    '0097': ['SQ', '1', 'VisualFieldTestPointNormalsSequence'],\n    '0098': ['FL', '1', 'QuantifiedDefect'],\n    '0100': ['FL', '1', 'AgeCorrectedSensitivityDeviationProbabilityValue'],\n    '0102': ['CS', '1', 'GeneralizedDefectCorrectedSensitivityDeviationFlag'],\n    '0103': ['FL', '1', 'GeneralizedDefectCorrectedSensitivityDeviationValue'],\n    '0104': ['FL', '1', 'GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue'],\n    '0105': ['FL', '1', 'MinimumSensitivityValue'],\n    '0106': ['CS', '1', 'BlindSpotLocalized'],\n    '0107': ['FL', '1', 'BlindSpotXCoordinate'],\n    '0108': ['FL', '1', 'BlindSpotYCoordinate'],\n    '0110': ['SQ', '1', 'VisualAcuityMeasurementSequence'],\n    '0112': ['SQ', '1', 'RefractiveParametersUsedOnPatientSequence'],\n    '0113': ['CS', '1', 'MeasurementLaterality'],\n    '0114': ['SQ', '1', 'OphthalmicPatientClinicalInformationLeftEyeSequence'],\n    '0115': ['SQ', '1', 'OphthalmicPatientClinicalInformationRightEyeSequence'],\n    '0117': ['CS', '1', 'FovealPointNormativeDataFlag'],\n    '0118': ['FL', '1', 'FovealPointProbabilityValue'],\n    '0120': ['CS', '1', 'ScreeningBaselineMeasured'],\n    '0122': ['SQ', '1', 'ScreeningBaselineMeasuredSequence'],\n    '0124': ['CS', '1', 'ScreeningBaselineType'],\n    '0126': ['FL', '1', 'ScreeningBaselineValue'],\n    '0202': ['LO', '1', 'AlgorithmSource'],\n    '0306': ['LO', '1', 'DataSetName'],\n    '0307': ['LO', '1', 'DataSetVersion'],\n    '0308': ['LO', '1', 'DataSetSource'],\n    '0309': ['LO', '1', 'DataSetDescription'],\n    '0317': ['SQ', '1', 'VisualFieldTestReliabilityGlobalIndexSequence'],\n    '0320': ['SQ', '1', 'VisualFieldGlobalResultsIndexSequence'],\n    '0325': ['SQ', '1', 'DataObservationSequence'],\n    '0338': ['CS', '1', 'IndexNormalsFlag'],\n    '0341': ['FL', '1', 'IndexProbability'],\n    '0344': ['SQ', '1', 'IndexProbabilitySequence']\n  },\n  '0028': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['US', '1', 'SamplesPerPixel'],\n    '0003': ['US', '1', 'SamplesPerPixelUsed'],\n    '0004': ['CS', '1', 'PhotometricInterpretation'],\n    '0005': ['US', '1', 'ImageDimensions'],\n    '0006': ['US', '1', 'PlanarConfiguration'],\n    '0008': ['IS', '1', 'NumberOfFrames'],\n    '0009': ['AT', '1-n', 'FrameIncrementPointer'],\n    '000A': ['AT', '1-n', 'FrameDimensionPointer'],\n    '0010': ['US', '1', 'Rows'],\n    '0011': ['US', '1', 'Columns'],\n    '0012': ['US', '1', 'Planes'],\n    '0014': ['US', '1', 'UltrasoundColorDataPresent'],\n    '0020': ['', '', ''],\n    '0030': ['DS', '2', 'PixelSpacing'],\n    '0031': ['DS', '2', 'ZoomFactor'],\n    '0032': ['DS', '2', 'ZoomCenter'],\n    '0034': ['IS', '2', 'PixelAspectRatio'],\n    '0040': ['CS', '1', 'ImageFormat'],\n    '0050': ['LO', '1-n', 'ManipulatedImage'],\n    '0051': ['CS', '1-n', 'CorrectedImage'],\n    '005F': ['LO', '1', 'CompressionRecognitionCode'],\n    '0060': ['CS', '1', 'CompressionCode'],\n    '0061': ['SH', '1', 'CompressionOriginator'],\n    '0062': ['LO', '1', 'CompressionLabel'],\n    '0063': ['SH', '1', 'CompressionDescription'],\n    '0065': ['CS', '1-n', 'CompressionSequence'],\n    '0066': ['AT', '1-n', 'CompressionStepPointers'],\n    '0068': ['US', '1', 'RepeatInterval'],\n    '0069': ['US', '1', 'BitsGrouped'],\n    '0070': ['US', '1-n', 'PerimeterTable'],\n    '0071': ['xs', '1', 'PerimeterValue'],\n    '0080': ['US', '1', 'PredictorRows'],\n    '0081': ['US', '1', 'PredictorColumns'],\n    '0082': ['US', '1-n', 'PredictorConstants'],\n    '0090': ['CS', '1', 'BlockedPixels'],\n    '0091': ['US', '1', 'BlockRows'],\n    '0092': ['US', '1', 'BlockColumns'],\n    '0093': ['US', '1', 'RowOverlap'],\n    '0094': ['US', '1', 'ColumnOverlap'],\n    '0100': ['US', '1', 'BitsAllocated'],\n    '0101': ['US', '1', 'BitsStored'],\n    '0102': ['US', '1', 'HighBit'],\n    '0103': ['US', '1', 'PixelRepresentation'],\n    '0104': ['xs', '1', 'SmallestValidPixelValue'],\n    '0105': ['xs', '1', 'LargestValidPixelValue'],\n    '0106': ['xs', '1', 'SmallestImagePixelValue'],\n    '0107': ['xs', '1', 'LargestImagePixelValue'],\n    '0108': ['xs', '1', 'SmallestPixelValueInSeries'],\n    '0109': ['xs', '1', 'LargestPixelValueInSeries'],\n    '0110': ['xs', '1', 'SmallestImagePixelValueInPlane'],\n    '0111': ['xs', '1', 'LargestImagePixelValueInPlane'],\n    '0120': ['xs', '1', 'PixelPaddingValue'],\n    '0121': ['xs', '1', 'PixelPaddingRangeLimit'],\n    '0122': ['FL', '1', 'FloatPixelPaddingValue'],\n    '0123': ['FD', '1', 'DoubleFloatPixelPaddingValue'],\n    '0124': ['FL', '1', 'FloatPixelPaddingRangeLimit'],\n    '0125': ['FD', '1', 'DoubleFloatPixelPaddingRangeLimit'],\n    '0200': ['US', '1', 'ImageLocation'],\n    '0300': ['CS', '1', 'QualityControlImage'],\n    '0301': ['CS', '1', 'BurnedInAnnotation'],\n    '0302': ['CS', '1', 'RecognizableVisualFeatures'],\n    '0303': ['CS', '1', 'LongitudinalTemporalInformationModified'],\n    '0304': ['UI', '1', 'ReferencedColorPaletteInstanceUID'],\n    '0400': ['LO', '1', 'TransformLabel'],\n    '0401': ['LO', '1', 'TransformVersionNumber'],\n    '0402': ['US', '1', 'NumberOfTransformSteps'],\n    '0403': ['LO', '1-n', 'SequenceOfCompressedData'],\n    '0404': ['AT', '1-n', 'DetailsOfCoefficients'],\n    '04x0': ['US', '1', 'RowsForNthOrderCoefficients'],\n    '04x1': ['US', '1', 'ColumnsForNthOrderCoefficients'],\n    '04x2': ['LO', '1-n', 'CoefficientCoding'],\n    '04x3': ['AT', '1-n', 'CoefficientCodingPointers'],\n    '0700': ['LO', '1', 'DCTLabel'],\n    '0701': ['CS', '1-n', 'DataBlockDescription'],\n    '0702': ['AT', '1-n', 'DataBlock'],\n    '0710': ['US', '1', 'NormalizationFactorFormat'],\n    '0720': ['US', '1', 'ZonalMapNumberFormat'],\n    '0721': ['AT', '1-n', 'ZonalMapLocation'],\n    '0722': ['US', '1', 'ZonalMapFormat'],\n    '0730': ['US', '1', 'AdaptiveMapFormat'],\n    '0740': ['US', '1', 'CodeNumberFormat'],\n    '08x0': ['CS', '1-n', 'CodeLabel'],\n    '08x2': ['US', '1', 'NumberOfTables'],\n    '08x3': ['AT', '1-n', 'CodeTableLocation'],\n    '08x4': ['US', '1', 'BitsForCodeWord'],\n    '08x8': ['AT', '1-n', 'ImageDataLocation'],\n    '0A02': ['CS', '1', 'PixelSpacingCalibrationType'],\n    '0A04': ['LO', '1', 'PixelSpacingCalibrationDescription'],\n    '1040': ['CS', '1', 'PixelIntensityRelationship'],\n    '1041': ['SS', '1', 'PixelIntensityRelationshipSign'],\n    '1050': ['DS', '1-n', 'WindowCenter'],\n    '1051': ['DS', '1-n', 'WindowWidth'],\n    '1052': ['DS', '1', 'RescaleIntercept'],\n    '1053': ['DS', '1', 'RescaleSlope'],\n    '1054': ['LO', '1', 'RescaleType'],\n    '1055': ['LO', '1-n', 'WindowCenterWidthExplanation'],\n    '1056': ['CS', '1', 'VOILUTFunction'],\n    '1080': ['CS', '1', 'GrayScale'],\n    '1090': ['CS', '1', 'RecommendedViewingMode'],\n    '1100': ['xs', '3', 'GrayLookupTableDescriptor'],\n    '1101': ['xs', '3', 'RedPaletteColorLookupTableDescriptor'],\n    '1102': ['xs', '3', 'GreenPaletteColorLookupTableDescriptor'],\n    '1103': ['xs', '3', 'BluePaletteColorLookupTableDescriptor'],\n    '1104': ['US', '3', 'AlphaPaletteColorLookupTableDescriptor'],\n    '1111': ['xs', '4', 'LargeRedPaletteColorLookupTableDescriptor'],\n    '1112': ['xs', '4', 'LargeGreenPaletteColorLookupTableDescriptor'],\n    '1113': ['xs', '4', 'LargeBluePaletteColorLookupTableDescriptor'],\n    '1199': ['UI', '1', 'PaletteColorLookupTableUID'],\n    '1200': ['xs', '1-n or 1', 'GrayLookupTableData'],\n    '1201': ['OW', '1', 'RedPaletteColorLookupTableData'],\n    '1202': ['OW', '1', 'GreenPaletteColorLookupTableData'],\n    '1203': ['OW', '1', 'BluePaletteColorLookupTableData'],\n    '1204': ['OW', '1', 'AlphaPaletteColorLookupTableData'],\n    '1211': ['OW', '1', 'LargeRedPaletteColorLookupTableData'],\n    '1212': ['OW', '1', 'LargeGreenPaletteColorLookupTableData'],\n    '1213': ['OW', '1', 'LargeBluePaletteColorLookupTableData'],\n    '1214': ['UI', '1', 'LargePaletteColorLookupTableUID'],\n    '1221': ['OW', '1', 'SegmentedRedPaletteColorLookupTableData'],\n    '1222': ['OW', '1', 'SegmentedGreenPaletteColorLookupTableData'],\n    '1223': ['OW', '1', 'SegmentedBluePaletteColorLookupTableData'],\n    '1224': ['OW', '1', 'SegmentedAlphaPaletteColorLookupTableData'],\n    '1230': ['SQ', '1', 'StoredValueColorRangeSequence'],\n    '1231': ['FD', '1', 'MinimumStoredValueMapped'],\n    '1232': ['FD', '1', 'MaximumStoredValueMapped'],\n    '1300': ['CS', '1', 'BreastImplantPresent'],\n    '1350': ['CS', '1', 'PartialView'],\n    '1351': ['ST', '1', 'PartialViewDescription'],\n    '1352': ['SQ', '1', 'PartialViewCodeSequence'],\n    '135A': ['CS', '1', 'SpatialLocationsPreserved'],\n    '1401': ['SQ', '1', 'DataFrameAssignmentSequence'],\n    '1402': ['CS', '1', 'DataPathAssignment'],\n    '1403': ['US', '1', 'BitsMappedToColorLookupTable'],\n    '1404': ['SQ', '1', 'BlendingLUT1Sequence'],\n    '1405': ['CS', '1', 'BlendingLUT1TransferFunction'],\n    '1406': ['FD', '1', 'BlendingWeightConstant'],\n    '1407': ['US', '3', 'BlendingLookupTableDescriptor'],\n    '1408': ['OW', '1', 'BlendingLookupTableData'],\n    '140B': ['SQ', '1', 'EnhancedPaletteColorLookupTableSequence'],\n    '140C': ['SQ', '1', 'BlendingLUT2Sequence'],\n    '140D': ['CS', '1', 'BlendingLUT2TransferFunction'],\n    '140E': ['CS', '1', 'DataPathID'],\n    '140F': ['CS', '1', 'RGBLUTTransferFunction'],\n    '1410': ['CS', '1', 'AlphaLUTTransferFunction'],\n    '2000': ['OB', '1', 'ICCProfile'],\n    '2002': ['CS', '1', 'ColorSpace'],\n    '2110': ['CS', '1', 'LossyImageCompression'],\n    '2112': ['DS', '1-n', 'LossyImageCompressionRatio'],\n    '2114': ['CS', '1-n', 'LossyImageCompressionMethod'],\n    '3000': ['SQ', '1', 'ModalityLUTSequence'],\n    '3002': ['xs', '3', 'LUTDescriptor'],\n    '3003': ['LO', '1', 'LUTExplanation'],\n    '3004': ['LO', '1', 'ModalityLUTType'],\n    '3006': ['xx', '1-n or 1', 'LUTData'],\n    '3010': ['SQ', '1', 'VOILUTSequence'],\n    '3110': ['SQ', '1', 'SoftcopyVOILUTSequence'],\n    '4000': ['LT', '1', 'ImagePresentationComments'],\n    '5000': ['SQ', '1', 'BiPlaneAcquisitionSequence'],\n    '6010': ['US', '1', 'RepresentativeFrameNumber'],\n    '6020': ['US', '1-n', 'FrameNumbersOfInterest'],\n    '6022': ['LO', '1-n', 'FrameOfInterestDescription'],\n    '6023': ['CS', '1-n', 'FrameOfInterestType'],\n    '6030': ['US', '1-n', 'MaskPointers'],\n    '6040': ['US', '1-n', 'RWavePointer'],\n    '6100': ['SQ', '1', 'MaskSubtractionSequence'],\n    '6101': ['CS', '1', 'MaskOperation'],\n    '6102': ['US', '2-2n', 'ApplicableFrameRange'],\n    '6110': ['US', '1-n', 'MaskFrameNumbers'],\n    '6112': ['US', '1', 'ContrastFrameAveraging'],\n    '6114': ['FL', '2', 'MaskSubPixelShift'],\n    '6120': ['SS', '1', 'TIDOffset'],\n    '6190': ['ST', '1', 'MaskOperationExplanation'],\n    '7000': ['SQ', '1', 'EquipmentAdministratorSequence'],\n    '7001': ['US', '1', 'NumberOfDisplaySubsystems'],\n    '7002': ['US', '1', 'CurrentConfigurationID'],\n    '7003': ['US', '1', 'DisplaySubsystemID'],\n    '7004': ['SH', '1', 'DisplaySubsystemName'],\n    '7005': ['LO', '1', 'DisplaySubsystemDescription'],\n    '7006': ['CS', '1', 'SystemStatus'],\n    '7007': ['LO', '1', 'SystemStatusComment'],\n    '7008': ['SQ', '1', 'TargetLuminanceCharacteristicsSequence'],\n    '7009': ['US', '1', 'LuminanceCharacteristicsID'],\n    '700A': ['SQ', '1', 'DisplaySubsystemConfigurationSequence'],\n    '700B': ['US', '1', 'ConfigurationID'],\n    '700C': ['SH', '1', 'ConfigurationName'],\n    '700D': ['LO', '1', 'ConfigurationDescription'],\n    '700E': ['US', '1', 'ReferencedTargetLuminanceCharacteristicsID'],\n    '700F': ['SQ', '1', 'QAResultsSequence'],\n    '7010': ['SQ', '1', 'DisplaySubsystemQAResultsSequence'],\n    '7011': ['SQ', '1', 'ConfigurationQAResultsSequence'],\n    '7012': ['SQ', '1', 'MeasurementEquipmentSequence'],\n    '7013': ['CS', '1-n', 'MeasurementFunctions'],\n    '7014': ['CS', '1', 'MeasurementEquipmentType'],\n    '7015': ['SQ', '1', 'VisualEvaluationResultSequence'],\n    '7016': ['SQ', '1', 'DisplayCalibrationResultSequence'],\n    '7017': ['US', '1', 'DDLValue'],\n    '7018': ['FL', '2', 'CIExyWhitePoint'],\n    '7019': ['CS', '1', 'DisplayFunctionType'],\n    '701A': ['FL', '1', 'GammaValue'],\n    '701B': ['US', '1', 'NumberOfLuminancePoints'],\n    '701C': ['SQ', '1', 'LuminanceResponseSequence'],\n    '701D': ['FL', '1', 'TargetMinimumLuminance'],\n    '701E': ['FL', '1', 'TargetMaximumLuminance'],\n    '701F': ['FL', '1', 'LuminanceValue'],\n    '7020': ['LO', '1', 'LuminanceResponseDescription'],\n    '7021': ['CS', '1', 'WhitePointFlag'],\n    '7022': ['SQ', '1', 'DisplayDeviceTypeCodeSequence'],\n    '7023': ['SQ', '1', 'DisplaySubsystemSequence'],\n    '7024': ['SQ', '1', 'LuminanceResultSequence'],\n    '7025': ['CS', '1', 'AmbientLightValueSource'],\n    '7026': ['CS', '1-n', 'MeasuredCharacteristics'],\n    '7027': ['SQ', '1', 'LuminanceUniformityResultSequence'],\n    '7028': ['SQ', '1', 'VisualEvaluationTestSequence'],\n    '7029': ['CS', '1', 'TestResult'],\n    '702A': ['LO', '1', 'TestResultComment'],\n    '702B': ['CS', '1', 'TestImageValidation'],\n    '702C': ['SQ', '1', 'TestPatternCodeSequence'],\n    '702D': ['SQ', '1', 'MeasurementPatternCodeSequence'],\n    '702E': ['SQ', '1', 'VisualEvaluationMethodCodeSequence'],\n    '7FE0': ['UR', '1', 'PixelDataProviderURL'],\n    '9001': ['UL', '1', 'DataPointRows'],\n    '9002': ['UL', '1', 'DataPointColumns'],\n    '9003': ['CS', '1', 'SignalDomainColumns'],\n    '9099': ['US', '1', 'LargestMonochromePixelValue'],\n    '9108': ['CS', '1', 'DataRepresentation'],\n    '9110': ['SQ', '1', 'PixelMeasuresSequence'],\n    '9132': ['SQ', '1', 'FrameVOILUTSequence'],\n    '9145': ['SQ', '1', 'PixelValueTransformationSequence'],\n    '9235': ['CS', '1', 'SignalDomainRows'],\n    '9411': ['FL', '1', 'DisplayFilterPercentage'],\n    '9415': ['SQ', '1', 'FramePixelShiftSequence'],\n    '9416': ['US', '1', 'SubtractionItemID'],\n    '9422': ['SQ', '1', 'PixelIntensityRelationshipLUTSequence'],\n    '9443': ['SQ', '1', 'FramePixelDataPropertiesSequence'],\n    '9444': ['CS', '1', 'GeometricalProperties'],\n    '9445': ['FL', '1', 'GeometricMaximumDistortion'],\n    '9446': ['CS', '1-n', 'ImageProcessingApplied'],\n    '9454': ['CS', '1', 'MaskSelectionMode'],\n    '9474': ['CS', '1', 'LUTFunction'],\n    '9478': ['FL', '1', 'MaskVisibilityPercentage'],\n    '9501': ['SQ', '1', 'PixelShiftSequence'],\n    '9502': ['SQ', '1', 'RegionPixelShiftSequence'],\n    '9503': ['SS', '2-2n', 'VerticesOfTheRegion'],\n    '9505': ['SQ', '1', 'MultiFramePresentationSequence'],\n    '9506': ['US', '2-2n', 'PixelShiftFrameRange'],\n    '9507': ['US', '2-2n', 'LUTFrameRange'],\n    '9520': ['DS', '16', 'ImageToEquipmentMappingMatrix'],\n    '9537': ['CS', '1', 'EquipmentCoordinateSystemIdentification']\n  },\n  '0032': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '000A': ['CS', '1', 'StudyStatusID'],\n    '000C': ['CS', '1', 'StudyPriorityID'],\n    '0012': ['LO', '1', 'StudyIDIssuer'],\n    '0032': ['DA', '1', 'StudyVerifiedDate'],\n    '0033': ['TM', '1', 'StudyVerifiedTime'],\n    '0034': ['DA', '1', 'StudyReadDate'],\n    '0035': ['TM', '1', 'StudyReadTime'],\n    '1000': ['DA', '1', 'ScheduledStudyStartDate'],\n    '1001': ['TM', '1', 'ScheduledStudyStartTime'],\n    '1010': ['DA', '1', 'ScheduledStudyStopDate'],\n    '1011': ['TM', '1', 'ScheduledStudyStopTime'],\n    '1020': ['LO', '1', 'ScheduledStudyLocation'],\n    '1021': ['AE', '1-n', 'ScheduledStudyLocationAETitle'],\n    '1030': ['LO', '1', 'ReasonForStudy'],\n    '1031': ['SQ', '1', 'RequestingPhysicianIdentificationSequence'],\n    '1032': ['PN', '1', 'RequestingPhysician'],\n    '1033': ['LO', '1', 'RequestingService'],\n    '1034': ['SQ', '1', 'RequestingServiceCodeSequence'],\n    '1040': ['DA', '1', 'StudyArrivalDate'],\n    '1041': ['TM', '1', 'StudyArrivalTime'],\n    '1050': ['DA', '1', 'StudyCompletionDate'],\n    '1051': ['TM', '1', 'StudyCompletionTime'],\n    '1055': ['CS', '1', 'StudyComponentStatusID'],\n    '1060': ['LO', '1', 'RequestedProcedureDescription'],\n    '1064': ['SQ', '1', 'RequestedProcedureCodeSequence'],\n    '1065': ['SQ', '1', 'RequestedLateralityCodeSequence'],\n    '1066': ['UT', '1', 'ReasonForVisit'],\n    '1067': ['SQ', '1', 'ReasonForVisitCodeSequence'],\n    '1070': ['LO', '1', 'RequestedContrastAgent'],\n    '4000': ['LT', '1', 'StudyComments']\n  },\n  '0034': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'FlowIdentifierSequence'],\n    '0002': ['OB', '1', 'FlowIdentifier'],\n    '0003': ['UI', '1', 'FlowTransferSyntaxUID'],\n    '0004': ['UL', '1', 'FlowRTPSamplingRate'],\n    '0005': ['OB', '1', 'SourceIdentifier'],\n    '0007': ['OB', '1', 'FrameOriginTimestamp'],\n    '0008': ['CS', '1', 'IncludesImagingSubject'],\n    '0009': ['SQ', '1', 'FrameUsefulnessGroupSequence'],\n    '000A': ['SQ', '1', 'RealTimeBulkDataFlowSequence'],\n    '000B': ['SQ', '1', 'CameraPositionGroupSequence'],\n    '000C': ['CS', '1', 'IncludesInformation'],\n    '000D': ['SQ', '1', 'TimeOfFrameGroupSequence']\n  },\n  '0038': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['SQ', '1', 'ReferencedPatientAliasSequence'],\n    '0008': ['CS', '1', 'VisitStatusID'],\n    '0010': ['LO', '1', 'AdmissionID'],\n    '0011': ['LO', '1', 'IssuerOfAdmissionID'],\n    '0014': ['SQ', '1', 'IssuerOfAdmissionIDSequence'],\n    '0016': ['LO', '1', 'RouteOfAdmissions'],\n    '001A': ['DA', '1', 'ScheduledAdmissionDate'],\n    '001B': ['TM', '1', 'ScheduledAdmissionTime'],\n    '001C': ['DA', '1', 'ScheduledDischargeDate'],\n    '001D': ['TM', '1', 'ScheduledDischargeTime'],\n    '001E': ['LO', '1', 'ScheduledPatientInstitutionResidence'],\n    '0020': ['DA', '1', 'AdmittingDate'],\n    '0021': ['TM', '1', 'AdmittingTime'],\n    '0030': ['DA', '1', 'DischargeDate'],\n    '0032': ['TM', '1', 'DischargeTime'],\n    '0040': ['LO', '1', 'DischargeDiagnosisDescription'],\n    '0044': ['SQ', '1', 'DischargeDiagnosisCodeSequence'],\n    '0050': ['LO', '1', 'SpecialNeeds'],\n    '0060': ['LO', '1', 'ServiceEpisodeID'],\n    '0061': ['LO', '1', 'IssuerOfServiceEpisodeID'],\n    '0062': ['LO', '1', 'ServiceEpisodeDescription'],\n    '0064': ['SQ', '1', 'IssuerOfServiceEpisodeIDSequence'],\n    '0100': ['SQ', '1', 'PertinentDocumentsSequence'],\n    '0101': ['SQ', '1', 'PertinentResourcesSequence'],\n    '0102': ['LO', '1', 'ResourceDescription'],\n    '0300': ['LO', '1', 'CurrentPatientLocation'],\n    '0400': ['LO', '1', 'PatientInstitutionResidence'],\n    '0500': ['LO', '1', 'PatientState'],\n    '0502': ['SQ', '1', 'PatientClinicalTrialParticipationSequence'],\n    '4000': ['LT', '1', 'VisitComments']\n  },\n  '003A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['CS', '1', 'WaveformOriginality'],\n    '0005': ['US', '1', 'NumberOfWaveformChannels'],\n    '0010': ['UL', '1', 'NumberOfWaveformSamples'],\n    '001A': ['DS', '1', 'SamplingFrequency'],\n    '0020': ['SH', '1', 'MultiplexGroupLabel'],\n    '0200': ['SQ', '1', 'ChannelDefinitionSequence'],\n    '0202': ['IS', '1', 'WaveformChannelNumber'],\n    '0203': ['SH', '1', 'ChannelLabel'],\n    '0205': ['CS', '1-n', 'ChannelStatus'],\n    '0208': ['SQ', '1', 'ChannelSourceSequence'],\n    '0209': ['SQ', '1', 'ChannelSourceModifiersSequence'],\n    '020A': ['SQ', '1', 'SourceWaveformSequence'],\n    '020C': ['LO', '1', 'ChannelDerivationDescription'],\n    '0210': ['DS', '1', 'ChannelSensitivity'],\n    '0211': ['SQ', '1', 'ChannelSensitivityUnitsSequence'],\n    '0212': ['DS', '1', 'ChannelSensitivityCorrectionFactor'],\n    '0213': ['DS', '1', 'ChannelBaseline'],\n    '0214': ['DS', '1', 'ChannelTimeSkew'],\n    '0215': ['DS', '1', 'ChannelSampleSkew'],\n    '0218': ['DS', '1', 'ChannelOffset'],\n    '021A': ['US', '1', 'WaveformBitsStored'],\n    '0220': ['DS', '1', 'FilterLowFrequency'],\n    '0221': ['DS', '1', 'FilterHighFrequency'],\n    '0222': ['DS', '1', 'NotchFilterFrequency'],\n    '0223': ['DS', '1', 'NotchFilterBandwidth'],\n    '0230': ['FL', '1', 'WaveformDataDisplayScale'],\n    '0231': ['US', '3', 'WaveformDisplayBackgroundCIELabValue'],\n    '0240': ['SQ', '1', 'WaveformPresentationGroupSequence'],\n    '0241': ['US', '1', 'PresentationGroupNumber'],\n    '0242': ['SQ', '1', 'ChannelDisplaySequence'],\n    '0244': ['US', '3', 'ChannelRecommendedDisplayCIELabValue'],\n    '0245': ['FL', '1', 'ChannelPosition'],\n    '0246': ['CS', '1', 'DisplayShadingFlag'],\n    '0247': ['FL', '1', 'FractionalChannelDisplayScale'],\n    '0248': ['FL', '1', 'AbsoluteChannelDisplayScale'],\n    '0300': ['SQ', '1', 'MultiplexedAudioChannelsDescriptionCodeSequence'],\n    '0301': ['IS', '1', 'ChannelIdentificationCode'],\n    '0302': ['CS', '1', 'ChannelMode'],\n    '0310': ['UI', '1', 'MultiplexGroupUID'],\n    '0311': ['DS', '1', 'PowerlineFrequency'],\n    '0312': ['SQ', '1', 'ChannelImpedanceSequence'],\n    '0313': ['DS', '1', 'ImpedanceValue'],\n    '0314': ['DT', '1', 'ImpedanceMeasurementDateTime'],\n    '0315': ['DS', '1', 'ImpedanceMeasurementFrequency'],\n    '0316': ['CS', '1', 'ImpedanceMeasurementCurrentType']\n  },\n  '0040': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['AE', '1-n', 'ScheduledStationAETitle'],\n    '0002': ['DA', '1', 'ScheduledProcedureStepStartDate'],\n    '0003': ['TM', '1', 'ScheduledProcedureStepStartTime'],\n    '0004': ['DA', '1', 'ScheduledProcedureStepEndDate'],\n    '0005': ['TM', '1', 'ScheduledProcedureStepEndTime'],\n    '0006': ['PN', '1', 'ScheduledPerformingPhysicianName'],\n    '0007': ['LO', '1', 'ScheduledProcedureStepDescription'],\n    '0008': ['SQ', '1', 'ScheduledProtocolCodeSequence'],\n    '0009': ['SH', '1', 'ScheduledProcedureStepID'],\n    '000A': ['SQ', '1', 'StageCodeSequence'],\n    '000B': ['SQ', '1', 'ScheduledPerformingPhysicianIdentificationSequence'],\n    '0010': ['SH', '1-n', 'ScheduledStationName'],\n    '0011': ['SH', '1', 'ScheduledProcedureStepLocation'],\n    '0012': ['LO', '1', 'PreMedication'],\n    '0020': ['CS', '1', 'ScheduledProcedureStepStatus'],\n    '0026': ['SQ', '1', 'OrderPlacerIdentifierSequence'],\n    '0027': ['SQ', '1', 'OrderFillerIdentifierSequence'],\n    '0031': ['UT', '1', 'LocalNamespaceEntityID'],\n    '0032': ['UT', '1', 'UniversalEntityID'],\n    '0033': ['CS', '1', 'UniversalEntityIDType'],\n    '0035': ['CS', '1', 'IdentifierTypeCode'],\n    '0036': ['SQ', '1', 'AssigningFacilitySequence'],\n    '0039': ['SQ', '1', 'AssigningJurisdictionCodeSequence'],\n    '003A': ['SQ', '1', 'AssigningAgencyOrDepartmentCodeSequence'],\n    '0100': ['SQ', '1', 'ScheduledProcedureStepSequence'],\n    '0220': ['SQ', '1', 'ReferencedNonImageCompositeSOPInstanceSequence'],\n    '0241': ['AE', '1', 'PerformedStationAETitle'],\n    '0242': ['SH', '1', 'PerformedStationName'],\n    '0243': ['SH', '1', 'PerformedLocation'],\n    '0244': ['DA', '1', 'PerformedProcedureStepStartDate'],\n    '0245': ['TM', '1', 'PerformedProcedureStepStartTime'],\n    '0250': ['DA', '1', 'PerformedProcedureStepEndDate'],\n    '0251': ['TM', '1', 'PerformedProcedureStepEndTime'],\n    '0252': ['CS', '1', 'PerformedProcedureStepStatus'],\n    '0253': ['SH', '1', 'PerformedProcedureStepID'],\n    '0254': ['LO', '1', 'PerformedProcedureStepDescription'],\n    '0255': ['LO', '1', 'PerformedProcedureTypeDescription'],\n    '0260': ['SQ', '1', 'PerformedProtocolCodeSequence'],\n    '0261': ['CS', '1', 'PerformedProtocolType'],\n    '0270': ['SQ', '1', 'ScheduledStepAttributesSequence'],\n    '0275': ['SQ', '1', 'RequestAttributesSequence'],\n    '0280': ['ST', '1', 'CommentsOnThePerformedProcedureStep'],\n    '0281': ['SQ', '1', 'PerformedProcedureStepDiscontinuationReasonCodeSequence'],\n    '0293': ['SQ', '1', 'QuantitySequence'],\n    '0294': ['DS', '1', 'Quantity'],\n    '0295': ['SQ', '1', 'MeasuringUnitsSequence'],\n    '0296': ['SQ', '1', 'BillingItemSequence'],\n    '0300': ['US', '1', 'TotalTimeOfFluoroscopy'],\n    '0301': ['US', '1', 'TotalNumberOfExposures'],\n    '0302': ['US', '1', 'EntranceDose'],\n    '0303': ['US', '1-2', 'ExposedArea'],\n    '0306': ['DS', '1', 'DistanceSourceToEntrance'],\n    '0307': ['DS', '1', 'DistanceSourceToSupport'],\n    '030E': ['SQ', '1', 'ExposureDoseSequence'],\n    '0310': ['ST', '1', 'CommentsOnRadiationDose'],\n    '0312': ['DS', '1', 'XRayOutput'],\n    '0314': ['DS', '1', 'HalfValueLayer'],\n    '0316': ['DS', '1', 'OrganDose'],\n    '0318': ['CS', '1', 'OrganExposed'],\n    '0320': ['SQ', '1', 'BillingProcedureStepSequence'],\n    '0321': ['SQ', '1', 'FilmConsumptionSequence'],\n    '0324': ['SQ', '1', 'BillingSuppliesAndDevicesSequence'],\n    '0330': ['SQ', '1', 'ReferencedProcedureStepSequence'],\n    '0340': ['SQ', '1', 'PerformedSeriesSequence'],\n    '0400': ['LT', '1', 'CommentsOnTheScheduledProcedureStep'],\n    '0440': ['SQ', '1', 'ProtocolContextSequence'],\n    '0441': ['SQ', '1', 'ContentItemModifierSequence'],\n    '0500': ['SQ', '1', 'ScheduledSpecimenSequence'],\n    '050A': ['LO', '1', 'SpecimenAccessionNumber'],\n    '0512': ['LO', '1', 'ContainerIdentifier'],\n    '0513': ['SQ', '1', 'IssuerOfTheContainerIdentifierSequence'],\n    '0515': ['SQ', '1', 'AlternateContainerIdentifierSequence'],\n    '0518': ['SQ', '1', 'ContainerTypeCodeSequence'],\n    '051A': ['LO', '1', 'ContainerDescription'],\n    '0520': ['SQ', '1', 'ContainerComponentSequence'],\n    '0550': ['SQ', '1', 'SpecimenSequence'],\n    '0551': ['LO', '1', 'SpecimenIdentifier'],\n    '0552': ['SQ', '1', 'SpecimenDescriptionSequenceTrial'],\n    '0553': ['ST', '1', 'SpecimenDescriptionTrial'],\n    '0554': ['UI', '1', 'SpecimenUID'],\n    '0555': ['SQ', '1', 'AcquisitionContextSequence'],\n    '0556': ['ST', '1', 'AcquisitionContextDescription'],\n    '0560': ['SQ', '1', 'SpecimenDescriptionSequence'],\n    '0562': ['SQ', '1', 'IssuerOfTheSpecimenIdentifierSequence'],\n    '059A': ['SQ', '1', 'SpecimenTypeCodeSequence'],\n    '0600': ['LO', '1', 'SpecimenShortDescription'],\n    '0602': ['UT', '1', 'SpecimenDetailedDescription'],\n    '0610': ['SQ', '1', 'SpecimenPreparationSequence'],\n    '0612': ['SQ', '1', 'SpecimenPreparationStepContentItemSequence'],\n    '0620': ['SQ', '1', 'SpecimenLocalizationContentItemSequence'],\n    '06FA': ['LO', '1', 'SlideIdentifier'],\n    '0710': ['SQ', '1', 'WholeSlideMicroscopyImageFrameTypeSequence'],\n    '071A': ['SQ', '1', 'ImageCenterPointCoordinatesSequence'],\n    '072A': ['DS', '1', 'XOffsetInSlideCoordinateSystem'],\n    '073A': ['DS', '1', 'YOffsetInSlideCoordinateSystem'],\n    '074A': ['DS', '1', 'ZOffsetInSlideCoordinateSystem'],\n    '08D8': ['SQ', '1', 'PixelSpacingSequence'],\n    '08DA': ['SQ', '1', 'CoordinateSystemAxisCodeSequence'],\n    '08EA': ['SQ', '1', 'MeasurementUnitsCodeSequence'],\n    '09F8': ['SQ', '1', 'VitalStainCodeSequenceTrial'],\n    '1001': ['SH', '1', 'RequestedProcedureID'],\n    '1002': ['LO', '1', 'ReasonForTheRequestedProcedure'],\n    '1003': ['SH', '1', 'RequestedProcedurePriority'],\n    '1004': ['LO', '1', 'PatientTransportArrangements'],\n    '1005': ['LO', '1', 'RequestedProcedureLocation'],\n    '1006': ['SH', '1', 'PlacerOrderNumberProcedure'],\n    '1007': ['SH', '1', 'FillerOrderNumberProcedure'],\n    '1008': ['LO', '1', 'ConfidentialityCode'],\n    '1009': ['SH', '1', 'ReportingPriority'],\n    '100A': ['SQ', '1', 'ReasonForRequestedProcedureCodeSequence'],\n    '1010': ['PN', '1-n', 'NamesOfIntendedRecipientsOfResults'],\n    '1011': ['SQ', '1', 'IntendedRecipientsOfResultsIdentificationSequence'],\n    '1012': ['SQ', '1', 'ReasonForPerformedProcedureCodeSequence'],\n    '1060': ['LO', '1', 'RequestedProcedureDescriptionTrial'],\n    '1101': ['SQ', '1', 'PersonIdentificationCodeSequence'],\n    '1102': ['ST', '1', 'PersonAddress'],\n    '1103': ['LO', '1-n', 'PersonTelephoneNumbers'],\n    '1104': ['LT', '1', 'PersonTelecomInformation'],\n    '1400': ['LT', '1', 'RequestedProcedureComments'],\n    '2001': ['LO', '1', 'ReasonForTheImagingServiceRequest'],\n    '2004': ['DA', '1', 'IssueDateOfImagingServiceRequest'],\n    '2005': ['TM', '1', 'IssueTimeOfImagingServiceRequest'],\n    '2006': ['SH', '1', 'PlacerOrderNumberImagingServiceRequestRetired'],\n    '2007': ['SH', '1', 'FillerOrderNumberImagingServiceRequestRetired'],\n    '2008': ['PN', '1', 'OrderEnteredBy'],\n    '2009': ['SH', '1', 'OrderEntererLocation'],\n    '2010': ['SH', '1', 'OrderCallbackPhoneNumber'],\n    '2011': ['LT', '1', 'OrderCallbackTelecomInformation'],\n    '2016': ['LO', '1', 'PlacerOrderNumberImagingServiceRequest'],\n    '2017': ['LO', '1', 'FillerOrderNumberImagingServiceRequest'],\n    '2400': ['LT', '1', 'ImagingServiceRequestComments'],\n    '3001': ['LO', '1', 'ConfidentialityConstraintOnPatientDataDescription'],\n    '4001': ['CS', '1', 'GeneralPurposeScheduledProcedureStepStatus'],\n    '4002': ['CS', '1', 'GeneralPurposePerformedProcedureStepStatus'],\n    '4003': ['CS', '1', 'GeneralPurposeScheduledProcedureStepPriority'],\n    '4004': ['SQ', '1', 'ScheduledProcessingApplicationsCodeSequence'],\n    '4005': ['DT', '1', 'ScheduledProcedureStepStartDateTime'],\n    '4006': ['CS', '1', 'MultipleCopiesFlag'],\n    '4007': ['SQ', '1', 'PerformedProcessingApplicationsCodeSequence'],\n    '4008': ['DT', '1', 'ScheduledProcedureStepExpirationDateTime'],\n    '4009': ['SQ', '1', 'HumanPerformerCodeSequence'],\n    '4010': ['DT', '1', 'ScheduledProcedureStepModificationDateTime'],\n    '4011': ['DT', '1', 'ExpectedCompletionDateTime'],\n    '4015': ['SQ', '1', 'ResultingGeneralPurposePerformedProcedureStepsSequence'],\n    '4016': ['SQ', '1', 'ReferencedGeneralPurposeScheduledProcedureStepSequence'],\n    '4018': ['SQ', '1', 'ScheduledWorkitemCodeSequence'],\n    '4019': ['SQ', '1', 'PerformedWorkitemCodeSequence'],\n    '4020': ['CS', '1', 'InputAvailabilityFlag'],\n    '4021': ['SQ', '1', 'InputInformationSequence'],\n    '4022': ['SQ', '1', 'RelevantInformationSequence'],\n    '4023': ['UI', '1', 'ReferencedGeneralPurposeScheduledProcedureStepTransactionUID'],\n    '4025': ['SQ', '1', 'ScheduledStationNameCodeSequence'],\n    '4026': ['SQ', '1', 'ScheduledStationClassCodeSequence'],\n    '4027': ['SQ', '1', 'ScheduledStationGeographicLocationCodeSequence'],\n    '4028': ['SQ', '1', 'PerformedStationNameCodeSequence'],\n    '4029': ['SQ', '1', 'PerformedStationClassCodeSequence'],\n    '4030': ['SQ', '1', 'PerformedStationGeographicLocationCodeSequence'],\n    '4031': ['SQ', '1', 'RequestedSubsequentWorkitemCodeSequence'],\n    '4032': ['SQ', '1', 'NonDICOMOutputCodeSequence'],\n    '4033': ['SQ', '1', 'OutputInformationSequence'],\n    '4034': ['SQ', '1', 'ScheduledHumanPerformersSequence'],\n    '4035': ['SQ', '1', 'ActualHumanPerformersSequence'],\n    '4036': ['LO', '1', 'HumanPerformerOrganization'],\n    '4037': ['PN', '1', 'HumanPerformerName'],\n    '4040': ['CS', '1', 'RawDataHandling'],\n    '4041': ['CS', '1', 'InputReadinessState'],\n    '4050': ['DT', '1', 'PerformedProcedureStepStartDateTime'],\n    '4051': ['DT', '1', 'PerformedProcedureStepEndDateTime'],\n    '4052': ['DT', '1', 'ProcedureStepCancellationDateTime'],\n    '4070': ['SQ', '1', 'OutputDestinationSequence'],\n    '4071': ['SQ', '1', 'DICOMStorageSequence'],\n    '4072': ['SQ', '1', 'STOWRSStorageSequence'],\n    '4073': ['UR', '1', 'StorageURL'],\n    '4074': ['SQ', '1', 'XDSStorageSequence'],\n    '8302': ['DS', '1', 'EntranceDoseInmGy'],\n    '8303': ['CS', '1', 'EntranceDoseDerivation'],\n    '9092': ['SQ', '1', 'ParametricMapFrameTypeSequence'],\n    '9094': ['SQ', '1', 'ReferencedImageRealWorldValueMappingSequence'],\n    '9096': ['SQ', '1', 'RealWorldValueMappingSequence'],\n    '9098': ['SQ', '1', 'PixelValueMappingCodeSequence'],\n    '9210': ['SH', '1', 'LUTLabel'],\n    '9211': ['xs', '1', 'RealWorldValueLastValueMapped'],\n    '9212': ['FD', '1-n', 'RealWorldValueLUTData'],\n    '9213': ['FD', '1', 'DoubleFloatRealWorldValueLastValueMapped'],\n    '9214': ['FD', '1', 'DoubleFloatRealWorldValueFirstValueMapped'],\n    '9216': ['xs', '1', 'RealWorldValueFirstValueMapped'],\n    '9220': ['SQ', '1', 'QuantityDefinitionSequence'],\n    '9224': ['FD', '1', 'RealWorldValueIntercept'],\n    '9225': ['FD', '1', 'RealWorldValueSlope'],\n    'A007': ['CS', '1', 'FindingsFlagTrial'],\n    'A010': ['CS', '1', 'RelationshipType'],\n    'A020': ['SQ', '1', 'FindingsSequenceTrial'],\n    'A021': ['UI', '1', 'FindingsGroupUIDTrial'],\n    'A022': ['UI', '1', 'ReferencedFindingsGroupUIDTrial'],\n    'A023': ['DA', '1', 'FindingsGroupRecordingDateTrial'],\n    'A024': ['TM', '1', 'FindingsGroupRecordingTimeTrial'],\n    'A026': ['SQ', '1', 'FindingsSourceCategoryCodeSequenceTrial'],\n    'A027': ['LO', '1', 'VerifyingOrganization'],\n    'A028': ['SQ', '1', 'DocumentingOrganizationIdentifierCodeSequenceTrial'],\n    'A030': ['DT', '1', 'VerificationDateTime'],\n    'A032': ['DT', '1', 'ObservationDateTime'],\n    'A033': ['DT', '1', 'ObservationStartDateTime'],\n    'A040': ['CS', '1', 'ValueType'],\n    'A043': ['SQ', '1', 'ConceptNameCodeSequence'],\n    'A047': ['LO', '1', 'MeasurementPrecisionDescriptionTrial'],\n    'A050': ['CS', '1', 'ContinuityOfContent'],\n    'A057': ['CS', '1-n', 'UrgencyOrPriorityAlertsTrial'],\n    'A060': ['LO', '1', 'SequencingIndicatorTrial'],\n    'A066': ['SQ', '1', 'DocumentIdentifierCodeSequenceTrial'],\n    'A067': ['PN', '1', 'DocumentAuthorTrial'],\n    'A068': ['SQ', '1', 'DocumentAuthorIdentifierCodeSequenceTrial'],\n    'A070': ['SQ', '1', 'IdentifierCodeSequenceTrial'],\n    'A073': ['SQ', '1', 'VerifyingObserverSequence'],\n    'A074': ['OB', '1', 'ObjectBinaryIdentifierTrial'],\n    'A075': ['PN', '1', 'VerifyingObserverName'],\n    'A076': ['SQ', '1', 'DocumentingObserverIdentifierCodeSequenceTrial'],\n    'A078': ['SQ', '1', 'AuthorObserverSequence'],\n    'A07A': ['SQ', '1', 'ParticipantSequence'],\n    'A07C': ['SQ', '1', 'CustodialOrganizationSequence'],\n    'A080': ['CS', '1', 'ParticipationType'],\n    'A082': ['DT', '1', 'ParticipationDateTime'],\n    'A084': ['CS', '1', 'ObserverType'],\n    'A085': ['SQ', '1', 'ProcedureIdentifierCodeSequenceTrial'],\n    'A088': ['SQ', '1', 'VerifyingObserverIdentificationCodeSequence'],\n    'A089': ['OB', '1', 'ObjectDirectoryBinaryIdentifierTrial'],\n    'A090': ['SQ', '1', 'EquivalentCDADocumentSequence'],\n    'A0B0': ['US', '2-2n', 'ReferencedWaveformChannels'],\n    'A110': ['DA', '1', 'DateOfDocumentOrVerbalTransactionTrial'],\n    'A112': ['TM', '1', 'TimeOfDocumentCreationOrVerbalTransactionTrial'],\n    'A120': ['DT', '1', 'DateTime'],\n    'A121': ['DA', '1', 'Date'],\n    'A122': ['TM', '1', 'Time'],\n    'A123': ['PN', '1', 'PersonName'],\n    'A124': ['UI', '1', 'UID'],\n    'A125': ['CS', '2', 'ReportStatusIDTrial'],\n    'A130': ['CS', '1', 'TemporalRangeType'],\n    'A132': ['UL', '1-n', 'ReferencedSamplePositions'],\n    'A136': ['US', '1-n', 'ReferencedFrameNumbers'],\n    'A138': ['DS', '1-n', 'ReferencedTimeOffsets'],\n    'A13A': ['DT', '1-n', 'ReferencedDateTime'],\n    'A160': ['UT', '1', 'TextValue'],\n    'A161': ['FD', '1-n', 'FloatingPointValue'],\n    'A162': ['SL', '1-n', 'RationalNumeratorValue'],\n    'A163': ['UL', '1-n', 'RationalDenominatorValue'],\n    'A167': ['SQ', '1', 'ObservationCategoryCodeSequenceTrial'],\n    'A168': ['SQ', '1', 'ConceptCodeSequence'],\n    'A16A': ['ST', '1', 'BibliographicCitationTrial'],\n    'A170': ['SQ', '1', 'PurposeOfReferenceCodeSequence'],\n    'A171': ['UI', '1', 'ObservationUID'],\n    'A172': ['UI', '1', 'ReferencedObservationUIDTrial'],\n    'A173': ['CS', '1', 'ReferencedObservationClassTrial'],\n    'A174': ['CS', '1', 'ReferencedObjectObservationClassTrial'],\n    'A180': ['US', '1', 'AnnotationGroupNumber'],\n    'A192': ['DA', '1', 'ObservationDateTrial'],\n    'A193': ['TM', '1', 'ObservationTimeTrial'],\n    'A194': ['CS', '1', 'MeasurementAutomationTrial'],\n    'A195': ['SQ', '1', 'ModifierCodeSequence'],\n    'A224': ['ST', '1', 'IdentificationDescriptionTrial'],\n    'A290': ['CS', '1', 'CoordinatesSetGeometricTypeTrial'],\n    'A296': ['SQ', '1', 'AlgorithmCodeSequenceTrial'],\n    'A297': ['ST', '1', 'AlgorithmDescriptionTrial'],\n    'A29A': ['SL', '2-2n', 'PixelCoordinatesSetTrial'],\n    'A300': ['SQ', '1', 'MeasuredValueSequence'],\n    'A301': ['SQ', '1', 'NumericValueQualifierCodeSequence'],\n    'A307': ['PN', '1', 'CurrentObserverTrial'],\n    'A30A': ['DS', '1-n', 'NumericValue'],\n    'A313': ['SQ', '1', 'ReferencedAccessionSequenceTrial'],\n    'A33A': ['ST', '1', 'ReportStatusCommentTrial'],\n    'A340': ['SQ', '1', 'ProcedureContextSequenceTrial'],\n    'A352': ['PN', '1', 'VerbalSourceTrial'],\n    'A353': ['ST', '1', 'AddressTrial'],\n    'A354': ['LO', '1', 'TelephoneNumberTrial'],\n    'A358': ['SQ', '1', 'VerbalSourceIdentifierCodeSequenceTrial'],\n    'A360': ['SQ', '1', 'PredecessorDocumentsSequence'],\n    'A370': ['SQ', '1', 'ReferencedRequestSequence'],\n    'A372': ['SQ', '1', 'PerformedProcedureCodeSequence'],\n    'A375': ['SQ', '1', 'CurrentRequestedProcedureEvidenceSequence'],\n    'A380': ['SQ', '1', 'ReportDetailSequenceTrial'],\n    'A385': ['SQ', '1', 'PertinentOtherEvidenceSequence'],\n    'A390': ['SQ', '1', 'HL7StructuredDocumentReferenceSequence'],\n    'A402': ['UI', '1', 'ObservationSubjectUIDTrial'],\n    'A403': ['CS', '1', 'ObservationSubjectClassTrial'],\n    'A404': ['SQ', '1', 'ObservationSubjectTypeCodeSequenceTrial'],\n    'A491': ['CS', '1', 'CompletionFlag'],\n    'A492': ['LO', '1', 'CompletionFlagDescription'],\n    'A493': ['CS', '1', 'VerificationFlag'],\n    'A494': ['CS', '1', 'ArchiveRequested'],\n    'A496': ['CS', '1', 'PreliminaryFlag'],\n    'A504': ['SQ', '1', 'ContentTemplateSequence'],\n    'A525': ['SQ', '1', 'IdenticalDocumentsSequence'],\n    'A600': ['CS', '1', 'ObservationSubjectContextFlagTrial'],\n    'A601': ['CS', '1', 'ObserverContextFlagTrial'],\n    'A603': ['CS', '1', 'ProcedureContextFlagTrial'],\n    'A730': ['SQ', '1', 'ContentSequence'],\n    'A731': ['SQ', '1', 'RelationshipSequenceTrial'],\n    'A732': ['SQ', '1', 'RelationshipTypeCodeSequenceTrial'],\n    'A744': ['SQ', '1', 'LanguageCodeSequenceTrial'],\n    'A801': ['SQ', '1', 'TabulatedValuesSequence'],\n    'A802': ['UL', '1', 'NumberOfTableRows'],\n    'A803': ['UL', '1', 'NumberOfTableColumns'],\n    'A804': ['UL', '1', 'TableRowNumber'],\n    'A805': ['UL', '1', 'TableColumnNumber'],\n    'A806': ['SQ', '1', 'TableRowDefinitionSequence'],\n    'A807': ['SQ', '1', 'TableColumnDefinitionSequence'],\n    'A808': ['SQ', '1', 'CellValuesSequence'],\n    'A992': ['ST', '1', 'UniformResourceLocatorTrial'],\n    'B020': ['SQ', '1', 'WaveformAnnotationSequence'],\n    'DB00': ['CS', '1', 'TemplateIdentifier'],\n    'DB06': ['DT', '1', 'TemplateVersion'],\n    'DB07': ['DT', '1', 'TemplateLocalVersion'],\n    'DB0B': ['CS', '1', 'TemplateExtensionFlag'],\n    'DB0C': ['UI', '1', 'TemplateExtensionOrganizationUID'],\n    'DB0D': ['UI', '1', 'TemplateExtensionCreatorUID'],\n    'DB73': ['UL', '1-n', 'ReferencedContentItemIdentifier'],\n    'E001': ['ST', '1', 'HL7InstanceIdentifier'],\n    'E004': ['DT', '1', 'HL7DocumentEffectiveTime'],\n    'E006': ['SQ', '1', 'HL7DocumentTypeCodeSequence'],\n    'E008': ['SQ', '1', 'DocumentClassCodeSequence'],\n    'E010': ['UR', '1', 'RetrieveURI'],\n    'E011': ['UI', '1', 'RetrieveLocationUID'],\n    'E020': ['CS', '1', 'TypeOfInstances'],\n    'E021': ['SQ', '1', 'DICOMRetrievalSequence'],\n    'E022': ['SQ', '1', 'DICOMMediaRetrievalSequence'],\n    'E023': ['SQ', '1', 'WADORetrievalSequence'],\n    'E024': ['SQ', '1', 'XDSRetrievalSequence'],\n    'E025': ['SQ', '1', 'WADORSRetrievalSequence'],\n    'E030': ['UI', '1', 'RepositoryUniqueID'],\n    'E031': ['UI', '1', 'HomeCommunityID']\n  },\n  '0042': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ST', '1', 'DocumentTitle'],\n    '0011': ['OB', '1', 'EncapsulatedDocument'],\n    '0012': ['LO', '1', 'MIMETypeOfEncapsulatedDocument'],\n    '0013': ['SQ', '1', 'SourceInstanceSequence'],\n    '0014': ['LO', '1-n', 'ListOfMIMETypes'],\n    '0015': ['UL', '1', 'EncapsulatedDocumentLength']\n  },\n  '0044': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['ST', '1', 'ProductPackageIdentifier'],\n    '0002': ['CS', '1', 'SubstanceAdministrationApproval'],\n    '0003': ['LT', '1', 'ApprovalStatusFurtherDescription'],\n    '0004': ['DT', '1', 'ApprovalStatusDateTime'],\n    '0007': ['SQ', '1', 'ProductTypeCodeSequence'],\n    '0008': ['LO', '1-n', 'ProductName'],\n    '0009': ['LT', '1', 'ProductDescription'],\n    '000A': ['LO', '1', 'ProductLotIdentifier'],\n    '000B': ['DT', '1', 'ProductExpirationDateTime'],\n    '0010': ['DT', '1', 'SubstanceAdministrationDateTime'],\n    '0011': ['LO', '1', 'SubstanceAdministrationNotes'],\n    '0012': ['LO', '1', 'SubstanceAdministrationDeviceID'],\n    '0013': ['SQ', '1', 'ProductParameterSequence'],\n    '0019': ['SQ', '1', 'SubstanceAdministrationParameterSequence'],\n    '0100': ['SQ', '1', 'ApprovalSequence'],\n    '0101': ['SQ', '1', 'AssertionCodeSequence'],\n    '0102': ['UI', '1', 'AssertionUID'],\n    '0103': ['SQ', '1', 'AsserterIdentificationSequence'],\n    '0104': ['DT', '1', 'AssertionDateTime'],\n    '0105': ['DT', '1', 'AssertionExpirationDateTime'],\n    '0106': ['UT', '1', 'AssertionComments'],\n    '0107': ['SQ', '1', 'RelatedAssertionSequence'],\n    '0108': ['UI', '1', 'ReferencedAssertionUID'],\n    '0109': ['SQ', '1', 'ApprovalSubjectSequence'],\n    '010A': ['SQ', '1', 'OrganizationalRoleCodeSequence']\n  },\n  '0046': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0012': ['LO', '1', 'LensDescription'],\n    '0014': ['SQ', '1', 'RightLensSequence'],\n    '0015': ['SQ', '1', 'LeftLensSequence'],\n    '0016': ['SQ', '1', 'UnspecifiedLateralityLensSequence'],\n    '0018': ['SQ', '1', 'CylinderSequence'],\n    '0028': ['SQ', '1', 'PrismSequence'],\n    '0030': ['FD', '1', 'HorizontalPrismPower'],\n    '0032': ['CS', '1', 'HorizontalPrismBase'],\n    '0034': ['FD', '1', 'VerticalPrismPower'],\n    '0036': ['CS', '1', 'VerticalPrismBase'],\n    '0038': ['CS', '1', 'LensSegmentType'],\n    '0040': ['FD', '1', 'OpticalTransmittance'],\n    '0042': ['FD', '1', 'ChannelWidth'],\n    '0044': ['FD', '1', 'PupilSize'],\n    '0046': ['FD', '1', 'CornealSize'],\n    '0047': ['SQ', '1', 'CornealSizeSequence'],\n    '0050': ['SQ', '1', 'AutorefractionRightEyeSequence'],\n    '0052': ['SQ', '1', 'AutorefractionLeftEyeSequence'],\n    '0060': ['FD', '1', 'DistancePupillaryDistance'],\n    '0062': ['FD', '1', 'NearPupillaryDistance'],\n    '0063': ['FD', '1', 'IntermediatePupillaryDistance'],\n    '0064': ['FD', '1', 'OtherPupillaryDistance'],\n    '0070': ['SQ', '1', 'KeratometryRightEyeSequence'],\n    '0071': ['SQ', '1', 'KeratometryLeftEyeSequence'],\n    '0074': ['SQ', '1', 'SteepKeratometricAxisSequence'],\n    '0075': ['FD', '1', 'RadiusOfCurvature'],\n    '0076': ['FD', '1', 'KeratometricPower'],\n    '0077': ['FD', '1', 'KeratometricAxis'],\n    '0080': ['SQ', '1', 'FlatKeratometricAxisSequence'],\n    '0092': ['CS', '1', 'BackgroundColor'],\n    '0094': ['CS', '1', 'Optotype'],\n    '0095': ['CS', '1', 'OptotypePresentation'],\n    '0097': ['SQ', '1', 'SubjectiveRefractionRightEyeSequence'],\n    '0098': ['SQ', '1', 'SubjectiveRefractionLeftEyeSequence'],\n    '0100': ['SQ', '1', 'AddNearSequence'],\n    '0101': ['SQ', '1', 'AddIntermediateSequence'],\n    '0102': ['SQ', '1', 'AddOtherSequence'],\n    '0104': ['FD', '1', 'AddPower'],\n    '0106': ['FD', '1', 'ViewingDistance'],\n    '0110': ['SQ', '1', 'CorneaMeasurementsSequence'],\n    '0111': ['SQ', '1', 'SourceOfCorneaMeasurementDataCodeSequence'],\n    '0112': ['SQ', '1', 'SteepCornealAxisSequence'],\n    '0113': ['SQ', '1', 'FlatCornealAxisSequence'],\n    '0114': ['FD', '1', 'CornealPower'],\n    '0115': ['FD', '1', 'CornealAxis'],\n    '0116': ['SQ', '1', 'CorneaMeasurementMethodCodeSequence'],\n    '0117': ['FL', '1', 'RefractiveIndexOfCornea'],\n    '0118': ['FL', '1', 'RefractiveIndexOfAqueousHumor'],\n    '0121': ['SQ', '1', 'VisualAcuityTypeCodeSequence'],\n    '0122': ['SQ', '1', 'VisualAcuityRightEyeSequence'],\n    '0123': ['SQ', '1', 'VisualAcuityLeftEyeSequence'],\n    '0124': ['SQ', '1', 'VisualAcuityBothEyesOpenSequence'],\n    '0125': ['CS', '1', 'ViewingDistanceType'],\n    '0135': ['SS', '2', 'VisualAcuityModifiers'],\n    '0137': ['FD', '1', 'DecimalVisualAcuity'],\n    '0139': ['LO', '1', 'OptotypeDetailedDefinition'],\n    '0145': ['SQ', '1', 'ReferencedRefractiveMeasurementsSequence'],\n    '0146': ['FD', '1', 'SpherePower'],\n    '0147': ['FD', '1', 'CylinderPower'],\n    '0201': ['CS', '1', 'CornealTopographySurface'],\n    '0202': ['FL', '2', 'CornealVertexLocation'],\n    '0203': ['FL', '1', 'PupilCentroidXCoordinate'],\n    '0204': ['FL', '1', 'PupilCentroidYCoordinate'],\n    '0205': ['FL', '1', 'EquivalentPupilRadius'],\n    '0207': ['SQ', '1', 'CornealTopographyMapTypeCodeSequence'],\n    '0208': ['IS', '2-2n', 'VerticesOfTheOutlineOfPupil'],\n    '0210': ['SQ', '1', 'CornealTopographyMappingNormalsSequence'],\n    '0211': ['SQ', '1', 'MaximumCornealCurvatureSequence'],\n    '0212': ['FL', '1', 'MaximumCornealCurvature'],\n    '0213': ['FL', '2', 'MaximumCornealCurvatureLocation'],\n    '0215': ['SQ', '1', 'MinimumKeratometricSequence'],\n    '0218': ['SQ', '1', 'SimulatedKeratometricCylinderSequence'],\n    '0220': ['FL', '1', 'AverageCornealPower'],\n    '0224': ['FL', '1', 'CornealISValue'],\n    '0227': ['FL', '1', 'AnalyzedArea'],\n    '0230': ['FL', '1', 'SurfaceRegularityIndex'],\n    '0232': ['FL', '1', 'SurfaceAsymmetryIndex'],\n    '0234': ['FL', '1', 'CornealEccentricityIndex'],\n    '0236': ['FL', '1', 'KeratoconusPredictionIndex'],\n    '0238': ['FL', '1', 'DecimalPotentialVisualAcuity'],\n    '0242': ['CS', '1', 'CornealTopographyMapQualityEvaluation'],\n    '0244': ['SQ', '1', 'SourceImageCornealProcessedDataSequence'],\n    '0247': ['FL', '3', 'CornealPointLocation'],\n    '0248': ['CS', '1', 'CornealPointEstimated'],\n    '0249': ['FL', '1', 'AxialPower'],\n    '0250': ['FL', '1', 'TangentialPower'],\n    '0251': ['FL', '1', 'RefractivePower'],\n    '0252': ['FL', '1', 'RelativeElevation'],\n    '0253': ['FL', '1', 'CornealWavefront']\n  },\n  '0048': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['FL', '1', 'ImagedVolumeWidth'],\n    '0002': ['FL', '1', 'ImagedVolumeHeight'],\n    '0003': ['FL', '1', 'ImagedVolumeDepth'],\n    '0006': ['UL', '1', 'TotalPixelMatrixColumns'],\n    '0007': ['UL', '1', 'TotalPixelMatrixRows'],\n    '0008': ['SQ', '1', 'TotalPixelMatrixOriginSequence'],\n    '0010': ['CS', '1', 'SpecimenLabelInImage'],\n    '0011': ['CS', '1', 'FocusMethod'],\n    '0012': ['CS', '1', 'ExtendedDepthOfField'],\n    '0013': ['US', '1', 'NumberOfFocalPlanes'],\n    '0014': ['FL', '1', 'DistanceBetweenFocalPlanes'],\n    '0015': ['US', '3', 'RecommendedAbsentPixelCIELabValue'],\n    '0100': ['SQ', '1', 'IlluminatorTypeCodeSequence'],\n    '0102': ['DS', '6', 'ImageOrientationSlide'],\n    '0105': ['SQ', '1', 'OpticalPathSequence'],\n    '0106': ['SH', '1', 'OpticalPathIdentifier'],\n    '0107': ['ST', '1', 'OpticalPathDescription'],\n    '0108': ['SQ', '1', 'IlluminationColorCodeSequence'],\n    '0110': ['SQ', '1', 'SpecimenReferenceSequence'],\n    '0111': ['DS', '1', 'CondenserLensPower'],\n    '0112': ['DS', '1', 'ObjectiveLensPower'],\n    '0113': ['DS', '1', 'ObjectiveLensNumericalAperture'],\n    '0120': ['SQ', '1', 'PaletteColorLookupTableSequence'],\n    '0200': ['SQ', '1', 'ReferencedImageNavigationSequence'],\n    '0201': ['US', '2', 'TopLeftHandCornerOfLocalizerArea'],\n    '0202': ['US', '2', 'BottomRightHandCornerOfLocalizerArea'],\n    '0207': ['SQ', '1', 'OpticalPathIdentificationSequence'],\n    '021A': ['SQ', '1', 'PlanePositionSlideSequence'],\n    '021E': ['SL', '1', 'ColumnPositionInTotalImagePixelMatrix'],\n    '021F': ['SL', '1', 'RowPositionInTotalImagePixelMatrix'],\n    '0301': ['CS', '1', 'PixelOriginInterpretation'],\n    '0302': ['UL', '1', 'NumberOfOpticalPaths'],\n    '0303': ['UL', '1', 'TotalPixelMatrixFocalPlanes']\n  },\n  '0050': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['CS', '1', 'CalibrationImage'],\n    '0010': ['SQ', '1', 'DeviceSequence'],\n    '0012': ['SQ', '1', 'ContainerComponentTypeCodeSequence'],\n    '0013': ['FD', '1', 'ContainerComponentThickness'],\n    '0014': ['DS', '1', 'DeviceLength'],\n    '0015': ['FD', '1', 'ContainerComponentWidth'],\n    '0016': ['DS', '1', 'DeviceDiameter'],\n    '0017': ['CS', '1', 'DeviceDiameterUnits'],\n    '0018': ['DS', '1', 'DeviceVolume'],\n    '0019': ['DS', '1', 'InterMarkerDistance'],\n    '001A': ['CS', '1', 'ContainerComponentMaterial'],\n    '001B': ['LO', '1', 'ContainerComponentID'],\n    '001C': ['FD', '1', 'ContainerComponentLength'],\n    '001D': ['FD', '1', 'ContainerComponentDiameter'],\n    '001E': ['LO', '1', 'ContainerComponentDescription'],\n    '0020': ['LO', '1', 'DeviceDescription'],\n    '0021': ['ST', '1', 'LongDeviceDescription']\n  },\n  '0052': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['FL', '1', 'ContrastBolusIngredientPercentByVolume'],\n    '0002': ['FD', '1', 'OCTFocalDistance'],\n    '0003': ['FD', '1', 'BeamSpotSize'],\n    '0004': ['FD', '1', 'EffectiveRefractiveIndex'],\n    '0006': ['CS', '1', 'OCTAcquisitionDomain'],\n    '0007': ['FD', '1', 'OCTOpticalCenterWavelength'],\n    '0008': ['FD', '1', 'AxialResolution'],\n    '0009': ['FD', '1', 'RangingDepth'],\n    '0011': ['FD', '1', 'ALineRate'],\n    '0012': ['US', '1', 'ALinesPerFrame'],\n    '0013': ['FD', '1', 'CatheterRotationalRate'],\n    '0014': ['FD', '1', 'ALinePixelSpacing'],\n    '0016': ['SQ', '1', 'ModeOfPercutaneousAccessSequence'],\n    '0025': ['SQ', '1', 'IntravascularOCTFrameTypeSequence'],\n    '0026': ['CS', '1', 'OCTZOffsetApplied'],\n    '0027': ['SQ', '1', 'IntravascularFrameContentSequence'],\n    '0028': ['FD', '1', 'IntravascularLongitudinalDistance'],\n    '0029': ['SQ', '1', 'IntravascularOCTFrameContentSequence'],\n    '0030': ['SS', '1', 'OCTZOffsetCorrection'],\n    '0031': ['CS', '1', 'CatheterDirectionOfRotation'],\n    '0033': ['FD', '1', 'SeamLineLocation'],\n    '0034': ['FD', '1', 'FirstALineLocation'],\n    '0036': ['US', '1', 'SeamLineIndex'],\n    '0038': ['US', '1', 'NumberOfPaddedALines'],\n    '0039': ['CS', '1', 'InterpolationType'],\n    '003A': ['CS', '1', 'RefractiveIndexApplied']\n  },\n  '0054': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1-n', 'EnergyWindowVector'],\n    '0011': ['US', '1', 'NumberOfEnergyWindows'],\n    '0012': ['SQ', '1', 'EnergyWindowInformationSequence'],\n    '0013': ['SQ', '1', 'EnergyWindowRangeSequence'],\n    '0014': ['DS', '1', 'EnergyWindowLowerLimit'],\n    '0015': ['DS', '1', 'EnergyWindowUpperLimit'],\n    '0016': ['SQ', '1', 'RadiopharmaceuticalInformationSequence'],\n    '0017': ['IS', '1', 'ResidualSyringeCounts'],\n    '0018': ['SH', '1', 'EnergyWindowName'],\n    '0020': ['US', '1-n', 'DetectorVector'],\n    '0021': ['US', '1', 'NumberOfDetectors'],\n    '0022': ['SQ', '1', 'DetectorInformationSequence'],\n    '0030': ['US', '1-n', 'PhaseVector'],\n    '0031': ['US', '1', 'NumberOfPhases'],\n    '0032': ['SQ', '1', 'PhaseInformationSequence'],\n    '0033': ['US', '1', 'NumberOfFramesInPhase'],\n    '0036': ['IS', '1', 'PhaseDelay'],\n    '0038': ['IS', '1', 'PauseBetweenFrames'],\n    '0039': ['CS', '1', 'PhaseDescription'],\n    '0050': ['US', '1-n', 'RotationVector'],\n    '0051': ['US', '1', 'NumberOfRotations'],\n    '0052': ['SQ', '1', 'RotationInformationSequence'],\n    '0053': ['US', '1', 'NumberOfFramesInRotation'],\n    '0060': ['US', '1-n', 'RRIntervalVector'],\n    '0061': ['US', '1', 'NumberOfRRIntervals'],\n    '0062': ['SQ', '1', 'GatedInformationSequence'],\n    '0063': ['SQ', '1', 'DataInformationSequence'],\n    '0070': ['US', '1-n', 'TimeSlotVector'],\n    '0071': ['US', '1', 'NumberOfTimeSlots'],\n    '0072': ['SQ', '1', 'TimeSlotInformationSequence'],\n    '0073': ['DS', '1', 'TimeSlotTime'],\n    '0080': ['US', '1-n', 'SliceVector'],\n    '0081': ['US', '1', 'NumberOfSlices'],\n    '0090': ['US', '1-n', 'AngularViewVector'],\n    '0100': ['US', '1-n', 'TimeSliceVector'],\n    '0101': ['US', '1', 'NumberOfTimeSlices'],\n    '0200': ['DS', '1', 'StartAngle'],\n    '0202': ['CS', '1', 'TypeOfDetectorMotion'],\n    '0210': ['IS', '1-n', 'TriggerVector'],\n    '0211': ['US', '1', 'NumberOfTriggersInPhase'],\n    '0220': ['SQ', '1', 'ViewCodeSequence'],\n    '0222': ['SQ', '1', 'ViewModifierCodeSequence'],\n    '0300': ['SQ', '1', 'RadionuclideCodeSequence'],\n    '0302': ['SQ', '1', 'AdministrationRouteCodeSequence'],\n    '0304': ['SQ', '1', 'RadiopharmaceuticalCodeSequence'],\n    '0306': ['SQ', '1', 'CalibrationDataSequence'],\n    '0308': ['US', '1', 'EnergyWindowNumber'],\n    '0400': ['SH', '1', 'ImageID'],\n    '0410': ['SQ', '1', 'PatientOrientationCodeSequence'],\n    '0412': ['SQ', '1', 'PatientOrientationModifierCodeSequence'],\n    '0414': ['SQ', '1', 'PatientGantryRelationshipCodeSequence'],\n    '0500': ['CS', '1', 'SliceProgressionDirection'],\n    '0501': ['CS', '1', 'ScanProgressionDirection'],\n    '1000': ['CS', '2', 'SeriesType'],\n    '1001': ['CS', '1', 'Units'],\n    '1002': ['CS', '1', 'CountsSource'],\n    '1004': ['CS', '1', 'ReprojectionMethod'],\n    '1006': ['CS', '1', 'SUVType'],\n    '1100': ['CS', '1', 'RandomsCorrectionMethod'],\n    '1101': ['LO', '1', 'AttenuationCorrectionMethod'],\n    '1102': ['CS', '1', 'DecayCorrection'],\n    '1103': ['LO', '1', 'ReconstructionMethod'],\n    '1104': ['LO', '1', 'DetectorLinesOfResponseUsed'],\n    '1105': ['LO', '1', 'ScatterCorrectionMethod'],\n    '1200': ['DS', '1', 'AxialAcceptance'],\n    '1201': ['IS', '2', 'AxialMash'],\n    '1202': ['IS', '1', 'TransverseMash'],\n    '1203': ['DS', '2', 'DetectorElementSize'],\n    '1210': ['DS', '1', 'CoincidenceWindowWidth'],\n    '1220': ['CS', '1-n', 'SecondaryCountsType'],\n    '1300': ['DS', '1', 'FrameReferenceTime'],\n    '1310': ['IS', '1', 'PrimaryPromptsCountsAccumulated'],\n    '1311': ['IS', '1-n', 'SecondaryCountsAccumulated'],\n    '1320': ['DS', '1', 'SliceSensitivityFactor'],\n    '1321': ['DS', '1', 'DecayFactor'],\n    '1322': ['DS', '1', 'DoseCalibrationFactor'],\n    '1323': ['DS', '1', 'ScatterFractionFactor'],\n    '1324': ['DS', '1', 'DeadTimeFactor'],\n    '1330': ['US', '1', 'ImageIndex'],\n    '1400': ['CS', '1-n', 'CountsIncluded'],\n    '1401': ['CS', '1', 'DeadTimeCorrectionFlag']\n  },\n  '0060': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '3000': ['SQ', '1', 'HistogramSequence'],\n    '3002': ['US', '1', 'HistogramNumberOfBins'],\n    '3004': ['xs', '1', 'HistogramFirstBinValue'],\n    '3006': ['xs', '1', 'HistogramLastBinValue'],\n    '3008': ['US', '1', 'HistogramBinWidth'],\n    '3010': ['LO', '1', 'HistogramExplanation'],\n    '3020': ['UL', '1-n', 'HistogramData']\n  },\n  '0062': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'SegmentationType'],\n    '0002': ['SQ', '1', 'SegmentSequence'],\n    '0003': ['SQ', '1', 'SegmentedPropertyCategoryCodeSequence'],\n    '0004': ['US', '1', 'SegmentNumber'],\n    '0005': ['LO', '1', 'SegmentLabel'],\n    '0006': ['ST', '1', 'SegmentDescription'],\n    '0007': ['SQ', '1', 'SegmentationAlgorithmIdentificationSequence'],\n    '0008': ['CS', '1', 'SegmentAlgorithmType'],\n    '0009': ['LO', '1-n', 'SegmentAlgorithmName'],\n    '000A': ['SQ', '1', 'SegmentIdentificationSequence'],\n    '000B': ['US', '1-n', 'ReferencedSegmentNumber'],\n    '000C': ['US', '1', 'RecommendedDisplayGrayscaleValue'],\n    '000D': ['US', '3', 'RecommendedDisplayCIELabValue'],\n    '000E': ['US', '1', 'MaximumFractionalValue'],\n    '000F': ['SQ', '1', 'SegmentedPropertyTypeCodeSequence'],\n    '0010': ['CS', '1', 'SegmentationFractionalType'],\n    '0011': ['SQ', '1', 'SegmentedPropertyTypeModifierCodeSequence'],\n    '0012': ['SQ', '1', 'UsedSegmentsSequence'],\n    '0013': ['CS', '1', 'SegmentsOverlap'],\n    '0020': ['UT', '1', 'TrackingID'],\n    '0021': ['UI', '1', 'TrackingUID']\n  },\n  '0064': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SQ', '1', 'DeformableRegistrationSequence'],\n    '0003': ['UI', '1', 'SourceFrameOfReferenceUID'],\n    '0005': ['SQ', '1', 'DeformableRegistrationGridSequence'],\n    '0007': ['UL', '3', 'GridDimensions'],\n    '0008': ['FD', '3', 'GridResolution'],\n    '0009': ['OF', '1', 'VectorGridData'],\n    '000F': ['SQ', '1', 'PreDeformationMatrixRegistrationSequence'],\n    '0010': ['SQ', '1', 'PostDeformationMatrixRegistrationSequence']\n  },\n  '0066': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['UL', '1', 'NumberOfSurfaces'],\n    '0002': ['SQ', '1', 'SurfaceSequence'],\n    '0003': ['UL', '1', 'SurfaceNumber'],\n    '0004': ['LT', '1', 'SurfaceComments'],\n    '0009': ['CS', '1', 'SurfaceProcessing'],\n    '000A': ['FL', '1', 'SurfaceProcessingRatio'],\n    '000B': ['LO', '1', 'SurfaceProcessingDescription'],\n    '000C': ['FL', '1', 'RecommendedPresentationOpacity'],\n    '000D': ['CS', '1', 'RecommendedPresentationType'],\n    '000E': ['CS', '1', 'FiniteVolume'],\n    '0010': ['CS', '1', 'Manifold'],\n    '0011': ['SQ', '1', 'SurfacePointsSequence'],\n    '0012': ['SQ', '1', 'SurfacePointsNormalsSequence'],\n    '0013': ['SQ', '1', 'SurfaceMeshPrimitivesSequence'],\n    '0015': ['UL', '1', 'NumberOfSurfacePoints'],\n    '0016': ['OF', '1', 'PointCoordinatesData'],\n    '0017': ['FL', '3', 'PointPositionAccuracy'],\n    '0018': ['FL', '1', 'MeanPointDistance'],\n    '0019': ['FL', '1', 'MaximumPointDistance'],\n    '001A': ['FL', '6', 'PointsBoundingBoxCoordinates'],\n    '001B': ['FL', '3', 'AxisOfRotation'],\n    '001C': ['FL', '3', 'CenterOfRotation'],\n    '001E': ['UL', '1', 'NumberOfVectors'],\n    '001F': ['US', '1', 'VectorDimensionality'],\n    '0020': ['FL', '1-n', 'VectorAccuracy'],\n    '0021': ['OF', '1', 'VectorCoordinateData'],\n    '0022': ['OD', '1', 'DoublePointCoordinatesData'],\n    '0023': ['OW', '1', 'TrianglePointIndexList'],\n    '0024': ['OW', '1', 'EdgePointIndexList'],\n    '0025': ['OW', '1', 'VertexPointIndexList'],\n    '0026': ['SQ', '1', 'TriangleStripSequence'],\n    '0027': ['SQ', '1', 'TriangleFanSequence'],\n    '0028': ['SQ', '1', 'LineSequence'],\n    '0029': ['OW', '1', 'PrimitivePointIndexList'],\n    '002A': ['UL', '1', 'SurfaceCount'],\n    '002B': ['SQ', '1', 'ReferencedSurfaceSequence'],\n    '002C': ['UL', '1', 'ReferencedSurfaceNumber'],\n    '002D': ['SQ', '1', 'SegmentSurfaceGenerationAlgorithmIdentificationSequence'],\n    '002E': ['SQ', '1', 'SegmentSurfaceSourceInstanceSequence'],\n    '002F': ['SQ', '1', 'AlgorithmFamilyCodeSequence'],\n    '0030': ['SQ', '1', 'AlgorithmNameCodeSequence'],\n    '0031': ['LO', '1', 'AlgorithmVersion'],\n    '0032': ['LT', '1', 'AlgorithmParameters'],\n    '0034': ['SQ', '1', 'FacetSequence'],\n    '0035': ['SQ', '1', 'SurfaceProcessingAlgorithmIdentificationSequence'],\n    '0036': ['LO', '1', 'AlgorithmName'],\n    '0037': ['FL', '1', 'RecommendedPointRadius'],\n    '0038': ['FL', '1', 'RecommendedLineThickness'],\n    '0040': ['OL', '1', 'LongPrimitivePointIndexList'],\n    '0041': ['OL', '1', 'LongTrianglePointIndexList'],\n    '0042': ['OL', '1', 'LongEdgePointIndexList'],\n    '0043': ['OL', '1', 'LongVertexPointIndexList'],\n    '0101': ['SQ', '1', 'TrackSetSequence'],\n    '0102': ['SQ', '1', 'TrackSequence'],\n    '0103': ['OW', '1', 'RecommendedDisplayCIELabValueList'],\n    '0104': ['SQ', '1', 'TrackingAlgorithmIdentificationSequence'],\n    '0105': ['UL', '1', 'TrackSetNumber'],\n    '0106': ['LO', '1', 'TrackSetLabel'],\n    '0107': ['UT', '1', 'TrackSetDescription'],\n    '0108': ['SQ', '1', 'TrackSetAnatomicalTypeCodeSequence'],\n    '0121': ['SQ', '1', 'MeasurementsSequence'],\n    '0124': ['SQ', '1', 'TrackSetStatisticsSequence'],\n    '0125': ['OF', '1', 'FloatingPointValues'],\n    '0129': ['OL', '1', 'TrackPointIndexList'],\n    '0130': ['SQ', '1', 'TrackStatisticsSequence'],\n    '0132': ['SQ', '1', 'MeasurementValuesSequence'],\n    '0133': ['SQ', '1', 'DiffusionAcquisitionCodeSequence'],\n    '0134': ['SQ', '1', 'DiffusionModelCodeSequence']\n  },\n  '0068': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '6210': ['LO', '1', 'ImplantSize'],\n    '6221': ['LO', '1', 'ImplantTemplateVersion'],\n    '6222': ['SQ', '1', 'ReplacedImplantTemplateSequence'],\n    '6223': ['CS', '1', 'ImplantType'],\n    '6224': ['SQ', '1', 'DerivationImplantTemplateSequence'],\n    '6225': ['SQ', '1', 'OriginalImplantTemplateSequence'],\n    '6226': ['DT', '1', 'EffectiveDateTime'],\n    '6230': ['SQ', '1', 'ImplantTargetAnatomySequence'],\n    '6260': ['SQ', '1', 'InformationFromManufacturerSequence'],\n    '6265': ['SQ', '1', 'NotificationFromManufacturerSequence'],\n    '6270': ['DT', '1', 'InformationIssueDateTime'],\n    '6280': ['ST', '1', 'InformationSummary'],\n    '62A0': ['SQ', '1', 'ImplantRegulatoryDisapprovalCodeSequence'],\n    '62A5': ['FD', '1', 'OverallTemplateSpatialTolerance'],\n    '62C0': ['SQ', '1', 'HPGLDocumentSequence'],\n    '62D0': ['US', '1', 'HPGLDocumentID'],\n    '62D5': ['LO', '1', 'HPGLDocumentLabel'],\n    '62E0': ['SQ', '1', 'ViewOrientationCodeSequence'],\n    '62F0': ['SQ', '1', 'ViewOrientationModifierCodeSequence'],\n    '62F2': ['FD', '1', 'HPGLDocumentScaling'],\n    '6300': ['OB', '1', 'HPGLDocument'],\n    '6310': ['US', '1', 'HPGLContourPenNumber'],\n    '6320': ['SQ', '1', 'HPGLPenSequence'],\n    '6330': ['US', '1', 'HPGLPenNumber'],\n    '6340': ['LO', '1', 'HPGLPenLabel'],\n    '6345': ['ST', '1', 'HPGLPenDescription'],\n    '6346': ['FD', '2', 'RecommendedRotationPoint'],\n    '6347': ['FD', '4', 'BoundingRectangle'],\n    '6350': ['US', '1-n', 'ImplantTemplate3DModelSurfaceNumber'],\n    '6360': ['SQ', '1', 'SurfaceModelDescriptionSequence'],\n    '6380': ['LO', '1', 'SurfaceModelLabel'],\n    '6390': ['FD', '1', 'SurfaceModelScalingFactor'],\n    '63A0': ['SQ', '1', 'MaterialsCodeSequence'],\n    '63A4': ['SQ', '1', 'CoatingMaterialsCodeSequence'],\n    '63A8': ['SQ', '1', 'ImplantTypeCodeSequence'],\n    '63AC': ['SQ', '1', 'FixationMethodCodeSequence'],\n    '63B0': ['SQ', '1', 'MatingFeatureSetsSequence'],\n    '63C0': ['US', '1', 'MatingFeatureSetID'],\n    '63D0': ['LO', '1', 'MatingFeatureSetLabel'],\n    '63E0': ['SQ', '1', 'MatingFeatureSequence'],\n    '63F0': ['US', '1', 'MatingFeatureID'],\n    '6400': ['SQ', '1', 'MatingFeatureDegreeOfFreedomSequence'],\n    '6410': ['US', '1', 'DegreeOfFreedomID'],\n    '6420': ['CS', '1', 'DegreeOfFreedomType'],\n    '6430': ['SQ', '1', 'TwoDMatingFeatureCoordinatesSequence'],\n    '6440': ['US', '1', 'ReferencedHPGLDocumentID'],\n    '6450': ['FD', '2', 'TwoDMatingPoint'],\n    '6460': ['FD', '4', 'TwoDMatingAxes'],\n    '6470': ['SQ', '1', 'TwoDDegreeOfFreedomSequence'],\n    '6490': ['FD', '3', 'ThreeDDegreeOfFreedomAxis'],\n    '64A0': ['FD', '2', 'RangeOfFreedom'],\n    '64C0': ['FD', '3', 'ThreeDMatingPoint'],\n    '64D0': ['FD', '9', 'ThreeDMatingAxes'],\n    '64F0': ['FD', '3', 'TwoDDegreeOfFreedomAxis'],\n    '6500': ['SQ', '1', 'PlanningLandmarkPointSequence'],\n    '6510': ['SQ', '1', 'PlanningLandmarkLineSequence'],\n    '6520': ['SQ', '1', 'PlanningLandmarkPlaneSequence'],\n    '6530': ['US', '1', 'PlanningLandmarkID'],\n    '6540': ['LO', '1', 'PlanningLandmarkDescription'],\n    '6545': ['SQ', '1', 'PlanningLandmarkIdentificationCodeSequence'],\n    '6550': ['SQ', '1', 'TwoDPointCoordinatesSequence'],\n    '6560': ['FD', '2', 'TwoDPointCoordinates'],\n    '6590': ['FD', '3', 'ThreeDPointCoordinates'],\n    '65A0': ['SQ', '1', 'TwoDLineCoordinatesSequence'],\n    '65B0': ['FD', '4', 'TwoDLineCoordinates'],\n    '65D0': ['FD', '6', 'ThreeDLineCoordinates'],\n    '65E0': ['SQ', '1', 'TwoDPlaneCoordinatesSequence'],\n    '65F0': ['FD', '4', 'TwoDPlaneIntersection'],\n    '6610': ['FD', '3', 'ThreeDPlaneOrigin'],\n    '6620': ['FD', '3', 'ThreeDPlaneNormal'],\n    '7001': ['CS', '1', 'ModelModification'],\n    '7002': ['CS', '1', 'ModelMirroring'],\n    '7003': ['SQ', '1', 'ModelUsageCodeSequence'],\n    '7004': ['UI', '1', 'ModelGroupUID'],\n    '7005': ['UR', '1', 'RelativeURIReferenceWithinEncapsulatedDocument']\n  },\n  '006A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'AnnotationCoordinateType'],\n    '0002': ['SQ', '1', 'AnnotationGroupSequence'],\n    '0003': ['UI', '1', 'AnnotationGroupUID'],\n    '0005': ['LO', '1', 'AnnotationGroupLabel'],\n    '0006': ['UT', '1', 'AnnotationGroupDescription'],\n    '0007': ['CS', '1', 'AnnotationGroupGenerationType'],\n    '0008': ['SQ', '1', 'AnnotationGroupAlgorithmIdentificationSequence'],\n    '0009': ['SQ', '1', 'AnnotationPropertyCategoryCodeSequence'],\n    '000A': ['SQ', '1', 'AnnotationPropertyTypeCodeSequence'],\n    '000B': ['SQ', '1', 'AnnotationPropertyTypeModifierCodeSequence'],\n    '000C': ['UL', '1', 'NumberOfAnnotations'],\n    '000D': ['CS', '1', 'AnnotationAppliesToAllOpticalPaths'],\n    '000E': ['SH', '1-n', 'ReferencedOpticalPathIdentifier'],\n    '000F': ['CS', '1', 'AnnotationAppliesToAllZPlanes'],\n    '0010': ['FD', '1-n', 'CommonZCoordinateValue'],\n    '0011': ['OL', '1', 'AnnotationIndexList']\n  },\n  '0070': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'GraphicAnnotationSequence'],\n    '0002': ['CS', '1', 'GraphicLayer'],\n    '0003': ['CS', '1', 'BoundingBoxAnnotationUnits'],\n    '0004': ['CS', '1', 'AnchorPointAnnotationUnits'],\n    '0005': ['CS', '1', 'GraphicAnnotationUnits'],\n    '0006': ['ST', '1', 'UnformattedTextValue'],\n    '0008': ['SQ', '1', 'TextObjectSequence'],\n    '0009': ['SQ', '1', 'GraphicObjectSequence'],\n    '0010': ['FL', '2', 'BoundingBoxTopLeftHandCorner'],\n    '0011': ['FL', '2', 'BoundingBoxBottomRightHandCorner'],\n    '0012': ['CS', '1', 'BoundingBoxTextHorizontalJustification'],\n    '0014': ['FL', '2', 'AnchorPoint'],\n    '0015': ['CS', '1', 'AnchorPointVisibility'],\n    '0020': ['US', '1', 'GraphicDimensions'],\n    '0021': ['US', '1', 'NumberOfGraphicPoints'],\n    '0022': ['FL', '2-n', 'GraphicData'],\n    '0023': ['CS', '1', 'GraphicType'],\n    '0024': ['CS', '1', 'GraphicFilled'],\n    '0040': ['IS', '1', 'ImageRotationRetired'],\n    '0041': ['CS', '1', 'ImageHorizontalFlip'],\n    '0042': ['US', '1', 'ImageRotation'],\n    '0050': ['US', '2', 'DisplayedAreaTopLeftHandCornerTrial'],\n    '0051': ['US', '2', 'DisplayedAreaBottomRightHandCornerTrial'],\n    '0052': ['SL', '2', 'DisplayedAreaTopLeftHandCorner'],\n    '0053': ['SL', '2', 'DisplayedAreaBottomRightHandCorner'],\n    '005A': ['SQ', '1', 'DisplayedAreaSelectionSequence'],\n    '0060': ['SQ', '1', 'GraphicLayerSequence'],\n    '0062': ['IS', '1', 'GraphicLayerOrder'],\n    '0066': ['US', '1', 'GraphicLayerRecommendedDisplayGrayscaleValue'],\n    '0067': ['US', '3', 'GraphicLayerRecommendedDisplayRGBValue'],\n    '0068': ['LO', '1', 'GraphicLayerDescription'],\n    '0080': ['CS', '1', 'ContentLabel'],\n    '0081': ['LO', '1', 'ContentDescription'],\n    '0082': ['DA', '1', 'PresentationCreationDate'],\n    '0083': ['TM', '1', 'PresentationCreationTime'],\n    '0084': ['PN', '1', 'ContentCreatorName'],\n    '0086': ['SQ', '1', 'ContentCreatorIdentificationCodeSequence'],\n    '0087': ['SQ', '1', 'AlternateContentDescriptionSequence'],\n    '0100': ['CS', '1', 'PresentationSizeMode'],\n    '0101': ['DS', '2', 'PresentationPixelSpacing'],\n    '0102': ['IS', '2', 'PresentationPixelAspectRatio'],\n    '0103': ['FL', '1', 'PresentationPixelMagnificationRatio'],\n    '0207': ['LO', '1', 'GraphicGroupLabel'],\n    '0208': ['ST', '1', 'GraphicGroupDescription'],\n    '0209': ['SQ', '1', 'CompoundGraphicSequence'],\n    '0226': ['UL', '1', 'CompoundGraphicInstanceID'],\n    '0227': ['LO', '1', 'FontName'],\n    '0228': ['CS', '1', 'FontNameType'],\n    '0229': ['LO', '1', 'CSSFontName'],\n    '0230': ['FD', '1', 'RotationAngle'],\n    '0231': ['SQ', '1', 'TextStyleSequence'],\n    '0232': ['SQ', '1', 'LineStyleSequence'],\n    '0233': ['SQ', '1', 'FillStyleSequence'],\n    '0234': ['SQ', '1', 'GraphicGroupSequence'],\n    '0241': ['US', '3', 'TextColorCIELabValue'],\n    '0242': ['CS', '1', 'HorizontalAlignment'],\n    '0243': ['CS', '1', 'VerticalAlignment'],\n    '0244': ['CS', '1', 'ShadowStyle'],\n    '0245': ['FL', '1', 'ShadowOffsetX'],\n    '0246': ['FL', '1', 'ShadowOffsetY'],\n    '0247': ['US', '3', 'ShadowColorCIELabValue'],\n    '0248': ['CS', '1', 'Underlined'],\n    '0249': ['CS', '1', 'Bold'],\n    '0250': ['CS', '1', 'Italic'],\n    '0251': ['US', '3', 'PatternOnColorCIELabValue'],\n    '0252': ['US', '3', 'PatternOffColorCIELabValue'],\n    '0253': ['FL', '1', 'LineThickness'],\n    '0254': ['CS', '1', 'LineDashingStyle'],\n    '0255': ['UL', '1', 'LinePattern'],\n    '0256': ['OB', '1', 'FillPattern'],\n    '0257': ['CS', '1', 'FillMode'],\n    '0258': ['FL', '1', 'ShadowOpacity'],\n    '0261': ['FL', '1', 'GapLength'],\n    '0262': ['FL', '1', 'DiameterOfVisibility'],\n    '0273': ['FL', '2', 'RotationPoint'],\n    '0274': ['CS', '1', 'TickAlignment'],\n    '0278': ['CS', '1', 'ShowTickLabel'],\n    '0279': ['CS', '1', 'TickLabelAlignment'],\n    '0282': ['CS', '1', 'CompoundGraphicUnits'],\n    '0284': ['FL', '1', 'PatternOnOpacity'],\n    '0285': ['FL', '1', 'PatternOffOpacity'],\n    '0287': ['SQ', '1', 'MajorTicksSequence'],\n    '0288': ['FL', '1', 'TickPosition'],\n    '0289': ['SH', '1', 'TickLabel'],\n    '0294': ['CS', '1', 'CompoundGraphicType'],\n    '0295': ['UL', '1', 'GraphicGroupID'],\n    '0306': ['CS', '1', 'ShapeType'],\n    '0308': ['SQ', '1', 'RegistrationSequence'],\n    '0309': ['SQ', '1', 'MatrixRegistrationSequence'],\n    '030A': ['SQ', '1', 'MatrixSequence'],\n    '030B': ['FD', '16', 'FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix'],\n    '030C': ['CS', '1', 'FrameOfReferenceTransformationMatrixType'],\n    '030D': ['SQ', '1', 'RegistrationTypeCodeSequence'],\n    '030F': ['ST', '1', 'FiducialDescription'],\n    '0310': ['SH', '1', 'FiducialIdentifier'],\n    '0311': ['SQ', '1', 'FiducialIdentifierCodeSequence'],\n    '0312': ['FD', '1', 'ContourUncertaintyRadius'],\n    '0314': ['SQ', '1', 'UsedFiducialsSequence'],\n    '0318': ['SQ', '1', 'GraphicCoordinatesDataSequence'],\n    '031A': ['UI', '1', 'FiducialUID'],\n    '031B': ['UI', '1', 'ReferencedFiducialUID'],\n    '031C': ['SQ', '1', 'FiducialSetSequence'],\n    '031E': ['SQ', '1', 'FiducialSequence'],\n    '031F': ['SQ', '1', 'FiducialsPropertyCategoryCodeSequence'],\n    '0401': ['US', '3', 'GraphicLayerRecommendedDisplayCIELabValue'],\n    '0402': ['SQ', '1', 'BlendingSequence'],\n    '0403': ['FL', '1', 'RelativeOpacity'],\n    '0404': ['SQ', '1', 'ReferencedSpatialRegistrationSequence'],\n    '0405': ['CS', '1', 'BlendingPosition'],\n    '1101': ['UI', '1', 'PresentationDisplayCollectionUID'],\n    '1102': ['UI', '1', 'PresentationSequenceCollectionUID'],\n    '1103': ['US', '1', 'PresentationSequencePositionIndex'],\n    '1104': ['SQ', '1', 'RenderedImageReferenceSequence'],\n    '1201': ['SQ', '1', 'VolumetricPresentationStateInputSequence'],\n    '1202': ['CS', '1', 'PresentationInputType'],\n    '1203': ['US', '1', 'InputSequencePositionIndex'],\n    '1204': ['CS', '1', 'Crop'],\n    '1205': ['US', '1-n', 'CroppingSpecificationIndex'],\n    '1206': ['CS', '1', 'CompositingMethod'],\n    '1207': ['US', '1', 'VolumetricPresentationInputNumber'],\n    '1208': ['CS', '1', 'ImageVolumeGeometry'],\n    '1209': ['UI', '1', 'VolumetricPresentationInputSetUID'],\n    '120A': ['SQ', '1', 'VolumetricPresentationInputSetSequence'],\n    '120B': ['CS', '1', 'GlobalCrop'],\n    '120C': ['US', '1-n', 'GlobalCroppingSpecificationIndex'],\n    '120D': ['CS', '1', 'RenderingMethod'],\n    '1301': ['SQ', '1', 'VolumeCroppingSequence'],\n    '1302': ['CS', '1', 'VolumeCroppingMethod'],\n    '1303': ['FD', '6', 'BoundingBoxCrop'],\n    '1304': ['SQ', '1', 'ObliqueCroppingPlaneSequence'],\n    '1305': ['FD', '4', 'Plane'],\n    '1306': ['FD', '3', 'PlaneNormal'],\n    '1309': ['US', '1', 'CroppingSpecificationNumber'],\n    '1501': ['CS', '1', 'MultiPlanarReconstructionStyle'],\n    '1502': ['CS', '1', 'MPRThicknessType'],\n    '1503': ['FD', '1', 'MPRSlabThickness'],\n    '1505': ['FD', '3', 'MPRTopLeftHandCorner'],\n    '1507': ['FD', '3', 'MPRViewWidthDirection'],\n    '1508': ['FD', '1', 'MPRViewWidth'],\n    '150C': ['UL', '1', 'NumberOfVolumetricCurvePoints'],\n    '150D': ['OD', '1', 'VolumetricCurvePoints'],\n    '1511': ['FD', '3', 'MPRViewHeightDirection'],\n    '1512': ['FD', '1', 'MPRViewHeight'],\n    '1602': ['CS', '1', 'RenderProjection'],\n    '1603': ['FD', '3', 'ViewpointPosition'],\n    '1604': ['FD', '3', 'ViewpointLookAtPoint'],\n    '1605': ['FD', '3', 'ViewpointUpDirection'],\n    '1606': ['FD', '6', 'RenderFieldOfView'],\n    '1607': ['FD', '1', 'SamplingStepSize'],\n    '1701': ['CS', '1', 'ShadingStyle'],\n    '1702': ['FD', '1', 'AmbientReflectionIntensity'],\n    '1703': ['FD', '3', 'LightDirection'],\n    '1704': ['FD', '1', 'DiffuseReflectionIntensity'],\n    '1705': ['FD', '1', 'SpecularReflectionIntensity'],\n    '1706': ['FD', '1', 'Shininess'],\n    '1801': ['SQ', '1', 'PresentationStateClassificationComponentSequence'],\n    '1802': ['CS', '1', 'ComponentType'],\n    '1803': ['SQ', '1', 'ComponentInputSequence'],\n    '1804': ['US', '1', 'VolumetricPresentationInputIndex'],\n    '1805': ['SQ', '1', 'PresentationStateCompositorComponentSequence'],\n    '1806': ['SQ', '1', 'WeightingTransferFunctionSequence'],\n    '1807': ['US', '3', 'WeightingLookupTableDescriptor'],\n    '1808': ['OB', '1', 'WeightingLookupTableData'],\n    '1901': ['SQ', '1', 'VolumetricAnnotationSequence'],\n    '1903': ['SQ', '1', 'ReferencedStructuredContextSequence'],\n    '1904': ['UI', '1', 'ReferencedContentItem'],\n    '1905': ['SQ', '1', 'VolumetricPresentationInputAnnotationSequence'],\n    '1907': ['CS', '1', 'AnnotationClipping'],\n    '1A01': ['CS', '1', 'PresentationAnimationStyle'],\n    '1A03': ['FD', '1', 'RecommendedAnimationRate'],\n    '1A04': ['SQ', '1', 'AnimationCurveSequence'],\n    '1A05': ['FD', '1', 'AnimationStepSize'],\n    '1A06': ['FD', '1', 'SwivelRange'],\n    '1A07': ['OD', '1', 'VolumetricCurveUpDirections'],\n    '1A08': ['SQ', '1', 'VolumeStreamSequence'],\n    '1A09': ['LO', '1', 'RGBATransferFunctionDescription'],\n    '1B01': ['SQ', '1', 'AdvancedBlendingSequence'],\n    '1B02': ['US', '1', 'BlendingInputNumber'],\n    '1B03': ['SQ', '1', 'BlendingDisplayInputSequence'],\n    '1B04': ['SQ', '1', 'BlendingDisplaySequence'],\n    '1B06': ['CS', '1', 'BlendingMode'],\n    '1B07': ['CS', '1', 'TimeSeriesBlending'],\n    '1B08': ['CS', '1', 'GeometryForDisplay'],\n    '1B11': ['SQ', '1', 'ThresholdSequence'],\n    '1B12': ['SQ', '1', 'ThresholdValueSequence'],\n    '1B13': ['CS', '1', 'ThresholdType'],\n    '1B14': ['FD', '1', 'ThresholdValue']\n  },\n  '0072': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'HangingProtocolName'],\n    '0004': ['LO', '1', 'HangingProtocolDescription'],\n    '0006': ['CS', '1', 'HangingProtocolLevel'],\n    '0008': ['LO', '1', 'HangingProtocolCreator'],\n    '000A': ['DT', '1', 'HangingProtocolCreationDateTime'],\n    '000C': ['SQ', '1', 'HangingProtocolDefinitionSequence'],\n    '000E': ['SQ', '1', 'HangingProtocolUserIdentificationCodeSequence'],\n    '0010': ['LO', '1', 'HangingProtocolUserGroupName'],\n    '0012': ['SQ', '1', 'SourceHangingProtocolSequence'],\n    '0014': ['US', '1', 'NumberOfPriorsReferenced'],\n    '0020': ['SQ', '1', 'ImageSetsSequence'],\n    '0022': ['SQ', '1', 'ImageSetSelectorSequence'],\n    '0024': ['CS', '1', 'ImageSetSelectorUsageFlag'],\n    '0026': ['AT', '1', 'SelectorAttribute'],\n    '0028': ['US', '1', 'SelectorValueNumber'],\n    '0030': ['SQ', '1', 'TimeBasedImageSetsSequence'],\n    '0032': ['US', '1', 'ImageSetNumber'],\n    '0034': ['CS', '1', 'ImageSetSelectorCategory'],\n    '0038': ['US', '2', 'RelativeTime'],\n    '003A': ['CS', '1', 'RelativeTimeUnits'],\n    '003C': ['SS', '2', 'AbstractPriorValue'],\n    '003E': ['SQ', '1', 'AbstractPriorCodeSequence'],\n    '0040': ['LO', '1', 'ImageSetLabel'],\n    '0050': ['CS', '1', 'SelectorAttributeVR'],\n    '0052': ['AT', '1-n', 'SelectorSequencePointer'],\n    '0054': ['LO', '1-n', 'SelectorSequencePointerPrivateCreator'],\n    '0056': ['LO', '1', 'SelectorAttributePrivateCreator'],\n    '005E': ['AE', '1-n', 'SelectorAEValue'],\n    '005F': ['AS', '1-n', 'SelectorASValue'],\n    '0060': ['AT', '1-n', 'SelectorATValue'],\n    '0061': ['DA', '1-n', 'SelectorDAValue'],\n    '0062': ['CS', '1-n', 'SelectorCSValue'],\n    '0063': ['DT', '1-n', 'SelectorDTValue'],\n    '0064': ['IS', '1-n', 'SelectorISValue'],\n    '0065': ['OB', '1', 'SelectorOBValue'],\n    '0066': ['LO', '1-n', 'SelectorLOValue'],\n    '0067': ['OF', '1', 'SelectorOFValue'],\n    '0068': ['LT', '1', 'SelectorLTValue'],\n    '0069': ['OW', '1', 'SelectorOWValue'],\n    '006A': ['PN', '1-n', 'SelectorPNValue'],\n    '006B': ['TM', '1-n', 'SelectorTMValue'],\n    '006C': ['SH', '1-n', 'SelectorSHValue'],\n    '006D': ['UN', '1', 'SelectorUNValue'],\n    '006E': ['ST', '1', 'SelectorSTValue'],\n    '006F': ['UC', '1-n', 'SelectorUCValue'],\n    '0070': ['UT', '1', 'SelectorUTValue'],\n    '0071': ['UR', '1', 'SelectorURValue'],\n    '0072': ['DS', '1-n', 'SelectorDSValue'],\n    '0073': ['OD', '1', 'SelectorODValue'],\n    '0074': ['FD', '1-n', 'SelectorFDValue'],\n    '0075': ['OL', '1', 'SelectorOLValue'],\n    '0076': ['FL', '1-n', 'SelectorFLValue'],\n    '0078': ['UL', '1-n', 'SelectorULValue'],\n    '007A': ['US', '1-n', 'SelectorUSValue'],\n    '007C': ['SL', '1-n', 'SelectorSLValue'],\n    '007E': ['SS', '1-n', 'SelectorSSValue'],\n    '007F': ['UI', '1-n', 'SelectorUIValue'],\n    '0080': ['SQ', '1', 'SelectorCodeSequenceValue'],\n    '0081': ['OV', '1', 'SelectorOVValue'],\n    '0082': ['SV', '1-n', 'SelectorSVValue'],\n    '0083': ['UV', '1-n', 'SelectorUVValue'],\n    '0100': ['US', '1', 'NumberOfScreens'],\n    '0102': ['SQ', '1', 'NominalScreenDefinitionSequence'],\n    '0104': ['US', '1', 'NumberOfVerticalPixels'],\n    '0106': ['US', '1', 'NumberOfHorizontalPixels'],\n    '0108': ['FD', '4', 'DisplayEnvironmentSpatialPosition'],\n    '010A': ['US', '1', 'ScreenMinimumGrayscaleBitDepth'],\n    '010C': ['US', '1', 'ScreenMinimumColorBitDepth'],\n    '010E': ['US', '1', 'ApplicationMaximumRepaintTime'],\n    '0200': ['SQ', '1', 'DisplaySetsSequence'],\n    '0202': ['US', '1', 'DisplaySetNumber'],\n    '0203': ['LO', '1', 'DisplaySetLabel'],\n    '0204': ['US', '1', 'DisplaySetPresentationGroup'],\n    '0206': ['LO', '1', 'DisplaySetPresentationGroupDescription'],\n    '0208': ['CS', '1', 'PartialDataDisplayHandling'],\n    '0210': ['SQ', '1', 'SynchronizedScrollingSequence'],\n    '0212': ['US', '2-n', 'DisplaySetScrollingGroup'],\n    '0214': ['SQ', '1', 'NavigationIndicatorSequence'],\n    '0216': ['US', '1', 'NavigationDisplaySet'],\n    '0218': ['US', '1-n', 'ReferenceDisplaySets'],\n    '0300': ['SQ', '1', 'ImageBoxesSequence'],\n    '0302': ['US', '1', 'ImageBoxNumber'],\n    '0304': ['CS', '1', 'ImageBoxLayoutType'],\n    '0306': ['US', '1', 'ImageBoxTileHorizontalDimension'],\n    '0308': ['US', '1', 'ImageBoxTileVerticalDimension'],\n    '0310': ['CS', '1', 'ImageBoxScrollDirection'],\n    '0312': ['CS', '1', 'ImageBoxSmallScrollType'],\n    '0314': ['US', '1', 'ImageBoxSmallScrollAmount'],\n    '0316': ['CS', '1', 'ImageBoxLargeScrollType'],\n    '0318': ['US', '1', 'ImageBoxLargeScrollAmount'],\n    '0320': ['US', '1', 'ImageBoxOverlapPriority'],\n    '0330': ['FD', '1', 'CineRelativeToRealTime'],\n    '0400': ['SQ', '1', 'FilterOperationsSequence'],\n    '0402': ['CS', '1', 'FilterByCategory'],\n    '0404': ['CS', '1', 'FilterByAttributePresence'],\n    '0406': ['CS', '1', 'FilterByOperator'],\n    '0420': ['US', '3', 'StructuredDisplayBackgroundCIELabValue'],\n    '0421': ['US', '3', 'EmptyImageBoxCIELabValue'],\n    '0422': ['SQ', '1', 'StructuredDisplayImageBoxSequence'],\n    '0424': ['SQ', '1', 'StructuredDisplayTextBoxSequence'],\n    '0427': ['SQ', '1', 'ReferencedFirstFrameSequence'],\n    '0430': ['SQ', '1', 'ImageBoxSynchronizationSequence'],\n    '0432': ['US', '2-n', 'SynchronizedImageBoxList'],\n    '0434': ['CS', '1', 'TypeOfSynchronization'],\n    '0500': ['CS', '1', 'BlendingOperationType'],\n    '0510': ['CS', '1', 'ReformattingOperationType'],\n    '0512': ['FD', '1', 'ReformattingThickness'],\n    '0514': ['FD', '1', 'ReformattingInterval'],\n    '0516': ['CS', '1', 'ReformattingOperationInitialViewDirection'],\n    '0520': ['CS', '1-n', 'ThreeDRenderingType'],\n    '0600': ['SQ', '1', 'SortingOperationsSequence'],\n    '0602': ['CS', '1', 'SortByCategory'],\n    '0604': ['CS', '1', 'SortingDirection'],\n    '0700': ['CS', '2', 'DisplaySetPatientOrientation'],\n    '0702': ['CS', '1', 'VOIType'],\n    '0704': ['CS', '1', 'PseudoColorType'],\n    '0705': ['SQ', '1', 'PseudoColorPaletteInstanceReferenceSequence'],\n    '0706': ['CS', '1', 'ShowGrayscaleInverted'],\n    '0710': ['CS', '1', 'ShowImageTrueSizeFlag'],\n    '0712': ['CS', '1', 'ShowGraphicAnnotationFlag'],\n    '0714': ['CS', '1', 'ShowPatientDemographicsFlag'],\n    '0716': ['CS', '1', 'ShowAcquisitionTechniquesFlag'],\n    '0717': ['CS', '1', 'DisplaySetHorizontalJustification'],\n    '0718': ['CS', '1', 'DisplaySetVerticalJustification']\n  },\n  '0074': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0120': ['FD', '1', 'ContinuationStartMeterset'],\n    '0121': ['FD', '1', 'ContinuationEndMeterset'],\n    '1000': ['CS', '1', 'ProcedureStepState'],\n    '1002': ['SQ', '1', 'ProcedureStepProgressInformationSequence'],\n    '1004': ['DS', '1', 'ProcedureStepProgress'],\n    '1006': ['ST', '1', 'ProcedureStepProgressDescription'],\n    '1007': ['SQ', '1', 'ProcedureStepProgressParametersSequence'],\n    '1008': ['SQ', '1', 'ProcedureStepCommunicationsURISequence'],\n    '100A': ['UR', '1', 'ContactURI'],\n    '100C': ['LO', '1', 'ContactDisplayName'],\n    '100E': ['SQ', '1', 'ProcedureStepDiscontinuationReasonCodeSequence'],\n    '1020': ['SQ', '1', 'BeamTaskSequence'],\n    '1022': ['CS', '1', 'BeamTaskType'],\n    '1024': ['IS', '1', 'BeamOrderIndexTrial'],\n    '1025': ['CS', '1', 'AutosequenceFlag'],\n    '1026': ['FD', '1', 'TableTopVerticalAdjustedPosition'],\n    '1027': ['FD', '1', 'TableTopLongitudinalAdjustedPosition'],\n    '1028': ['FD', '1', 'TableTopLateralAdjustedPosition'],\n    '102A': ['FD', '1', 'PatientSupportAdjustedAngle'],\n    '102B': ['FD', '1', 'TableTopEccentricAdjustedAngle'],\n    '102C': ['FD', '1', 'TableTopPitchAdjustedAngle'],\n    '102D': ['FD', '1', 'TableTopRollAdjustedAngle'],\n    '1030': ['SQ', '1', 'DeliveryVerificationImageSequence'],\n    '1032': ['CS', '1', 'VerificationImageTiming'],\n    '1034': ['CS', '1', 'DoubleExposureFlag'],\n    '1036': ['CS', '1', 'DoubleExposureOrdering'],\n    '1038': ['DS', '1', 'DoubleExposureMetersetTrial'],\n    '103A': ['DS', '4', 'DoubleExposureFieldDeltaTrial'],\n    '1040': ['SQ', '1', 'RelatedReferenceRTImageSequence'],\n    '1042': ['SQ', '1', 'GeneralMachineVerificationSequence'],\n    '1044': ['SQ', '1', 'ConventionalMachineVerificationSequence'],\n    '1046': ['SQ', '1', 'IonMachineVerificationSequence'],\n    '1048': ['SQ', '1', 'FailedAttributesSequence'],\n    '104A': ['SQ', '1', 'OverriddenAttributesSequence'],\n    '104C': ['SQ', '1', 'ConventionalControlPointVerificationSequence'],\n    '104E': ['SQ', '1', 'IonControlPointVerificationSequence'],\n    '1050': ['SQ', '1', 'AttributeOccurrenceSequence'],\n    '1052': ['AT', '1', 'AttributeOccurrencePointer'],\n    '1054': ['UL', '1', 'AttributeItemSelector'],\n    '1056': ['LO', '1', 'AttributeOccurrencePrivateCreator'],\n    '1057': ['IS', '1-n', 'SelectorSequencePointerItems'],\n    '1200': ['CS', '1', 'ScheduledProcedureStepPriority'],\n    '1202': ['LO', '1', 'WorklistLabel'],\n    '1204': ['LO', '1', 'ProcedureStepLabel'],\n    '1210': ['SQ', '1', 'ScheduledProcessingParametersSequence'],\n    '1212': ['SQ', '1', 'PerformedProcessingParametersSequence'],\n    '1216': ['SQ', '1', 'UnifiedProcedureStepPerformedProcedureSequence'],\n    '1220': ['SQ', '1', 'RelatedProcedureStepSequence'],\n    '1222': ['LO', '1', 'ProcedureStepRelationshipType'],\n    '1224': ['SQ', '1', 'ReplacedProcedureStepSequence'],\n    '1230': ['LO', '1', 'DeletionLock'],\n    '1234': ['AE', '1', 'ReceivingAE'],\n    '1236': ['AE', '1', 'RequestingAE'],\n    '1238': ['LT', '1', 'ReasonForCancellation'],\n    '1242': ['CS', '1', 'SCPStatus'],\n    '1244': ['CS', '1', 'SubscriptionListStatus'],\n    '1246': ['CS', '1', 'UnifiedProcedureStepListStatus'],\n    '1324': ['UL', '1', 'BeamOrderIndex'],\n    '1338': ['FD', '1', 'DoubleExposureMeterset'],\n    '133A': ['FD', '4', 'DoubleExposureFieldDelta'],\n    '1401': ['SQ', '1', 'BrachyTaskSequence'],\n    '1402': ['DS', '1', 'ContinuationStartTotalReferenceAirKerma'],\n    '1403': ['DS', '1', 'ContinuationEndTotalReferenceAirKerma'],\n    '1404': ['IS', '1', 'ContinuationPulseNumber'],\n    '1405': ['SQ', '1', 'ChannelDeliveryOrderSequence'],\n    '1406': ['IS', '1', 'ReferencedChannelNumber'],\n    '1407': ['DS', '1', 'StartCumulativeTimeWeight'],\n    '1408': ['DS', '1', 'EndCumulativeTimeWeight'],\n    '1409': ['SQ', '1', 'OmittedChannelSequence'],\n    '140A': ['CS', '1', 'ReasonForChannelOmission'],\n    '140B': ['LO', '1', 'ReasonForChannelOmissionDescription'],\n    '140C': ['IS', '1', 'ChannelDeliveryOrderIndex'],\n    '140D': ['SQ', '1', 'ChannelDeliveryContinuationSequence'],\n    '140E': ['SQ', '1', 'OmittedApplicationSetupSequence']\n  },\n  '0076': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['LO', '1', 'ImplantAssemblyTemplateName'],\n    '0003': ['LO', '1', 'ImplantAssemblyTemplateIssuer'],\n    '0006': ['LO', '1', 'ImplantAssemblyTemplateVersion'],\n    '0008': ['SQ', '1', 'ReplacedImplantAssemblyTemplateSequence'],\n    '000A': ['CS', '1', 'ImplantAssemblyTemplateType'],\n    '000C': ['SQ', '1', 'OriginalImplantAssemblyTemplateSequence'],\n    '000E': ['SQ', '1', 'DerivationImplantAssemblyTemplateSequence'],\n    '0010': ['SQ', '1', 'ImplantAssemblyTemplateTargetAnatomySequence'],\n    '0020': ['SQ', '1', 'ProcedureTypeCodeSequence'],\n    '0030': ['LO', '1', 'SurgicalTechnique'],\n    '0032': ['SQ', '1', 'ComponentTypesSequence'],\n    '0034': ['SQ', '1', 'ComponentTypeCodeSequence'],\n    '0036': ['CS', '1', 'ExclusiveComponentType'],\n    '0038': ['CS', '1', 'MandatoryComponentType'],\n    '0040': ['SQ', '1', 'ComponentSequence'],\n    '0055': ['US', '1', 'ComponentID'],\n    '0060': ['SQ', '1', 'ComponentAssemblySequence'],\n    '0070': ['US', '1', 'Component1ReferencedID'],\n    '0080': ['US', '1', 'Component1ReferencedMatingFeatureSetID'],\n    '0090': ['US', '1', 'Component1ReferencedMatingFeatureID'],\n    '00A0': ['US', '1', 'Component2ReferencedID'],\n    '00B0': ['US', '1', 'Component2ReferencedMatingFeatureSetID'],\n    '00C0': ['US', '1', 'Component2ReferencedMatingFeatureID']\n  },\n  '0078': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['LO', '1', 'ImplantTemplateGroupName'],\n    '0010': ['ST', '1', 'ImplantTemplateGroupDescription'],\n    '0020': ['LO', '1', 'ImplantTemplateGroupIssuer'],\n    '0024': ['LO', '1', 'ImplantTemplateGroupVersion'],\n    '0026': ['SQ', '1', 'ReplacedImplantTemplateGroupSequence'],\n    '0028': ['SQ', '1', 'ImplantTemplateGroupTargetAnatomySequence'],\n    '002A': ['SQ', '1', 'ImplantTemplateGroupMembersSequence'],\n    '002E': ['US', '1', 'ImplantTemplateGroupMemberID'],\n    '0050': ['FD', '3', 'ThreeDImplantTemplateGroupMemberMatchingPoint'],\n    '0060': ['FD', '9', 'ThreeDImplantTemplateGroupMemberMatchingAxes'],\n    '0070': ['SQ', '1', 'ImplantTemplateGroupMemberMatching2DCoordinatesSequence'],\n    '0090': ['FD', '2', 'TwoDImplantTemplateGroupMemberMatchingPoint'],\n    '00A0': ['FD', '4', 'TwoDImplantTemplateGroupMemberMatchingAxes'],\n    '00B0': ['SQ', '1', 'ImplantTemplateGroupVariationDimensionSequence'],\n    '00B2': ['LO', '1', 'ImplantTemplateGroupVariationDimensionName'],\n    '00B4': ['SQ', '1', 'ImplantTemplateGroupVariationDimensionRankSequence'],\n    '00B6': ['US', '1', 'ReferencedImplantTemplateGroupMemberID'],\n    '00B8': ['US', '1', 'ImplantTemplateGroupVariationDimensionRank']\n  },\n  '0080': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'SurfaceScanAcquisitionTypeCodeSequence'],\n    '0002': ['SQ', '1', 'SurfaceScanModeCodeSequence'],\n    '0003': ['SQ', '1', 'RegistrationMethodCodeSequence'],\n    '0004': ['FD', '1', 'ShotDurationTime'],\n    '0005': ['FD', '1', 'ShotOffsetTime'],\n    '0006': ['US', '1-n', 'SurfacePointPresentationValueData'],\n    '0007': ['US', '3-3n', 'SurfacePointColorCIELabValueData'],\n    '0008': ['SQ', '1', 'UVMappingSequence'],\n    '0009': ['SH', '1', 'TextureLabel'],\n    '0010': ['OF', '1', 'UValueData'],\n    '0011': ['OF', '1', 'VValueData'],\n    '0012': ['SQ', '1', 'ReferencedTextureSequence'],\n    '0013': ['SQ', '1', 'ReferencedSurfaceDataSequence']\n  },\n  '0082': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'AssessmentSummary'],\n    '0003': ['UT', '1', 'AssessmentSummaryDescription'],\n    '0004': ['SQ', '1', 'AssessedSOPInstanceSequence'],\n    '0005': ['SQ', '1', 'ReferencedComparisonSOPInstanceSequence'],\n    '0006': ['UL', '1', 'NumberOfAssessmentObservations'],\n    '0007': ['SQ', '1', 'AssessmentObservationsSequence'],\n    '0008': ['CS', '1', 'ObservationSignificance'],\n    '000A': ['UT', '1', 'ObservationDescription'],\n    '000C': ['SQ', '1', 'StructuredConstraintObservationSequence'],\n    '0010': ['SQ', '1', 'AssessedAttributeValueSequence'],\n    '0016': ['LO', '1', 'AssessmentSetID'],\n    '0017': ['SQ', '1', 'AssessmentRequesterSequence'],\n    '0018': ['LO', '1', 'SelectorAttributeName'],\n    '0019': ['LO', '1', 'SelectorAttributeKeyword'],\n    '0021': ['SQ', '1', 'AssessmentTypeCodeSequence'],\n    '0022': ['SQ', '1', 'ObservationBasisCodeSequence'],\n    '0023': ['LO', '1', 'AssessmentLabel'],\n    '0032': ['CS', '1', 'ConstraintType'],\n    '0033': ['UT', '1', 'SpecificationSelectionGuidance'],\n    '0034': ['SQ', '1', 'ConstraintValueSequence'],\n    '0035': ['SQ', '1', 'RecommendedDefaultValueSequence'],\n    '0036': ['CS', '1', 'ConstraintViolationSignificance'],\n    '0037': ['UT', '1', 'ConstraintViolationCondition'],\n    '0038': ['CS', '1', 'ModifiableConstraintFlag']\n  },\n  '0088': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0130': ['SH', '1', 'StorageMediaFileSetID'],\n    '0140': ['UI', '1', 'StorageMediaFileSetUID'],\n    '0200': ['SQ', '1', 'IconImageSequence'],\n    '0904': ['LO', '1', 'TopicTitle'],\n    '0906': ['ST', '1', 'TopicSubject'],\n    '0910': ['LO', '1', 'TopicAuthor'],\n    '0912': ['LO', '1-32', 'TopicKeywords']\n  },\n  '0100': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0410': ['CS', '1', 'SOPInstanceStatus'],\n    '0420': ['DT', '1', 'SOPAuthorizationDateTime'],\n    '0424': ['LT', '1', 'SOPAuthorizationComment'],\n    '0426': ['LO', '1', 'AuthorizationEquipmentCertificationNumber']\n  },\n  '0400': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0005': ['US', '1', 'MACIDNumber'],\n    '0010': ['UI', '1', 'MACCalculationTransferSyntaxUID'],\n    '0015': ['CS', '1', 'MACAlgorithm'],\n    '0020': ['AT', '1-n', 'DataElementsSigned'],\n    '0100': ['UI', '1', 'DigitalSignatureUID'],\n    '0105': ['DT', '1', 'DigitalSignatureDateTime'],\n    '0110': ['CS', '1', 'CertificateType'],\n    '0115': ['OB', '1', 'CertificateOfSigner'],\n    '0120': ['OB', '1', 'Signature'],\n    '0305': ['CS', '1', 'CertifiedTimestampType'],\n    '0310': ['OB', '1', 'CertifiedTimestamp'],\n    '0315': ['FL', '1', ''],\n    '0401': ['SQ', '1', 'DigitalSignaturePurposeCodeSequence'],\n    '0402': ['SQ', '1', 'ReferencedDigitalSignatureSequence'],\n    '0403': ['SQ', '1', 'ReferencedSOPInstanceMACSequence'],\n    '0404': ['OB', '1', 'MAC'],\n    '0500': ['SQ', '1', 'EncryptedAttributesSequence'],\n    '0510': ['UI', '1', 'EncryptedContentTransferSyntaxUID'],\n    '0520': ['OB', '1', 'EncryptedContent'],\n    '0550': ['SQ', '1', 'ModifiedAttributesSequence'],\n    '0551': ['SQ', '1', 'NonconformingModifiedAttributesSequence'],\n    '0552': ['OB', '1', 'NonconformingDataElementValue'],\n    '0561': ['SQ', '1', 'OriginalAttributesSequence'],\n    '0562': ['DT', '1', 'AttributeModificationDateTime'],\n    '0563': ['LO', '1', 'ModifyingSystem'],\n    '0564': ['LO', '1', 'SourceOfPreviousValues'],\n    '0565': ['CS', '1', 'ReasonForTheAttributeModification'],\n    '0600': ['CS', '1', 'InstanceOriginStatus']\n  },\n  '1000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '3', 'EscapeTriplet'],\n    '0011': ['US', '3', 'RunLengthTriplet'],\n    '0012': ['US', '1', 'HuffmanTableSize'],\n    '0013': ['US', '3', 'HuffmanTableTriplet'],\n    '0014': ['US', '1', 'ShiftTableSize'],\n    '0015': ['US', '3', 'ShiftTableTriplet']\n  },\n  '1010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['US', '1-n', 'ZonalMap']\n  },\n  '2000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['IS', '1', 'NumberOfCopies'],\n    '001E': ['SQ', '1', 'PrinterConfigurationSequence'],\n    '0020': ['CS', '1', 'PrintPriority'],\n    '0030': ['CS', '1', 'MediumType'],\n    '0040': ['CS', '1', 'FilmDestination'],\n    '0050': ['LO', '1', 'FilmSessionLabel'],\n    '0060': ['IS', '1', 'MemoryAllocation'],\n    '0061': ['IS', '1', 'MaximumMemoryAllocation'],\n    '0062': ['CS', '1', 'ColorImagePrintingFlag'],\n    '0063': ['CS', '1', 'CollationFlag'],\n    '0065': ['CS', '1', 'AnnotationFlag'],\n    '0067': ['CS', '1', 'ImageOverlayFlag'],\n    '0069': ['CS', '1', 'PresentationLUTFlag'],\n    '006A': ['CS', '1', 'ImageBoxPresentationLUTFlag'],\n    '00A0': ['US', '1', 'MemoryBitDepth'],\n    '00A1': ['US', '1', 'PrintingBitDepth'],\n    '00A2': ['SQ', '1', 'MediaInstalledSequence'],\n    '00A4': ['SQ', '1', 'OtherMediaAvailableSequence'],\n    '00A8': ['SQ', '1', 'SupportedImageDisplayFormatsSequence'],\n    '0500': ['SQ', '1', 'ReferencedFilmBoxSequence'],\n    '0510': ['SQ', '1', 'ReferencedStoredPrintSequence']\n  },\n  '2010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ST', '1', 'ImageDisplayFormat'],\n    '0030': ['CS', '1', 'AnnotationDisplayFormatID'],\n    '0040': ['CS', '1', 'FilmOrientation'],\n    '0050': ['CS', '1', 'FilmSizeID'],\n    '0052': ['CS', '1', 'PrinterResolutionID'],\n    '0054': ['CS', '1', 'DefaultPrinterResolutionID'],\n    '0060': ['CS', '1', 'MagnificationType'],\n    '0080': ['CS', '1', 'SmoothingType'],\n    '00A6': ['CS', '1', 'DefaultMagnificationType'],\n    '00A7': ['CS', '1-n', 'OtherMagnificationTypesAvailable'],\n    '00A8': ['CS', '1', 'DefaultSmoothingType'],\n    '00A9': ['CS', '1-n', 'OtherSmoothingTypesAvailable'],\n    '0100': ['CS', '1', 'BorderDensity'],\n    '0110': ['CS', '1', 'EmptyImageDensity'],\n    '0120': ['US', '1', 'MinDensity'],\n    '0130': ['US', '1', 'MaxDensity'],\n    '0140': ['CS', '1', 'Trim'],\n    '0150': ['ST', '1', 'ConfigurationInformation'],\n    '0152': ['LT', '1', 'ConfigurationInformationDescription'],\n    '0154': ['IS', '1', 'MaximumCollatedFilms'],\n    '015E': ['US', '1', 'Illumination'],\n    '0160': ['US', '1', 'ReflectedAmbientLight'],\n    '0376': ['DS', '2', 'PrinterPixelSpacing'],\n    '0500': ['SQ', '1', 'ReferencedFilmSessionSequence'],\n    '0510': ['SQ', '1', 'ReferencedImageBoxSequence'],\n    '0520': ['SQ', '1', 'ReferencedBasicAnnotationBoxSequence']\n  },\n  '2020': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'ImageBoxPosition'],\n    '0020': ['CS', '1', 'Polarity'],\n    '0030': ['DS', '1', 'RequestedImageSize'],\n    '0040': ['CS', '1', 'RequestedDecimateCropBehavior'],\n    '0050': ['CS', '1', 'RequestedResolutionID'],\n    '00A0': ['CS', '1', 'RequestedImageSizeFlag'],\n    '00A2': ['CS', '1', 'DecimateCropResult'],\n    '0110': ['SQ', '1', 'BasicGrayscaleImageSequence'],\n    '0111': ['SQ', '1', 'BasicColorImageSequence'],\n    '0130': ['SQ', '1', 'ReferencedImageOverlayBoxSequence'],\n    '0140': ['SQ', '1', 'ReferencedVOILUTBoxSequence']\n  },\n  '2030': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'AnnotationPosition'],\n    '0020': ['LO', '1', 'TextString']\n  },\n  '2040': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'ReferencedOverlayPlaneSequence'],\n    '0011': ['US', '1-99', 'ReferencedOverlayPlaneGroups'],\n    '0020': ['SQ', '1', 'OverlayPixelDataSequence'],\n    '0060': ['CS', '1', 'OverlayMagnificationType'],\n    '0070': ['CS', '1', 'OverlaySmoothingType'],\n    '0072': ['CS', '1', 'OverlayOrImageMagnification'],\n    '0074': ['US', '1', 'MagnifyToNumberOfColumns'],\n    '0080': ['CS', '1', 'OverlayForegroundDensity'],\n    '0082': ['CS', '1', 'OverlayBackgroundDensity'],\n    '0090': ['CS', '1', 'OverlayMode'],\n    '0100': ['CS', '1', 'ThresholdDensity'],\n    '0500': ['SQ', '1', 'ReferencedImageBoxSequenceRetired']\n  },\n  '2050': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'PresentationLUTSequence'],\n    '0020': ['CS', '1', 'PresentationLUTShape'],\n    '0500': ['SQ', '1', 'ReferencedPresentationLUTSequence']\n  },\n  '2100': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SH', '1', 'PrintJobID'],\n    '0020': ['CS', '1', 'ExecutionStatus'],\n    '0030': ['CS', '1', 'ExecutionStatusInfo'],\n    '0040': ['DA', '1', 'CreationDate'],\n    '0050': ['TM', '1', 'CreationTime'],\n    '0070': ['AE', '1', 'Originator'],\n    '0140': ['AE', '1', 'DestinationAE'],\n    '0160': ['SH', '1', 'OwnerID'],\n    '0170': ['IS', '1', 'NumberOfFilms'],\n    '0500': ['SQ', '1', 'ReferencedPrintJobSequencePullStoredPrint']\n  },\n  '2110': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['CS', '1', 'PrinterStatus'],\n    '0020': ['CS', '1', 'PrinterStatusInfo'],\n    '0030': ['LO', '1', 'PrinterName'],\n    '0099': ['SH', '1', 'PrintQueueID']\n  },\n  '2120': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['CS', '1', 'QueueStatus'],\n    '0050': ['SQ', '1', 'PrintJobDescriptionSequence'],\n    '0070': ['SQ', '1', 'ReferencedPrintJobSequence']\n  },\n  '2130': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'PrintManagementCapabilitiesSequence'],\n    '0015': ['SQ', '1', 'PrinterCharacteristicsSequence'],\n    '0030': ['SQ', '1', 'FilmBoxContentSequence'],\n    '0040': ['SQ', '1', 'ImageBoxContentSequence'],\n    '0050': ['SQ', '1', 'AnnotationContentSequence'],\n    '0060': ['SQ', '1', 'ImageOverlayBoxContentSequence'],\n    '0080': ['SQ', '1', 'PresentationLUTContentSequence'],\n    '00A0': ['SQ', '1', 'ProposedStudySequence'],\n    '00C0': ['SQ', '1', 'OriginalImageSequence']\n  },\n  '2200': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'LabelUsingInformationExtractedFromInstances'],\n    '0002': ['UT', '1', 'LabelText'],\n    '0003': ['CS', '1', 'LabelStyleSelection'],\n    '0004': ['LT', '1', 'MediaDisposition'],\n    '0005': ['LT', '1', 'BarcodeValue'],\n    '0006': ['CS', '1', 'BarcodeSymbology'],\n    '0007': ['CS', '1', 'AllowMediaSplitting'],\n    '0008': ['CS', '1', 'IncludeNonDICOMObjects'],\n    '0009': ['CS', '1', 'IncludeDisplayApplication'],\n    '000A': ['CS', '1', 'PreserveCompositeInstancesAfterMediaCreation'],\n    '000B': ['US', '1', 'TotalNumberOfPiecesOfMediaCreated'],\n    '000C': ['LO', '1', 'RequestedMediaApplicationProfile'],\n    '000D': ['SQ', '1', 'ReferencedStorageMediaSequence'],\n    '000E': ['AT', '1-n', 'FailureAttributes'],\n    '000F': ['CS', '1', 'AllowLossyCompression'],\n    '0020': ['CS', '1', 'RequestPriority']\n  },\n  '3002': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'RTImageLabel'],\n    '0003': ['LO', '1', 'RTImageName'],\n    '0004': ['ST', '1', 'RTImageDescription'],\n    '000A': ['CS', '1', 'ReportedValuesOrigin'],\n    '000C': ['CS', '1', 'RTImagePlane'],\n    '000D': ['DS', '3', 'XRayImageReceptorTranslation'],\n    '000E': ['DS', '1', 'XRayImageReceptorAngle'],\n    '0010': ['DS', '6', 'RTImageOrientation'],\n    '0011': ['DS', '2', 'ImagePlanePixelSpacing'],\n    '0012': ['DS', '2', 'RTImagePosition'],\n    '0020': ['SH', '1', 'RadiationMachineName'],\n    '0022': ['DS', '1', 'RadiationMachineSAD'],\n    '0024': ['DS', '1', 'RadiationMachineSSD'],\n    '0026': ['DS', '1', 'RTImageSID'],\n    '0028': ['DS', '1', 'SourceToReferenceObjectDistance'],\n    '0029': ['IS', '1', 'FractionNumber'],\n    '0030': ['SQ', '1', 'ExposureSequence'],\n    '0032': ['DS', '1', 'MetersetExposure'],\n    '0034': ['DS', '4', 'DiaphragmPosition'],\n    '0040': ['SQ', '1', 'FluenceMapSequence'],\n    '0041': ['CS', '1', 'FluenceDataSource'],\n    '0042': ['DS', '1', 'FluenceDataScale'],\n    '0050': ['SQ', '1', 'PrimaryFluenceModeSequence'],\n    '0051': ['CS', '1', 'FluenceMode'],\n    '0052': ['SH', '1', 'FluenceModeID']\n  },\n  '3004': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'DVHType'],\n    '0002': ['CS', '1', 'DoseUnits'],\n    '0004': ['CS', '1', 'DoseType'],\n    '0005': ['CS', '1', 'SpatialTransformOfDose'],\n    '0006': ['LO', '1', 'DoseComment'],\n    '0008': ['DS', '3', 'NormalizationPoint'],\n    '000A': ['CS', '1', 'DoseSummationType'],\n    '000C': ['DS', '2-n', 'GridFrameOffsetVector'],\n    '000E': ['DS', '1', 'DoseGridScaling'],\n    '0010': ['SQ', '1', 'RTDoseROISequence'],\n    '0012': ['DS', '1', 'DoseValue'],\n    '0014': ['CS', '1-3', 'TissueHeterogeneityCorrection'],\n    '0040': ['DS', '3', 'DVHNormalizationPoint'],\n    '0042': ['DS', '1', 'DVHNormalizationDoseValue'],\n    '0050': ['SQ', '1', 'DVHSequence'],\n    '0052': ['DS', '1', 'DVHDoseScaling'],\n    '0054': ['CS', '1', 'DVHVolumeUnits'],\n    '0056': ['IS', '1', 'DVHNumberOfBins'],\n    '0058': ['DS', '2-2n', 'DVHData'],\n    '0060': ['SQ', '1', 'DVHReferencedROISequence'],\n    '0062': ['CS', '1', 'DVHROIContributionType'],\n    '0070': ['DS', '1', 'DVHMinimumDose'],\n    '0072': ['DS', '1', 'DVHMaximumDose'],\n    '0074': ['DS', '1', 'DVHMeanDose']\n  },\n  '3006': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'StructureSetLabel'],\n    '0004': ['LO', '1', 'StructureSetName'],\n    '0006': ['ST', '1', 'StructureSetDescription'],\n    '0008': ['DA', '1', 'StructureSetDate'],\n    '0009': ['TM', '1', 'StructureSetTime'],\n    '0010': ['SQ', '1', 'ReferencedFrameOfReferenceSequence'],\n    '0012': ['SQ', '1', 'RTReferencedStudySequence'],\n    '0014': ['SQ', '1', 'RTReferencedSeriesSequence'],\n    '0016': ['SQ', '1', 'ContourImageSequence'],\n    '0018': ['SQ', '1', 'PredecessorStructureSetSequence'],\n    '0020': ['SQ', '1', 'StructureSetROISequence'],\n    '0022': ['IS', '1', 'ROINumber'],\n    '0024': ['UI', '1', 'ReferencedFrameOfReferenceUID'],\n    '0026': ['LO', '1', 'ROIName'],\n    '0028': ['ST', '1', 'ROIDescription'],\n    '002A': ['IS', '3', 'ROIDisplayColor'],\n    '002C': ['DS', '1', 'ROIVolume'],\n    '0030': ['SQ', '1', 'RTRelatedROISequence'],\n    '0033': ['CS', '1', 'RTROIRelationship'],\n    '0036': ['CS', '1', 'ROIGenerationAlgorithm'],\n    '0037': ['SQ', '1', 'ROIDerivationAlgorithmIdentificationSequence'],\n    '0038': ['LO', '1', 'ROIGenerationDescription'],\n    '0039': ['SQ', '1', 'ROIContourSequence'],\n    '0040': ['SQ', '1', 'ContourSequence'],\n    '0042': ['CS', '1', 'ContourGeometricType'],\n    '0044': ['DS', '1', 'ContourSlabThickness'],\n    '0045': ['DS', '3', 'ContourOffsetVector'],\n    '0046': ['IS', '1', 'NumberOfContourPoints'],\n    '0048': ['IS', '1', 'ContourNumber'],\n    '0049': ['IS', '1-n', 'AttachedContours'],\n    '004A': ['SQ', '1', 'SourcePixelPlanesCharacteristicsSequence'],\n    '0050': ['DS', '3-3n', 'ContourData'],\n    '0080': ['SQ', '1', 'RTROIObservationsSequence'],\n    '0082': ['IS', '1', 'ObservationNumber'],\n    '0084': ['IS', '1', 'ReferencedROINumber'],\n    '0085': ['SH', '1', 'ROIObservationLabel'],\n    '0086': ['SQ', '1', 'RTROIIdentificationCodeSequence'],\n    '0088': ['ST', '1', 'ROIObservationDescription'],\n    '00A0': ['SQ', '1', 'RelatedRTROIObservationsSequence'],\n    '00A4': ['CS', '1', 'RTROIInterpretedType'],\n    '00A6': ['PN', '1', 'ROIInterpreter'],\n    '00B0': ['SQ', '1', 'ROIPhysicalPropertiesSequence'],\n    '00B2': ['CS', '1', 'ROIPhysicalProperty'],\n    '00B4': ['DS', '1', 'ROIPhysicalPropertyValue'],\n    '00B6': ['SQ', '1', 'ROIElementalCompositionSequence'],\n    '00B7': ['US', '1', 'ROIElementalCompositionAtomicNumber'],\n    '00B8': ['FL', '1', 'ROIElementalCompositionAtomicMassFraction'],\n    '00B9': ['SQ', '1', 'AdditionalRTROIIdentificationCodeSequence'],\n    '00C0': ['SQ', '1', 'FrameOfReferenceRelationshipSequence'],\n    '00C2': ['UI', '1', 'RelatedFrameOfReferenceUID'],\n    '00C4': ['CS', '1', 'FrameOfReferenceTransformationType'],\n    '00C6': ['DS', '16', 'FrameOfReferenceTransformationMatrix'],\n    '00C8': ['LO', '1', 'FrameOfReferenceTransformationComment'],\n    '00C9': ['SQ', '1', 'PatientLocationCoordinatesSequence'],\n    '00CA': ['SQ', '1', 'PatientLocationCoordinatesCodeSequence'],\n    '00CB': ['SQ', '1', 'PatientSupportPositionSequence']\n  },\n  '3008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'MeasuredDoseReferenceSequence'],\n    '0012': ['ST', '1', 'MeasuredDoseDescription'],\n    '0014': ['CS', '1', 'MeasuredDoseType'],\n    '0016': ['DS', '1', 'MeasuredDoseValue'],\n    '0020': ['SQ', '1', 'TreatmentSessionBeamSequence'],\n    '0021': ['SQ', '1', 'TreatmentSessionIonBeamSequence'],\n    '0022': ['IS', '1', 'CurrentFractionNumber'],\n    '0024': ['DA', '1', 'TreatmentControlPointDate'],\n    '0025': ['TM', '1', 'TreatmentControlPointTime'],\n    '002A': ['CS', '1', 'TreatmentTerminationStatus'],\n    '002B': ['SH', '1', 'TreatmentTerminationCode'],\n    '002C': ['CS', '1', 'TreatmentVerificationStatus'],\n    '0030': ['SQ', '1', 'ReferencedTreatmentRecordSequence'],\n    '0032': ['DS', '1', 'SpecifiedPrimaryMeterset'],\n    '0033': ['DS', '1', 'SpecifiedSecondaryMeterset'],\n    '0036': ['DS', '1', 'DeliveredPrimaryMeterset'],\n    '0037': ['DS', '1', 'DeliveredSecondaryMeterset'],\n    '003A': ['DS', '1', 'SpecifiedTreatmentTime'],\n    '003B': ['DS', '1', 'DeliveredTreatmentTime'],\n    '0040': ['SQ', '1', 'ControlPointDeliverySequence'],\n    '0041': ['SQ', '1', 'IonControlPointDeliverySequence'],\n    '0042': ['DS', '1', 'SpecifiedMeterset'],\n    '0044': ['DS', '1', 'DeliveredMeterset'],\n    '0045': ['FL', '1', 'MetersetRateSet'],\n    '0046': ['FL', '1', 'MetersetRateDelivered'],\n    '0047': ['FL', '1-n', 'ScanSpotMetersetsDelivered'],\n    '0048': ['DS', '1', 'DoseRateDelivered'],\n    '0050': ['SQ', '1', 'TreatmentSummaryCalculatedDoseReferenceSequence'],\n    '0052': ['DS', '1', 'CumulativeDoseToDoseReference'],\n    '0054': ['DA', '1', 'FirstTreatmentDate'],\n    '0056': ['DA', '1', 'MostRecentTreatmentDate'],\n    '005A': ['IS', '1', 'NumberOfFractionsDelivered'],\n    '0060': ['SQ', '1', 'OverrideSequence'],\n    '0061': ['AT', '1', 'ParameterSequencePointer'],\n    '0062': ['AT', '1', 'OverrideParameterPointer'],\n    '0063': ['IS', '1', 'ParameterItemIndex'],\n    '0064': ['IS', '1', 'MeasuredDoseReferenceNumber'],\n    '0065': ['AT', '1', 'ParameterPointer'],\n    '0066': ['ST', '1', 'OverrideReason'],\n    '0067': ['US', '1', 'ParameterValueNumber'],\n    '0068': ['SQ', '1', 'CorrectedParameterSequence'],\n    '006A': ['FL', '1', 'CorrectionValue'],\n    '0070': ['SQ', '1', 'CalculatedDoseReferenceSequence'],\n    '0072': ['IS', '1', 'CalculatedDoseReferenceNumber'],\n    '0074': ['ST', '1', 'CalculatedDoseReferenceDescription'],\n    '0076': ['DS', '1', 'CalculatedDoseReferenceDoseValue'],\n    '0078': ['DS', '1', 'StartMeterset'],\n    '007A': ['DS', '1', 'EndMeterset'],\n    '0080': ['SQ', '1', 'ReferencedMeasuredDoseReferenceSequence'],\n    '0082': ['IS', '1', 'ReferencedMeasuredDoseReferenceNumber'],\n    '0090': ['SQ', '1', 'ReferencedCalculatedDoseReferenceSequence'],\n    '0092': ['IS', '1', 'ReferencedCalculatedDoseReferenceNumber'],\n    '00A0': ['SQ', '1', 'BeamLimitingDeviceLeafPairsSequence'],\n    '00B0': ['SQ', '1', 'RecordedWedgeSequence'],\n    '00C0': ['SQ', '1', 'RecordedCompensatorSequence'],\n    '00D0': ['SQ', '1', 'RecordedBlockSequence'],\n    '00D1': ['SQ', '1', 'RecordedBlockSlabSequence'],\n    '00E0': ['SQ', '1', 'TreatmentSummaryMeasuredDoseReferenceSequence'],\n    '00F0': ['SQ', '1', 'RecordedSnoutSequence'],\n    '00F2': ['SQ', '1', 'RecordedRangeShifterSequence'],\n    '00F4': ['SQ', '1', 'RecordedLateralSpreadingDeviceSequence'],\n    '00F6': ['SQ', '1', 'RecordedRangeModulatorSequence'],\n    '0100': ['SQ', '1', 'RecordedSourceSequence'],\n    '0105': ['LO', '1', 'SourceSerialNumber'],\n    '0110': ['SQ', '1', 'TreatmentSessionApplicationSetupSequence'],\n    '0116': ['CS', '1', 'ApplicationSetupCheck'],\n    '0120': ['SQ', '1', 'RecordedBrachyAccessoryDeviceSequence'],\n    '0122': ['IS', '1', 'ReferencedBrachyAccessoryDeviceNumber'],\n    '0130': ['SQ', '1', 'RecordedChannelSequence'],\n    '0132': ['DS', '1', 'SpecifiedChannelTotalTime'],\n    '0134': ['DS', '1', 'DeliveredChannelTotalTime'],\n    '0136': ['IS', '1', 'SpecifiedNumberOfPulses'],\n    '0138': ['IS', '1', 'DeliveredNumberOfPulses'],\n    '013A': ['DS', '1', 'SpecifiedPulseRepetitionInterval'],\n    '013C': ['DS', '1', 'DeliveredPulseRepetitionInterval'],\n    '0140': ['SQ', '1', 'RecordedSourceApplicatorSequence'],\n    '0142': ['IS', '1', 'ReferencedSourceApplicatorNumber'],\n    '0150': ['SQ', '1', 'RecordedChannelShieldSequence'],\n    '0152': ['IS', '1', 'ReferencedChannelShieldNumber'],\n    '0160': ['SQ', '1', 'BrachyControlPointDeliveredSequence'],\n    '0162': ['DA', '1', 'SafePositionExitDate'],\n    '0164': ['TM', '1', 'SafePositionExitTime'],\n    '0166': ['DA', '1', 'SafePositionReturnDate'],\n    '0168': ['TM', '1', 'SafePositionReturnTime'],\n    '0171': ['SQ', '1', 'PulseSpecificBrachyControlPointDeliveredSequence'],\n    '0172': ['US', '1', 'PulseNumber'],\n    '0173': ['SQ', '1', 'BrachyPulseControlPointDeliveredSequence'],\n    '0200': ['CS', '1', 'CurrentTreatmentStatus'],\n    '0202': ['ST', '1', 'TreatmentStatusComment'],\n    '0220': ['SQ', '1', 'FractionGroupSummarySequence'],\n    '0223': ['IS', '1', 'ReferencedFractionNumber'],\n    '0224': ['CS', '1', 'FractionGroupType'],\n    '0230': ['CS', '1', 'BeamStopperPosition'],\n    '0240': ['SQ', '1', 'FractionStatusSummarySequence'],\n    '0250': ['DA', '1', 'TreatmentDate'],\n    '0251': ['TM', '1', 'TreatmentTime']\n  },\n  '300A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'RTPlanLabel'],\n    '0003': ['LO', '1', 'RTPlanName'],\n    '0004': ['ST', '1', 'RTPlanDescription'],\n    '0006': ['DA', '1', 'RTPlanDate'],\n    '0007': ['TM', '1', 'RTPlanTime'],\n    '0009': ['LO', '1-n', 'TreatmentProtocols'],\n    '000A': ['CS', '1', 'PlanIntent'],\n    '000B': ['LO', '1-n', 'TreatmentSites'],\n    '000C': ['CS', '1', 'RTPlanGeometry'],\n    '000E': ['ST', '1', 'PrescriptionDescription'],\n    '0010': ['SQ', '1', 'DoseReferenceSequence'],\n    '0012': ['IS', '1', 'DoseReferenceNumber'],\n    '0013': ['UI', '1', 'DoseReferenceUID'],\n    '0014': ['CS', '1', 'DoseReferenceStructureType'],\n    '0015': ['CS', '1', 'NominalBeamEnergyUnit'],\n    '0016': ['LO', '1', 'DoseReferenceDescription'],\n    '0018': ['DS', '3', 'DoseReferencePointCoordinates'],\n    '001A': ['DS', '1', 'NominalPriorDose'],\n    '0020': ['CS', '1', 'DoseReferenceType'],\n    '0021': ['DS', '1', 'ConstraintWeight'],\n    '0022': ['DS', '1', 'DeliveryWarningDose'],\n    '0023': ['DS', '1', 'DeliveryMaximumDose'],\n    '0025': ['DS', '1', 'TargetMinimumDose'],\n    '0026': ['DS', '1', 'TargetPrescriptionDose'],\n    '0027': ['DS', '1', 'TargetMaximumDose'],\n    '0028': ['DS', '1', 'TargetUnderdoseVolumeFraction'],\n    '002A': ['DS', '1', 'OrganAtRiskFullVolumeDose'],\n    '002B': ['DS', '1', 'OrganAtRiskLimitDose'],\n    '002C': ['DS', '1', 'OrganAtRiskMaximumDose'],\n    '002D': ['DS', '1', 'OrganAtRiskOverdoseVolumeFraction'],\n    '0040': ['SQ', '1', 'ToleranceTableSequence'],\n    '0042': ['IS', '1', 'ToleranceTableNumber'],\n    '0043': ['SH', '1', 'ToleranceTableLabel'],\n    '0044': ['DS', '1', 'GantryAngleTolerance'],\n    '0046': ['DS', '1', 'BeamLimitingDeviceAngleTolerance'],\n    '0048': ['SQ', '1', 'BeamLimitingDeviceToleranceSequence'],\n    '004A': ['DS', '1', 'BeamLimitingDevicePositionTolerance'],\n    '004B': ['FL', '1', 'SnoutPositionTolerance'],\n    '004C': ['DS', '1', 'PatientSupportAngleTolerance'],\n    '004E': ['DS', '1', 'TableTopEccentricAngleTolerance'],\n    '004F': ['FL', '1', 'TableTopPitchAngleTolerance'],\n    '0050': ['FL', '1', 'TableTopRollAngleTolerance'],\n    '0051': ['DS', '1', 'TableTopVerticalPositionTolerance'],\n    '0052': ['DS', '1', 'TableTopLongitudinalPositionTolerance'],\n    '0053': ['DS', '1', 'TableTopLateralPositionTolerance'],\n    '0055': ['CS', '1', 'RTPlanRelationship'],\n    '0070': ['SQ', '1', 'FractionGroupSequence'],\n    '0071': ['IS', '1', 'FractionGroupNumber'],\n    '0072': ['LO', '1', 'FractionGroupDescription'],\n    '0078': ['IS', '1', 'NumberOfFractionsPlanned'],\n    '0079': ['IS', '1', 'NumberOfFractionPatternDigitsPerDay'],\n    '007A': ['IS', '1', 'RepeatFractionCycleLength'],\n    '007B': ['LT', '1', 'FractionPattern'],\n    '0080': ['IS', '1', 'NumberOfBeams'],\n    '0082': ['DS', '3', 'BeamDoseSpecificationPoint'],\n    '0083': ['UI', '1', 'ReferencedDoseReferenceUID'],\n    '0084': ['DS', '1', 'BeamDose'],\n    '0086': ['DS', '1', 'BeamMeterset'],\n    '0088': ['FL', '1', 'BeamDosePointDepth'],\n    '0089': ['FL', '1', 'BeamDosePointEquivalentDepth'],\n    '008A': ['FL', '1', 'BeamDosePointSSD'],\n    '008B': ['CS', '1', 'BeamDoseMeaning'],\n    '008C': ['SQ', '1', 'BeamDoseVerificationControlPointSequence'],\n    '008D': ['FL', '1', 'AverageBeamDosePointDepth'],\n    '008E': ['FL', '1', 'AverageBeamDosePointEquivalentDepth'],\n    '008F': ['FL', '1', 'AverageBeamDosePointSSD'],\n    '0090': ['CS', '1', 'BeamDoseType'],\n    '0091': ['DS', '1', 'AlternateBeamDose'],\n    '0092': ['CS', '1', 'AlternateBeamDoseType'],\n    '0093': ['CS', '1', 'DepthValueAveragingFlag'],\n    '0094': ['DS', '1', 'BeamDosePointSourceToExternalContourDistance'],\n    '00A0': ['IS', '1', 'NumberOfBrachyApplicationSetups'],\n    '00A2': ['DS', '3', 'BrachyApplicationSetupDoseSpecificationPoint'],\n    '00A4': ['DS', '1', 'BrachyApplicationSetupDose'],\n    '00B0': ['SQ', '1', 'BeamSequence'],\n    '00B2': ['SH', '1', 'TreatmentMachineName'],\n    '00B3': ['CS', '1', 'PrimaryDosimeterUnit'],\n    '00B4': ['DS', '1', 'SourceAxisDistance'],\n    '00B6': ['SQ', '1', 'BeamLimitingDeviceSequence'],\n    '00B8': ['CS', '1', 'RTBeamLimitingDeviceType'],\n    '00BA': ['DS', '1', 'SourceToBeamLimitingDeviceDistance'],\n    '00BB': ['FL', '1', 'IsocenterToBeamLimitingDeviceDistance'],\n    '00BC': ['IS', '1', 'NumberOfLeafJawPairs'],\n    '00BE': ['DS', '3-n', 'LeafPositionBoundaries'],\n    '00C0': ['IS', '1', 'BeamNumber'],\n    '00C2': ['LO', '1', 'BeamName'],\n    '00C3': ['ST', '1', 'BeamDescription'],\n    '00C4': ['CS', '1', 'BeamType'],\n    '00C5': ['FD', '1', 'BeamDeliveryDurationLimit'],\n    '00C6': ['CS', '1', 'RadiationType'],\n    '00C7': ['CS', '1', 'HighDoseTechniqueType'],\n    '00C8': ['IS', '1', 'ReferenceImageNumber'],\n    '00CA': ['SQ', '1', 'PlannedVerificationImageSequence'],\n    '00CC': ['LO', '1-n', 'ImagingDeviceSpecificAcquisitionParameters'],\n    '00CE': ['CS', '1', 'TreatmentDeliveryType'],\n    '00D0': ['IS', '1', 'NumberOfWedges'],\n    '00D1': ['SQ', '1', 'WedgeSequence'],\n    '00D2': ['IS', '1', 'WedgeNumber'],\n    '00D3': ['CS', '1', 'WedgeType'],\n    '00D4': ['SH', '1', 'WedgeID'],\n    '00D5': ['IS', '1', 'WedgeAngle'],\n    '00D6': ['DS', '1', 'WedgeFactor'],\n    '00D7': ['FL', '1', 'TotalWedgeTrayWaterEquivalentThickness'],\n    '00D8': ['DS', '1', 'WedgeOrientation'],\n    '00D9': ['FL', '1', 'IsocenterToWedgeTrayDistance'],\n    '00DA': ['DS', '1', 'SourceToWedgeTrayDistance'],\n    '00DB': ['FL', '1', 'WedgeThinEdgePosition'],\n    '00DC': ['SH', '1', 'BolusID'],\n    '00DD': ['ST', '1', 'BolusDescription'],\n    '00DE': ['DS', '1', 'EffectiveWedgeAngle'],\n    '00E0': ['IS', '1', 'NumberOfCompensators'],\n    '00E1': ['SH', '1', 'MaterialID'],\n    '00E2': ['DS', '1', 'TotalCompensatorTrayFactor'],\n    '00E3': ['SQ', '1', 'CompensatorSequence'],\n    '00E4': ['IS', '1', 'CompensatorNumber'],\n    '00E5': ['SH', '1', 'CompensatorID'],\n    '00E6': ['DS', '1', 'SourceToCompensatorTrayDistance'],\n    '00E7': ['IS', '1', 'CompensatorRows'],\n    '00E8': ['IS', '1', 'CompensatorColumns'],\n    '00E9': ['DS', '2', 'CompensatorPixelSpacing'],\n    '00EA': ['DS', '2', 'CompensatorPosition'],\n    '00EB': ['DS', '1-n', 'CompensatorTransmissionData'],\n    '00EC': ['DS', '1-n', 'CompensatorThicknessData'],\n    '00ED': ['IS', '1', 'NumberOfBoli'],\n    '00EE': ['CS', '1', 'CompensatorType'],\n    '00EF': ['SH', '1', 'CompensatorTrayID'],\n    '00F0': ['IS', '1', 'NumberOfBlocks'],\n    '00F2': ['DS', '1', 'TotalBlockTrayFactor'],\n    '00F3': ['FL', '1', 'TotalBlockTrayWaterEquivalentThickness'],\n    '00F4': ['SQ', '1', 'BlockSequence'],\n    '00F5': ['SH', '1', 'BlockTrayID'],\n    '00F6': ['DS', '1', 'SourceToBlockTrayDistance'],\n    '00F7': ['FL', '1', 'IsocenterToBlockTrayDistance'],\n    '00F8': ['CS', '1', 'BlockType'],\n    '00F9': ['LO', '1', 'AccessoryCode'],\n    '00FA': ['CS', '1', 'BlockDivergence'],\n    '00FB': ['CS', '1', 'BlockMountingPosition'],\n    '00FC': ['IS', '1', 'BlockNumber'],\n    '00FE': ['LO', '1', 'BlockName'],\n    '0100': ['DS', '1', 'BlockThickness'],\n    '0102': ['DS', '1', 'BlockTransmission'],\n    '0104': ['IS', '1', 'BlockNumberOfPoints'],\n    '0106': ['DS', '2-2n', 'BlockData'],\n    '0107': ['SQ', '1', 'ApplicatorSequence'],\n    '0108': ['SH', '1', 'ApplicatorID'],\n    '0109': ['CS', '1', 'ApplicatorType'],\n    '010A': ['LO', '1', 'ApplicatorDescription'],\n    '010C': ['DS', '1', 'CumulativeDoseReferenceCoefficient'],\n    '010E': ['DS', '1', 'FinalCumulativeMetersetWeight'],\n    '0110': ['IS', '1', 'NumberOfControlPoints'],\n    '0111': ['SQ', '1', 'ControlPointSequence'],\n    '0112': ['IS', '1', 'ControlPointIndex'],\n    '0114': ['DS', '1', 'NominalBeamEnergy'],\n    '0115': ['DS', '1', 'DoseRateSet'],\n    '0116': ['SQ', '1', 'WedgePositionSequence'],\n    '0118': ['CS', '1', 'WedgePosition'],\n    '011A': ['SQ', '1', 'BeamLimitingDevicePositionSequence'],\n    '011C': ['DS', '2-2n', 'LeafJawPositions'],\n    '011E': ['DS', '1', 'GantryAngle'],\n    '011F': ['CS', '1', 'GantryRotationDirection'],\n    '0120': ['DS', '1', 'BeamLimitingDeviceAngle'],\n    '0121': ['CS', '1', 'BeamLimitingDeviceRotationDirection'],\n    '0122': ['DS', '1', 'PatientSupportAngle'],\n    '0123': ['CS', '1', 'PatientSupportRotationDirection'],\n    '0124': ['DS', '1', 'TableTopEccentricAxisDistance'],\n    '0125': ['DS', '1', 'TableTopEccentricAngle'],\n    '0126': ['CS', '1', 'TableTopEccentricRotationDirection'],\n    '0128': ['DS', '1', 'TableTopVerticalPosition'],\n    '0129': ['DS', '1', 'TableTopLongitudinalPosition'],\n    '012A': ['DS', '1', 'TableTopLateralPosition'],\n    '012C': ['DS', '3', 'IsocenterPosition'],\n    '012E': ['DS', '3', 'SurfaceEntryPoint'],\n    '0130': ['DS', '1', 'SourceToSurfaceDistance'],\n    '0131': ['FL', '1', 'AverageBeamDosePointSourceToExternalContourDistance'],\n    '0132': ['FL', '1', 'SourceToExternalContourDistance'],\n    '0133': ['FL', '3', 'ExternalContourEntryPoint'],\n    '0134': ['DS', '1', 'CumulativeMetersetWeight'],\n    '0140': ['FL', '1', 'TableTopPitchAngle'],\n    '0142': ['CS', '1', 'TableTopPitchRotationDirection'],\n    '0144': ['FL', '1', 'TableTopRollAngle'],\n    '0146': ['CS', '1', 'TableTopRollRotationDirection'],\n    '0148': ['FL', '1', 'HeadFixationAngle'],\n    '014A': ['FL', '1', 'GantryPitchAngle'],\n    '014C': ['CS', '1', 'GantryPitchRotationDirection'],\n    '014E': ['FL', '1', 'GantryPitchAngleTolerance'],\n    '0150': ['CS', '1', 'FixationEye'],\n    '0151': ['DS', '1', 'ChairHeadFramePosition'],\n    '0152': ['DS', '1', 'HeadFixationAngleTolerance'],\n    '0153': ['DS', '1', 'ChairHeadFramePositionTolerance'],\n    '0154': ['DS', '1', 'FixationLightAzimuthalAngleTolerance'],\n    '0155': ['DS', '1', 'FixationLightPolarAngleTolerance'],\n    '0180': ['SQ', '1', 'PatientSetupSequence'],\n    '0182': ['IS', '1', 'PatientSetupNumber'],\n    '0183': ['LO', '1', 'PatientSetupLabel'],\n    '0184': ['LO', '1', 'PatientAdditionalPosition'],\n    '0190': ['SQ', '1', 'FixationDeviceSequence'],\n    '0192': ['CS', '1', 'FixationDeviceType'],\n    '0194': ['SH', '1', 'FixationDeviceLabel'],\n    '0196': ['ST', '1', 'FixationDeviceDescription'],\n    '0198': ['SH', '1', 'FixationDevicePosition'],\n    '0199': ['FL', '1', 'FixationDevicePitchAngle'],\n    '019A': ['FL', '1', 'FixationDeviceRollAngle'],\n    '01A0': ['SQ', '1', 'ShieldingDeviceSequence'],\n    '01A2': ['CS', '1', 'ShieldingDeviceType'],\n    '01A4': ['SH', '1', 'ShieldingDeviceLabel'],\n    '01A6': ['ST', '1', 'ShieldingDeviceDescription'],\n    '01A8': ['SH', '1', 'ShieldingDevicePosition'],\n    '01B0': ['CS', '1', 'SetupTechnique'],\n    '01B2': ['ST', '1', 'SetupTechniqueDescription'],\n    '01B4': ['SQ', '1', 'SetupDeviceSequence'],\n    '01B6': ['CS', '1', 'SetupDeviceType'],\n    '01B8': ['SH', '1', 'SetupDeviceLabel'],\n    '01BA': ['ST', '1', 'SetupDeviceDescription'],\n    '01BC': ['DS', '1', 'SetupDeviceParameter'],\n    '01D0': ['ST', '1', 'SetupReferenceDescription'],\n    '01D2': ['DS', '1', 'TableTopVerticalSetupDisplacement'],\n    '01D4': ['DS', '1', 'TableTopLongitudinalSetupDisplacement'],\n    '01D6': ['DS', '1', 'TableTopLateralSetupDisplacement'],\n    '0200': ['CS', '1', 'BrachyTreatmentTechnique'],\n    '0202': ['CS', '1', 'BrachyTreatmentType'],\n    '0206': ['SQ', '1', 'TreatmentMachineSequence'],\n    '0210': ['SQ', '1', 'SourceSequence'],\n    '0212': ['IS', '1', 'SourceNumber'],\n    '0214': ['CS', '1', 'SourceType'],\n    '0216': ['LO', '1', 'SourceManufacturer'],\n    '0218': ['DS', '1', 'ActiveSourceDiameter'],\n    '021A': ['DS', '1', 'ActiveSourceLength'],\n    '021B': ['SH', '1', 'SourceModelID'],\n    '021C': ['LO', '1', 'SourceDescription'],\n    '0222': ['DS', '1', 'SourceEncapsulationNominalThickness'],\n    '0224': ['DS', '1', 'SourceEncapsulationNominalTransmission'],\n    '0226': ['LO', '1', 'SourceIsotopeName'],\n    '0228': ['DS', '1', 'SourceIsotopeHalfLife'],\n    '0229': ['CS', '1', 'SourceStrengthUnits'],\n    '022A': ['DS', '1', 'ReferenceAirKermaRate'],\n    '022B': ['DS', '1', 'SourceStrength'],\n    '022C': ['DA', '1', 'SourceStrengthReferenceDate'],\n    '022E': ['TM', '1', 'SourceStrengthReferenceTime'],\n    '0230': ['SQ', '1', 'ApplicationSetupSequence'],\n    '0232': ['CS', '1', 'ApplicationSetupType'],\n    '0234': ['IS', '1', 'ApplicationSetupNumber'],\n    '0236': ['LO', '1', 'ApplicationSetupName'],\n    '0238': ['LO', '1', 'ApplicationSetupManufacturer'],\n    '0240': ['IS', '1', 'TemplateNumber'],\n    '0242': ['SH', '1', 'TemplateType'],\n    '0244': ['LO', '1', 'TemplateName'],\n    '0250': ['DS', '1', 'TotalReferenceAirKerma'],\n    '0260': ['SQ', '1', 'BrachyAccessoryDeviceSequence'],\n    '0262': ['IS', '1', 'BrachyAccessoryDeviceNumber'],\n    '0263': ['SH', '1', 'BrachyAccessoryDeviceID'],\n    '0264': ['CS', '1', 'BrachyAccessoryDeviceType'],\n    '0266': ['LO', '1', 'BrachyAccessoryDeviceName'],\n    '026A': ['DS', '1', 'BrachyAccessoryDeviceNominalThickness'],\n    '026C': ['DS', '1', 'BrachyAccessoryDeviceNominalTransmission'],\n    '0271': ['DS', '1', 'ChannelEffectiveLength'],\n    '0272': ['DS', '1', 'ChannelInnerLength'],\n    '0273': ['SH', '1', 'AfterloaderChannelID'],\n    '0274': ['DS', '1', 'SourceApplicatorTipLength'],\n    '0280': ['SQ', '1', 'ChannelSequence'],\n    '0282': ['IS', '1', 'ChannelNumber'],\n    '0284': ['DS', '1', 'ChannelLength'],\n    '0286': ['DS', '1', 'ChannelTotalTime'],\n    '0288': ['CS', '1', 'SourceMovementType'],\n    '028A': ['IS', '1', 'NumberOfPulses'],\n    '028C': ['DS', '1', 'PulseRepetitionInterval'],\n    '0290': ['IS', '1', 'SourceApplicatorNumber'],\n    '0291': ['SH', '1', 'SourceApplicatorID'],\n    '0292': ['CS', '1', 'SourceApplicatorType'],\n    '0294': ['LO', '1', 'SourceApplicatorName'],\n    '0296': ['DS', '1', 'SourceApplicatorLength'],\n    '0298': ['LO', '1', 'SourceApplicatorManufacturer'],\n    '029C': ['DS', '1', 'SourceApplicatorWallNominalThickness'],\n    '029E': ['DS', '1', 'SourceApplicatorWallNominalTransmission'],\n    '02A0': ['DS', '1', 'SourceApplicatorStepSize'],\n    '02A1': ['IS', '1', 'ApplicatorShapeReferencedROINumber'],\n    '02A2': ['IS', '1', 'TransferTubeNumber'],\n    '02A4': ['DS', '1', 'TransferTubeLength'],\n    '02B0': ['SQ', '1', 'ChannelShieldSequence'],\n    '02B2': ['IS', '1', 'ChannelShieldNumber'],\n    '02B3': ['SH', '1', 'ChannelShieldID'],\n    '02B4': ['LO', '1', 'ChannelShieldName'],\n    '02B8': ['DS', '1', 'ChannelShieldNominalThickness'],\n    '02BA': ['DS', '1', 'ChannelShieldNominalTransmission'],\n    '02C8': ['DS', '1', 'FinalCumulativeTimeWeight'],\n    '02D0': ['SQ', '1', 'BrachyControlPointSequence'],\n    '02D2': ['DS', '1', 'ControlPointRelativePosition'],\n    '02D4': ['DS', '3', 'ControlPoint3DPosition'],\n    '02D6': ['DS', '1', 'CumulativeTimeWeight'],\n    '02E0': ['CS', '1', 'CompensatorDivergence'],\n    '02E1': ['CS', '1', 'CompensatorMountingPosition'],\n    '02E2': ['DS', '1-n', 'SourceToCompensatorDistance'],\n    '02E3': ['FL', '1', 'TotalCompensatorTrayWaterEquivalentThickness'],\n    '02E4': ['FL', '1', 'IsocenterToCompensatorTrayDistance'],\n    '02E5': ['FL', '1', 'CompensatorColumnOffset'],\n    '02E6': ['FL', '1-n', 'IsocenterToCompensatorDistances'],\n    '02E7': ['FL', '1', 'CompensatorRelativeStoppingPowerRatio'],\n    '02E8': ['FL', '1', 'CompensatorMillingToolDiameter'],\n    '02EA': ['SQ', '1', 'IonRangeCompensatorSequence'],\n    '02EB': ['LT', '1', 'CompensatorDescription'],\n    '0302': ['IS', '1', 'RadiationMassNumber'],\n    '0304': ['IS', '1', 'RadiationAtomicNumber'],\n    '0306': ['SS', '1', 'RadiationChargeState'],\n    '0308': ['CS', '1', 'ScanMode'],\n    '0309': ['CS', '1', 'ModulatedScanModeType'],\n    '030A': ['FL', '2', 'VirtualSourceAxisDistances'],\n    '030C': ['SQ', '1', 'SnoutSequence'],\n    '030D': ['FL', '1', 'SnoutPosition'],\n    '030F': ['SH', '1', 'SnoutID'],\n    '0312': ['IS', '1', 'NumberOfRangeShifters'],\n    '0314': ['SQ', '1', 'RangeShifterSequence'],\n    '0316': ['IS', '1', 'RangeShifterNumber'],\n    '0318': ['SH', '1', 'RangeShifterID'],\n    '0320': ['CS', '1', 'RangeShifterType'],\n    '0322': ['LO', '1', 'RangeShifterDescription'],\n    '0330': ['IS', '1', 'NumberOfLateralSpreadingDevices'],\n    '0332': ['SQ', '1', 'LateralSpreadingDeviceSequence'],\n    '0334': ['IS', '1', 'LateralSpreadingDeviceNumber'],\n    '0336': ['SH', '1', 'LateralSpreadingDeviceID'],\n    '0338': ['CS', '1', 'LateralSpreadingDeviceType'],\n    '033A': ['LO', '1', 'LateralSpreadingDeviceDescription'],\n    '033C': ['FL', '1', 'LateralSpreadingDeviceWaterEquivalentThickness'],\n    '0340': ['IS', '1', 'NumberOfRangeModulators'],\n    '0342': ['SQ', '1', 'RangeModulatorSequence'],\n    '0344': ['IS', '1', 'RangeModulatorNumber'],\n    '0346': ['SH', '1', 'RangeModulatorID'],\n    '0348': ['CS', '1', 'RangeModulatorType'],\n    '034A': ['LO', '1', 'RangeModulatorDescription'],\n    '034C': ['SH', '1', 'BeamCurrentModulationID'],\n    '0350': ['CS', '1', 'PatientSupportType'],\n    '0352': ['SH', '1', 'PatientSupportID'],\n    '0354': ['LO', '1', 'PatientSupportAccessoryCode'],\n    '0355': ['LO', '1', 'TrayAccessoryCode'],\n    '0356': ['FL', '1', 'FixationLightAzimuthalAngle'],\n    '0358': ['FL', '1', 'FixationLightPolarAngle'],\n    '035A': ['FL', '1', 'MetersetRate'],\n    '0360': ['SQ', '1', 'RangeShifterSettingsSequence'],\n    '0362': ['LO', '1', 'RangeShifterSetting'],\n    '0364': ['FL', '1', 'IsocenterToRangeShifterDistance'],\n    '0366': ['FL', '1', 'RangeShifterWaterEquivalentThickness'],\n    '0370': ['SQ', '1', 'LateralSpreadingDeviceSettingsSequence'],\n    '0372': ['LO', '1', 'LateralSpreadingDeviceSetting'],\n    '0374': ['FL', '1', 'IsocenterToLateralSpreadingDeviceDistance'],\n    '0380': ['SQ', '1', 'RangeModulatorSettingsSequence'],\n    '0382': ['FL', '1', 'RangeModulatorGatingStartValue'],\n    '0384': ['FL', '1', 'RangeModulatorGatingStopValue'],\n    '0386': ['FL', '1', 'RangeModulatorGatingStartWaterEquivalentThickness'],\n    '0388': ['FL', '1', 'RangeModulatorGatingStopWaterEquivalentThickness'],\n    '038A': ['FL', '1', 'IsocenterToRangeModulatorDistance'],\n    '038F': ['FL', '1-n', 'ScanSpotTimeOffset'],\n    '0390': ['SH', '1', 'ScanSpotTuneID'],\n    '0391': ['IS', '1-n', 'ScanSpotPrescribedIndices'],\n    '0392': ['IS', '1', 'NumberOfScanSpotPositions'],\n    '0393': ['CS', '1', 'ScanSpotReordered'],\n    '0394': ['FL', '1-n', 'ScanSpotPositionMap'],\n    '0395': ['CS', '1', 'ScanSpotReorderingAllowed'],\n    '0396': ['FL', '1-n', 'ScanSpotMetersetWeights'],\n    '0398': ['FL', '2', 'ScanningSpotSize'],\n    '0399': ['FL', '2-2n', 'ScanSpotSizesDelivered'],\n    '039A': ['IS', '1', 'NumberOfPaintings'],\n    '03A0': ['SQ', '1', 'IonToleranceTableSequence'],\n    '03A2': ['SQ', '1', 'IonBeamSequence'],\n    '03A4': ['SQ', '1', 'IonBeamLimitingDeviceSequence'],\n    '03A6': ['SQ', '1', 'IonBlockSequence'],\n    '03A8': ['SQ', '1', 'IonControlPointSequence'],\n    '03AA': ['SQ', '1', 'IonWedgeSequence'],\n    '03AC': ['SQ', '1', 'IonWedgePositionSequence'],\n    '0401': ['SQ', '1', 'ReferencedSetupImageSequence'],\n    '0402': ['ST', '1', 'SetupImageComment'],\n    '0410': ['SQ', '1', 'MotionSynchronizationSequence'],\n    '0412': ['FL', '3', 'ControlPointOrientation'],\n    '0420': ['SQ', '1', 'GeneralAccessorySequence'],\n    '0421': ['SH', '1', 'GeneralAccessoryID'],\n    '0422': ['ST', '1', 'GeneralAccessoryDescription'],\n    '0423': ['CS', '1', 'GeneralAccessoryType'],\n    '0424': ['IS', '1', 'GeneralAccessoryNumber'],\n    '0425': ['FL', '1', 'SourceToGeneralAccessoryDistance'],\n    '0426': ['DS', '1', 'IsocenterToGeneralAccessoryDistance'],\n    '0431': ['SQ', '1', 'ApplicatorGeometrySequence'],\n    '0432': ['CS', '1', 'ApplicatorApertureShape'],\n    '0433': ['FL', '1', 'ApplicatorOpening'],\n    '0434': ['FL', '1', 'ApplicatorOpeningX'],\n    '0435': ['FL', '1', 'ApplicatorOpeningY'],\n    '0436': ['FL', '1', 'SourceToApplicatorMountingPositionDistance'],\n    '0440': ['IS', '1', 'NumberOfBlockSlabItems'],\n    '0441': ['SQ', '1', 'BlockSlabSequence'],\n    '0442': ['DS', '1', 'BlockSlabThickness'],\n    '0443': ['US', '1', 'BlockSlabNumber'],\n    '0450': ['SQ', '1', 'DeviceMotionControlSequence'],\n    '0451': ['CS', '1', 'DeviceMotionExecutionMode'],\n    '0452': ['CS', '1', 'DeviceMotionObservationMode'],\n    '0453': ['SQ', '1', 'DeviceMotionParameterCodeSequence'],\n    '0501': ['FL', '1', 'DistalDepthFraction'],\n    '0502': ['FL', '1', 'DistalDepth'],\n    '0503': ['FL', '2', 'NominalRangeModulationFractions'],\n    '0504': ['FL', '2', 'NominalRangeModulatedRegionDepths'],\n    '0505': ['SQ', '1', 'DepthDoseParametersSequence'],\n    '0506': ['SQ', '1', 'DeliveredDepthDoseParametersSequence'],\n    '0507': ['FL', '1', 'DeliveredDistalDepthFraction'],\n    '0508': ['FL', '1', 'DeliveredDistalDepth'],\n    '0509': ['FL', '2', 'DeliveredNominalRangeModulationFractions'],\n    '0510': ['FL', '2', 'DeliveredNominalRangeModulatedRegionDepths'],\n    '0511': ['CS', '1', 'DeliveredReferenceDoseDefinition'],\n    '0512': ['CS', '1', 'ReferenceDoseDefinition'],\n    '0600': ['US', '1', 'RTControlPointIndex'],\n    '0601': ['US', '1', 'RadiationGenerationModeIndex'],\n    '0602': ['US', '1', 'ReferencedDefinedDeviceIndex'],\n    '0603': ['US', '1', 'RadiationDoseIdentificationIndex'],\n    '0604': ['US', '1', 'NumberOfRTControlPoints'],\n    '0605': ['US', '1', 'ReferencedRadiationGenerationModeIndex'],\n    '0606': ['US', '1', 'TreatmentPositionIndex'],\n    '0607': ['US', '1', 'ReferencedDeviceIndex'],\n    '0608': ['LO', '1', 'TreatmentPositionGroupLabel'],\n    '0609': ['UI', '1', 'TreatmentPositionGroupUID'],\n    '060A': ['SQ', '1', 'TreatmentPositionGroupSequence'],\n    '060B': ['US', '1', 'ReferencedTreatmentPositionIndex'],\n    '060C': ['US', '1', 'ReferencedRadiationDoseIdentificationIndex'],\n    '060D': ['FD', '1', 'RTAccessoryHolderWaterEquivalentThickness'],\n    '060E': ['US', '1', 'ReferencedRTAccessoryHolderDeviceIndex'],\n    '060F': ['CS', '1', 'RTAccessoryHolderSlotExistenceFlag'],\n    '0610': ['SQ', '1', 'RTAccessoryHolderSlotSequence'],\n    '0611': ['LO', '1', 'RTAccessoryHolderSlotID'],\n    '0612': ['FD', '1', 'RTAccessoryHolderSlotDistance'],\n    '0613': ['FD', '1', 'RTAccessorySlotDistance'],\n    '0614': ['SQ', '1', 'RTAccessoryHolderDefinitionSequence'],\n    '0615': ['LO', '1', 'RTAccessoryDeviceSlotID'],\n    '0616': ['SQ', '1', 'RTRadiationSequence'],\n    '0617': ['SQ', '1', 'RadiationDoseSequence'],\n    '0618': ['SQ', '1', 'RadiationDoseIdentificationSequence'],\n    '0619': ['LO', '1', 'RadiationDoseIdentificationLabel'],\n    '061A': ['CS', '1', 'ReferenceDoseType'],\n    '061B': ['CS', '1', 'PrimaryDoseValueIndicator'],\n    '061C': ['SQ', '1', 'DoseValuesSequence'],\n    '061D': ['CS', '1-n', 'DoseValuePurpose'],\n    '061E': ['FD', '3', 'ReferenceDosePointCoordinates'],\n    '061F': ['SQ', '1', 'RadiationDoseValuesParametersSequence'],\n    '0620': ['SQ', '1', 'MetersetToDoseMappingSequence'],\n    '0621': ['SQ', '1', 'ExpectedInVivoMeasurementValuesSequence'],\n    '0622': ['US', '1', 'ExpectedInVivoMeasurementValueIndex'],\n    '0623': ['LO', '1', 'RadiationDoseInVivoMeasurementLabel'],\n    '0624': ['FD', '2', 'RadiationDoseCentralAxisDisplacement'],\n    '0625': ['FD', '1', 'RadiationDoseValue'],\n    '0626': ['FD', '1', 'RadiationDoseSourceToSkinDistance'],\n    '0627': ['FD', '3', 'RadiationDoseMeasurementPointCoordinates'],\n    '0628': ['FD', '1', 'RadiationDoseSourceToExternalContourDistance'],\n    '0629': ['SQ', '1', 'RTToleranceSetSequence'],\n    '062A': ['LO', '1', 'RTToleranceSetLabel'],\n    '062B': ['SQ', '1', 'AttributeToleranceValuesSequence'],\n    '062C': ['FD', '1', 'ToleranceValue'],\n    '062D': ['SQ', '1', 'PatientSupportPositionToleranceSequence'],\n    '062E': ['FD', '1', 'TreatmentTimeLimit'],\n    '062F': ['SQ', '1', 'CArmPhotonElectronControlPointSequence'],\n    '0630': ['SQ', '1', 'ReferencedRTRadiationSequence'],\n    '0631': ['SQ', '1', 'ReferencedRTInstanceSequence'],\n    '0632': ['SQ', '1', 'ReferencedRTPatientSetupSequence'],\n    '0634': ['FD', '1', 'SourceToPatientSurfaceDistance'],\n    '0635': ['SQ', '1', 'TreatmentMachineSpecialModeCodeSequence'],\n    '0636': ['US', '1', 'IntendedNumberOfFractions'],\n    '0637': ['CS', '1', 'RTRadiationSetIntent'],\n    '0638': ['CS', '1', 'RTRadiationPhysicalAndGeometricContentDetailFlag'],\n    '0639': ['CS', '1', 'RTRecordFlag'],\n    '063A': ['SQ', '1', 'TreatmentDeviceIdentificationSequence'],\n    '063B': ['SQ', '1', 'ReferencedRTPhysicianIntentSequence'],\n    '063C': ['FD', '1', 'CumulativeMeterset'],\n    '063D': ['FD', '1', 'DeliveryRate'],\n    '063E': ['SQ', '1', 'DeliveryRateUnitSequence'],\n    '063F': ['SQ', '1', 'TreatmentPositionSequence'],\n    '0640': ['FD', '1', 'RadiationSourceAxisDistance'],\n    '0641': ['US', '1', 'NumberOfRTBeamLimitingDevices'],\n    '0642': ['FD', '1', 'RTBeamLimitingDeviceProximalDistance'],\n    '0643': ['FD', '1', 'RTBeamLimitingDeviceDistalDistance'],\n    '0644': ['SQ', '1', 'ParallelRTBeamDelimiterDeviceOrientationLabelCodeSequence'],\n    '0645': ['FD', '1', 'BeamModifierOrientationAngle'],\n    '0646': ['SQ', '1', 'FixedRTBeamDelimiterDeviceSequence'],\n    '0647': ['SQ', '1', 'ParallelRTBeamDelimiterDeviceSequence'],\n    '0648': ['US', '1', 'NumberOfParallelRTBeamDelimiters'],\n    '0649': ['FD', '2-n', 'ParallelRTBeamDelimiterBoundaries'],\n    '064A': ['FD', '2-n', 'ParallelRTBeamDelimiterPositions'],\n    '064B': ['FD', '2', 'RTBeamLimitingDeviceOffset'],\n    '064C': ['SQ', '1', 'RTBeamDelimiterGeometrySequence'],\n    '064D': ['SQ', '1', 'RTBeamLimitingDeviceDefinitionSequence'],\n    '064E': ['CS', '1', 'ParallelRTBeamDelimiterOpeningMode'],\n    '064F': ['CS', '1-n', 'ParallelRTBeamDelimiterLeafMountingSide'],\n    '0650': ['UI', '1', 'PatientSetupUID'],\n    '0651': ['SQ', '1', 'WedgeDefinitionSequence'],\n    '0652': ['FD', '1', 'RadiationBeamWedgeAngle'],\n    '0653': ['FD', '1', 'RadiationBeamWedgeThinEdgeDistance'],\n    '0654': ['FD', '1', 'RadiationBeamEffectiveWedgeAngle'],\n    '0655': ['US', '1', 'NumberOfWedgePositions'],\n    '0656': ['SQ', '1', 'RTBeamLimitingDeviceOpeningSequence'],\n    '0657': ['US', '1', 'NumberOfRTBeamLimitingDeviceOpenings'],\n    '0658': ['SQ', '1', 'RadiationDosimeterUnitSequence'],\n    '0659': ['SQ', '1', 'RTDeviceDistanceReferenceLocationCodeSequence'],\n    '065A': ['SQ', '1', 'RadiationDeviceConfigurationAndCommissioningKeySequence'],\n    '065B': ['SQ', '1', 'PatientSupportPositionParameterSequence'],\n    '065C': ['CS', '1', 'PatientSupportPositionSpecificationMethod'],\n    '065D': ['SQ', '1', 'PatientSupportPositionDeviceParameterSequence'],\n    '065E': ['US', '1', 'DeviceOrderIndex'],\n    '065F': ['US', '1', 'PatientSupportPositionParameterOrderIndex'],\n    '0660': ['SQ', '1', 'PatientSupportPositionDeviceToleranceSequence'],\n    '0661': ['US', '1', 'PatientSupportPositionToleranceOrderIndex'],\n    '0662': ['SQ', '1', 'CompensatorDefinitionSequence'],\n    '0663': ['CS', '1', 'CompensatorMapOrientation'],\n    '0664': ['OF', '1', 'CompensatorProximalThicknessMap'],\n    '0665': ['OF', '1', 'CompensatorDistalThicknessMap'],\n    '0666': ['FD', '1', 'CompensatorBasePlaneOffset'],\n    '0667': ['SQ', '1', 'CompensatorShapeFabricationCodeSequence'],\n    '0668': ['SQ', '1', 'CompensatorShapeSequence'],\n    '0669': ['FD', '1', 'RadiationBeamCompensatorMillingToolDiameter'],\n    '066A': ['SQ', '1', 'BlockDefinitionSequence'],\n    '066B': ['OF', '1', 'BlockEdgeData'],\n    '066C': ['CS', '1', 'BlockOrientation'],\n    '066D': ['FD', '1', 'RadiationBeamBlockThickness'],\n    '066E': ['FD', '1', 'RadiationBeamBlockSlabThickness'],\n    '066F': ['SQ', '1', 'BlockEdgeDataSequence'],\n    '0670': ['US', '1', 'NumberOfRTAccessoryHolders'],\n    '0671': ['SQ', '1', 'GeneralAccessoryDefinitionSequence'],\n    '0672': ['US', '1', 'NumberOfGeneralAccessories'],\n    '0673': ['SQ', '1', 'BolusDefinitionSequence'],\n    '0674': ['US', '1', 'NumberOfBoluses'],\n    '0675': ['UI', '1', 'EquipmentFrameOfReferenceUID'],\n    '0676': ['ST', '1', 'EquipmentFrameOfReferenceDescription'],\n    '0677': ['SQ', '1', 'EquipmentReferencePointCoordinatesSequence'],\n    '0678': ['SQ', '1', 'EquipmentReferencePointCodeSequence'],\n    '0679': ['FD', '1', 'RTBeamLimitingDeviceAngle'],\n    '067A': ['FD', '1', 'SourceRollAngle'],\n    '067B': ['SQ', '1', 'RadiationGenerationModeSequence'],\n    '067C': ['SH', '1', 'RadiationGenerationModeLabel'],\n    '067D': ['ST', '1', 'RadiationGenerationModeDescription'],\n    '067E': ['SQ', '1', 'RadiationGenerationModeMachineCodeSequence'],\n    '067F': ['SQ', '1', 'RadiationTypeCodeSequence'],\n    '0680': ['DS', '1', 'NominalEnergy'],\n    '0681': ['DS', '1', 'MinimumNominalEnergy'],\n    '0682': ['DS', '1', 'MaximumNominalEnergy'],\n    '0683': ['SQ', '1', 'RadiationFluenceModifierCodeSequence'],\n    '0684': ['SQ', '1', 'EnergyUnitCodeSequence'],\n    '0685': ['US', '1', 'NumberOfRadiationGenerationModes'],\n    '0686': ['SQ', '1', 'PatientSupportDevicesSequence'],\n    '0687': ['US', '1', 'NumberOfPatientSupportDevices'],\n    '0688': ['FD', '1', 'RTBeamModifierDefinitionDistance'],\n    '0689': ['SQ', '1', 'BeamAreaLimitSequence'],\n    '068A': ['SQ', '1', 'ReferencedRTPrescriptionSequence'],\n    '0700': ['UI', '1', 'TreatmentSessionUID'],\n    '0701': ['CS', '1', 'RTRadiationUsage'],\n    '0702': ['SQ', '1', 'ReferencedRTRadiationSetSequence'],\n    '0703': ['SQ', '1', 'ReferencedRTRadiationRecordSequence'],\n    '0704': ['US', '1', 'RTRadiationSetDeliveryNumber'],\n    '0705': ['US', '1', 'ClinicalFractionNumber'],\n    '0706': ['CS', '1', 'RTTreatmentFractionCompletionStatus'],\n    '0707': ['CS', '1', 'RTRadiationSetUsage'],\n    '0708': ['CS', '1', 'TreatmentDeliveryContinuationFlag'],\n    '0709': ['CS', '1', 'TreatmentRecordContentOrigin'],\n    '0714': ['CS', '1', 'RTTreatmentTerminationStatus'],\n    '0715': ['SQ', '1', 'RTTreatmentTerminationReasonCodeSequence'],\n    '0716': ['SQ', '1', 'MachineSpecificTreatmentTerminationCodeSequence'],\n    '0722': ['SQ', '1', 'RTRadiationSalvageRecordControlPointSequence'],\n    '0723': ['CS', '1', 'StartingMetersetValueKnownFlag'],\n    '0730': ['ST', '1', 'TreatmentTerminationDescription'],\n    '0731': ['SQ', '1', 'TreatmentToleranceViolationSequence'],\n    '0732': ['CS', '1', 'TreatmentToleranceViolationCategory'],\n    '0733': ['SQ', '1', 'TreatmentToleranceViolationAttributeSequence'],\n    '0734': ['ST', '1', 'TreatmentToleranceViolationDescription'],\n    '0735': ['ST', '1', 'TreatmentToleranceViolationIdentification'],\n    '0736': ['DT', '1', 'TreatmentToleranceViolationDateTime'],\n    '073A': ['DT', '1', 'RecordedRTControlPointDateTime'],\n    '073B': ['US', '1', 'ReferencedRadiationRTControlPointIndex'],\n    '073E': ['SQ', '1', 'AlternateValueSequence'],\n    '073F': ['SQ', '1', 'ConfirmationSequence'],\n    '0740': ['SQ', '1', 'InterlockSequence'],\n    '0741': ['DT', '1', 'InterlockDateTime'],\n    '0742': ['ST', '1', 'InterlockDescription'],\n    '0743': ['SQ', '1', 'InterlockOriginatingDeviceSequence'],\n    '0744': ['SQ', '1', 'InterlockCodeSequence'],\n    '0745': ['SQ', '1', 'InterlockResolutionCodeSequence'],\n    '0746': ['SQ', '1', 'InterlockResolutionUserSequence'],\n    '0760': ['DT', '1', 'OverrideDateTime'],\n    '0761': ['SQ', '1', 'TreatmentToleranceViolationTypeCodeSequence'],\n    '0762': ['SQ', '1', 'TreatmentToleranceViolationCauseCodeSequence'],\n    '0772': ['SQ', '1', 'MeasuredMetersetToDoseMappingSequence'],\n    '0773': ['US', '1', 'ReferencedExpectedInVivoMeasurementValueIndex'],\n    '0774': ['SQ', '1', 'DoseMeasurementDeviceCodeSequence'],\n    '0780': ['SQ', '1', 'AdditionalParameterRecordingInstanceSequence'],\n    '0782': ['US', '1', ''],\n    '0783': ['ST', '1', 'InterlockOriginDescription'],\n    '0784': ['SQ', '1', 'RTPatientPositionScopeSequence'],\n    '0785': ['UI', '1', 'ReferencedTreatmentPositionGroupUID'],\n    '0786': ['US', '1', 'RadiationOrderIndex'],\n    '0787': ['SQ', '1', 'OmittedRadiationSequence'],\n    '0788': ['SQ', '1', 'ReasonForOmissionCodeSequence'],\n    '0789': ['SQ', '1', 'RTDeliveryStartPatientPositionSequence'],\n    '078A': ['SQ', '1', 'RTTreatmentPreparationPatientPositionSequence'],\n    '078B': ['SQ', '1', 'ReferencedRTTreatmentPreparationSequence'],\n    '078C': ['SQ', '1', 'ReferencedPatientSetupPhotoSequence'],\n    '078D': ['SQ', '1', 'PatientTreatmentPreparationMethodCodeSequence'],\n    '078E': ['LT', '1', 'PatientTreatmentPreparationProcedureParameterDescription'],\n    '078F': ['SQ', '1', 'PatientTreatmentPreparationDeviceSequence'],\n    '0790': ['SQ', '1', 'PatientTreatmentPreparationProcedureSequence'],\n    '0791': ['SQ', '1', 'PatientTreatmentPreparationProcedureCodeSequence'],\n    '0792': ['LT', '1', 'PatientTreatmentPreparationMethodDescription'],\n    '0793': ['SQ', '1', 'PatientTreatmentPreparationProcedureParameterSequence'],\n    '0794': ['LT', '1', 'PatientSetupPhotoDescription'],\n    '0795': ['US', '1', 'PatientTreatmentPreparationProcedureIndex'],\n    '0796': ['US', '1', 'ReferencedPatientSetupProcedureIndex'],\n    '0797': ['SQ', '1', 'RTRadiationTaskSequence'],\n    '0798': ['SQ', '1', 'RTPatientPositionDisplacementSequence'],\n    '0799': ['SQ', '1', 'RTPatientPositionSequence'],\n    '079A': ['LO', '1', 'DisplacementReferenceLabel'],\n    '079B': ['FD', '16', 'DisplacementMatrix'],\n    '079C': ['SQ', '1', 'PatientSupportDisplacementSequence'],\n    '079D': ['SQ', '1', 'DisplacementReferenceLocationCodeSequence'],\n    '079E': ['CS', '1', 'RTRadiationSetDeliveryUsage']\n  },\n  '300C': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SQ', '1', 'ReferencedRTPlanSequence'],\n    '0004': ['SQ', '1', 'ReferencedBeamSequence'],\n    '0006': ['IS', '1', 'ReferencedBeamNumber'],\n    '0007': ['IS', '1', 'ReferencedReferenceImageNumber'],\n    '0008': ['DS', '1', 'StartCumulativeMetersetWeight'],\n    '0009': ['DS', '1', 'EndCumulativeMetersetWeight'],\n    '000A': ['SQ', '1', 'ReferencedBrachyApplicationSetupSequence'],\n    '000C': ['IS', '1', 'ReferencedBrachyApplicationSetupNumber'],\n    '000E': ['IS', '1', 'ReferencedSourceNumber'],\n    '0020': ['SQ', '1', 'ReferencedFractionGroupSequence'],\n    '0022': ['IS', '1', 'ReferencedFractionGroupNumber'],\n    '0040': ['SQ', '1', 'ReferencedVerificationImageSequence'],\n    '0042': ['SQ', '1', 'ReferencedReferenceImageSequence'],\n    '0050': ['SQ', '1', 'ReferencedDoseReferenceSequence'],\n    '0051': ['IS', '1', 'ReferencedDoseReferenceNumber'],\n    '0055': ['SQ', '1', 'BrachyReferencedDoseReferenceSequence'],\n    '0060': ['SQ', '1', 'ReferencedStructureSetSequence'],\n    '006A': ['IS', '1', 'ReferencedPatientSetupNumber'],\n    '0080': ['SQ', '1', 'ReferencedDoseSequence'],\n    '00A0': ['IS', '1', 'ReferencedToleranceTableNumber'],\n    '00B0': ['SQ', '1', 'ReferencedBolusSequence'],\n    '00C0': ['IS', '1', 'ReferencedWedgeNumber'],\n    '00D0': ['IS', '1', 'ReferencedCompensatorNumber'],\n    '00E0': ['IS', '1', 'ReferencedBlockNumber'],\n    '00F0': ['IS', '1', 'ReferencedControlPointIndex'],\n    '00F2': ['SQ', '1', 'ReferencedControlPointSequence'],\n    '00F4': ['IS', '1', 'ReferencedStartControlPointIndex'],\n    '00F6': ['IS', '1', 'ReferencedStopControlPointIndex'],\n    '0100': ['IS', '1', 'ReferencedRangeShifterNumber'],\n    '0102': ['IS', '1', 'ReferencedLateralSpreadingDeviceNumber'],\n    '0104': ['IS', '1', 'ReferencedRangeModulatorNumber'],\n    '0111': ['SQ', '1', 'OmittedBeamTaskSequence'],\n    '0112': ['CS', '1', 'ReasonForOmission'],\n    '0113': ['LO', '1', 'ReasonForOmissionDescription'],\n    '0114': ['SQ', '1', 'PrescriptionOverviewSequence'],\n    '0115': ['FL', '1', 'TotalPrescriptionDose'],\n    '0116': ['SQ', '1', 'PlanOverviewSequence'],\n    '0117': ['US', '1', 'PlanOverviewIndex'],\n    '0118': ['US', '1', 'ReferencedPlanOverviewIndex'],\n    '0119': ['US', '1', 'NumberOfFractionsIncluded'],\n    '0120': ['SQ', '1', 'DoseCalibrationConditionsSequence'],\n    '0121': ['FD', '1', 'AbsorbedDoseToMetersetRatio'],\n    '0122': ['FD', '2', 'DelineatedRadiationFieldSize'],\n    '0123': ['CS', '1', 'DoseCalibrationConditionsVerifiedFlag'],\n    '0124': ['FD', '1', 'CalibrationReferencePointDepth'],\n    '0125': ['SQ', '1', 'GatingBeamHoldTransitionSequence'],\n    '0126': ['CS', '1', 'BeamHoldTransition'],\n    '0127': ['DT', '1', 'BeamHoldTransitionDateTime'],\n    '0128': ['SQ', '1', 'BeamHoldOriginatingDeviceSequence']\n  },\n  '300E': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['CS', '1', 'ApprovalStatus'],\n    '0004': ['DA', '1', 'ReviewDate'],\n    '0005': ['TM', '1', 'ReviewTime'],\n    '0008': ['PN', '1', 'ReviewerName']\n  },\n  '3010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'RadiobiologicalDoseEffectSequence'],\n    '0002': ['CS', '1', 'RadiobiologicalDoseEffectFlag'],\n    '0003': ['SQ', '1', 'EffectiveDoseCalculationMethodCategoryCodeSequence'],\n    '0004': ['SQ', '1', 'EffectiveDoseCalculationMethodCodeSequence'],\n    '0005': ['LO', '1', 'EffectiveDoseCalculationMethodDescription'],\n    '0006': ['UI', '1', 'ConceptualVolumeUID'],\n    '0007': ['SQ', '1', 'OriginatingSOPInstanceReferenceSequence'],\n    '0008': ['SQ', '1', 'ConceptualVolumeConstituentSequence'],\n    '0009': ['SQ', '1', 'EquivalentConceptualVolumeInstanceReferenceSequence'],\n    '000A': ['SQ', '1', 'EquivalentConceptualVolumesSequence'],\n    '000B': ['UI', '1', 'ReferencedConceptualVolumeUID'],\n    '000C': ['UT', '1', 'ConceptualVolumeCombinationExpression'],\n    '000D': ['US', '1', 'ConceptualVolumeConstituentIndex'],\n    '000E': ['CS', '1', 'ConceptualVolumeCombinationFlag'],\n    '000F': ['ST', '1', 'ConceptualVolumeCombinationDescription'],\n    '0010': ['CS', '1', 'ConceptualVolumeSegmentationDefinedFlag'],\n    '0011': ['SQ', '1', 'ConceptualVolumeSegmentationReferenceSequence'],\n    '0012': ['SQ', '1', 'ConceptualVolumeConstituentSegmentationReferenceSequence'],\n    '0013': ['UI', '1', 'ConstituentConceptualVolumeUID'],\n    '0014': ['SQ', '1', 'DerivationConceptualVolumeSequence'],\n    '0015': ['UI', '1', 'SourceConceptualVolumeUID'],\n    '0016': ['SQ', '1', 'ConceptualVolumeDerivationAlgorithmSequence'],\n    '0017': ['ST', '1', 'ConceptualVolumeDescription'],\n    '0018': ['SQ', '1', 'SourceConceptualVolumeSequence'],\n    '0019': ['SQ', '1', 'AuthorIdentificationSequence'],\n    '001A': ['LO', '1', 'ManufacturerModelVersion'],\n    '001B': ['UC', '1', 'DeviceAlternateIdentifier'],\n    '001C': ['CS', '1', 'DeviceAlternateIdentifierType'],\n    '001D': ['LT', '1', 'DeviceAlternateIdentifierFormat'],\n    '001E': ['LO', '1', 'SegmentationCreationTemplateLabel'],\n    '001F': ['UI', '1', 'SegmentationTemplateUID'],\n    '0020': ['US', '1', 'ReferencedSegmentReferenceIndex'],\n    '0021': ['SQ', '1', 'SegmentReferenceSequence'],\n    '0022': ['US', '1', 'SegmentReferenceIndex'],\n    '0023': ['SQ', '1', 'DirectSegmentReferenceSequence'],\n    '0024': ['SQ', '1', 'CombinationSegmentReferenceSequence'],\n    '0025': ['SQ', '1', 'ConceptualVolumeSequence'],\n    '0026': ['SQ', '1', 'SegmentedRTAccessoryDeviceSequence'],\n    '0027': ['SQ', '1', 'SegmentCharacteristicsSequence'],\n    '0028': ['SQ', '1', 'RelatedSegmentCharacteristicsSequence'],\n    '0029': ['US', '1', 'SegmentCharacteristicsPrecedence'],\n    '002A': ['SQ', '1', 'RTSegmentAnnotationSequence'],\n    '002B': ['SQ', '1', 'SegmentAnnotationCategoryCodeSequence'],\n    '002C': ['SQ', '1', 'SegmentAnnotationTypeCodeSequence'],\n    '002D': ['LO', '1', 'DeviceLabel'],\n    '002E': ['SQ', '1', 'DeviceTypeCodeSequence'],\n    '002F': ['SQ', '1', 'SegmentAnnotationTypeModifierCodeSequence'],\n    '0030': ['SQ', '1', 'PatientEquipmentRelationshipCodeSequence'],\n    '0031': ['UI', '1', 'ReferencedFiducialsUID'],\n    '0032': ['SQ', '1', 'PatientTreatmentOrientationSequence'],\n    '0033': ['SH', '1', 'UserContentLabel'],\n    '0034': ['LO', '1', 'UserContentLongLabel'],\n    '0035': ['SH', '1', 'EntityLabel'],\n    '0036': ['LO', '1', 'EntityName'],\n    '0037': ['ST', '1', 'EntityDescription'],\n    '0038': ['LO', '1', 'EntityLongLabel'],\n    '0039': ['US', '1', 'DeviceIndex'],\n    '003A': ['US', '1', 'RTTreatmentPhaseIndex'],\n    '003B': ['UI', '1', 'RTTreatmentPhaseUID'],\n    '003C': ['US', '1', 'RTPrescriptionIndex'],\n    '003D': ['US', '1', 'RTSegmentAnnotationIndex'],\n    '003E': ['US', '1', 'BasisRTTreatmentPhaseIndex'],\n    '003F': ['US', '1', 'RelatedRTTreatmentPhaseIndex'],\n    '0040': ['US', '1', 'ReferencedRTTreatmentPhaseIndex'],\n    '0041': ['US', '1', 'ReferencedRTPrescriptionIndex'],\n    '0042': ['US', '1', 'ReferencedParentRTPrescriptionIndex'],\n    '0043': ['ST', '1', 'ManufacturerDeviceIdentifier'],\n    '0044': ['SQ', '1', 'InstanceLevelReferencedPerformedProcedureStepSequence'],\n    '0045': ['CS', '1', 'RTTreatmentPhaseIntentPresenceFlag'],\n    '0046': ['CS', '1', 'RadiotherapyTreatmentType'],\n    '0047': ['CS', '1-n', 'TeletherapyRadiationType'],\n    '0048': ['CS', '1-n', 'BrachytherapySourceType'],\n    '0049': ['SQ', '1', 'ReferencedRTTreatmentPhaseSequence'],\n    '004A': ['SQ', '1', 'ReferencedDirectSegmentInstanceSequence'],\n    '004B': ['SQ', '1', 'IntendedRTTreatmentPhaseSequence'],\n    '004C': ['DA', '1', 'IntendedPhaseStartDate'],\n    '004D': ['DA', '1', 'IntendedPhaseEndDate'],\n    '004E': ['SQ', '1', 'RTTreatmentPhaseIntervalSequence'],\n    '004F': ['CS', '1', 'TemporalRelationshipIntervalAnchor'],\n    '0050': ['FD', '1', 'MinimumNumberOfIntervalDays'],\n    '0051': ['FD', '1', 'MaximumNumberOfIntervalDays'],\n    '0052': ['UI', '1-n', 'PertinentSOPClassesInStudy'],\n    '0053': ['UI', '1-n', 'PertinentSOPClassesInSeries'],\n    '0054': ['LO', '1', 'RTPrescriptionLabel'],\n    '0055': ['SQ', '1', 'RTPhysicianIntentPredecessorSequence'],\n    '0056': ['LO', '1', 'RTTreatmentApproachLabel'],\n    '0057': ['SQ', '1', 'RTPhysicianIntentSequence'],\n    '0058': ['US', '1', 'RTPhysicianIntentIndex'],\n    '0059': ['CS', '1', 'RTTreatmentIntentType'],\n    '005A': ['UT', '1', 'RTPhysicianIntentNarrative'],\n    '005B': ['SQ', '1', 'RTProtocolCodeSequence'],\n    '005C': ['ST', '1', 'ReasonForSuperseding'],\n    '005D': ['SQ', '1', 'RTDiagnosisCodeSequence'],\n    '005E': ['US', '1', 'ReferencedRTPhysicianIntentIndex'],\n    '005F': ['SQ', '1', 'RTPhysicianIntentInputInstanceSequence'],\n    '0060': ['SQ', '1', 'RTAnatomicPrescriptionSequence'],\n    '0061': ['UT', '1', 'PriorTreatmentDoseDescription'],\n    '0062': ['SQ', '1', 'PriorTreatmentReferenceSequence'],\n    '0063': ['CS', '1', 'DosimetricObjectiveEvaluationScope'],\n    '0064': ['SQ', '1', 'TherapeuticRoleCategoryCodeSequence'],\n    '0065': ['SQ', '1', 'TherapeuticRoleTypeCodeSequence'],\n    '0066': ['US', '1', 'ConceptualVolumeOptimizationPrecedence'],\n    '0067': ['SQ', '1', 'ConceptualVolumeCategoryCodeSequence'],\n    '0068': ['CS', '1', 'ConceptualVolumeBlockingConstraint'],\n    '0069': ['SQ', '1', 'ConceptualVolumeTypeCodeSequence'],\n    '006A': ['SQ', '1', 'ConceptualVolumeTypeModifierCodeSequence'],\n    '006B': ['SQ', '1', 'RTPrescriptionSequence'],\n    '006C': ['SQ', '1', 'DosimetricObjectiveSequence'],\n    '006D': ['SQ', '1', 'DosimetricObjectiveTypeCodeSequence'],\n    '006E': ['UI', '1', 'DosimetricObjectiveUID'],\n    '006F': ['UI', '1', 'ReferencedDosimetricObjectiveUID'],\n    '0070': ['SQ', '1', 'DosimetricObjectiveParameterSequence'],\n    '0071': ['SQ', '1', 'ReferencedDosimetricObjectivesSequence'],\n    '0073': ['CS', '1', 'AbsoluteDosimetricObjectiveFlag'],\n    '0074': ['FD', '1', 'DosimetricObjectiveWeight'],\n    '0075': ['CS', '1', 'DosimetricObjectivePurpose'],\n    '0076': ['SQ', '1', 'PlanningInputInformationSequence'],\n    '0077': ['LO', '1', 'TreatmentSite'],\n    '0078': ['SQ', '1', 'TreatmentSiteCodeSequence'],\n    '0079': ['SQ', '1', 'FractionPatternSequence'],\n    '007A': ['UT', '1', 'TreatmentTechniqueNotes'],\n    '007B': ['UT', '1', 'PrescriptionNotes'],\n    '007C': ['IS', '1', 'NumberOfIntervalFractions'],\n    '007D': ['US', '1', 'NumberOfFractions'],\n    '007E': ['US', '1', 'IntendedDeliveryDuration'],\n    '007F': ['UT', '1', 'FractionationNotes'],\n    '0080': ['SQ', '1', 'RTTreatmentTechniqueCodeSequence'],\n    '0081': ['SQ', '1', 'PrescriptionNotesSequence'],\n    '0082': ['SQ', '1', 'FractionBasedRelationshipSequence'],\n    '0083': ['CS', '1', 'FractionBasedRelationshipIntervalAnchor'],\n    '0084': ['FD', '1', 'MinimumHoursBetweenFractions'],\n    '0085': ['TM', '1-n', 'IntendedFractionStartTime'],\n    '0086': ['LT', '1', 'IntendedStartDayOfWeek'],\n    '0087': ['SQ', '1', 'WeekdayFractionPatternSequence'],\n    '0088': ['SQ', '1', 'DeliveryTimeStructureCodeSequence'],\n    '0089': ['SQ', '1', 'TreatmentSiteModifierCodeSequence'],\n    '0090': ['CS', '1', 'RoboticBaseLocationIndicator'],\n    '0091': ['SQ', '1', 'RoboticPathNodeSetCodeSequence'],\n    '0092': ['UL', '1', 'RoboticNodeIdentifier'],\n    '0093': ['FD', '3', 'RTTreatmentSourceCoordinates'],\n    '0094': ['FD', '1', 'RadiationSourceCoordinateSystemYawAngle'],\n    '0095': ['FD', '1', 'RadiationSourceCoordinateSystemRollAngle'],\n    '0096': ['FD', '1', 'RadiationSourceCoordinateSystemPitchAngle'],\n    '0097': ['SQ', '1', 'RoboticPathControlPointSequence'],\n    '0098': ['SQ', '1', 'TomotherapeuticControlPointSequence'],\n    '0099': ['FD', '1-n', 'TomotherapeuticLeafOpenDurations'],\n    '009A': ['FD', '1-n', 'TomotherapeuticLeafInitialClosedDurations']\n  },\n  '4000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LT', '1', 'Arbitrary'],\n    '4000': ['LT', '1', 'TextComments']\n  },\n  '4008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0040': ['SH', '1', 'ResultsID'],\n    '0042': ['LO', '1', 'ResultsIDIssuer'],\n    '0050': ['SQ', '1', 'ReferencedInterpretationSequence'],\n    '00FF': ['CS', '1', 'ReportProductionStatusTrial'],\n    '0100': ['DA', '1', 'InterpretationRecordedDate'],\n    '0101': ['TM', '1', 'InterpretationRecordedTime'],\n    '0102': ['PN', '1', 'InterpretationRecorder'],\n    '0103': ['LO', '1', 'ReferenceToRecordedSound'],\n    '0108': ['DA', '1', 'InterpretationTranscriptionDate'],\n    '0109': ['TM', '1', 'InterpretationTranscriptionTime'],\n    '010A': ['PN', '1', 'InterpretationTranscriber'],\n    '010B': ['ST', '1', 'InterpretationText'],\n    '010C': ['PN', '1', 'InterpretationAuthor'],\n    '0111': ['SQ', '1', 'InterpretationApproverSequence'],\n    '0112': ['DA', '1', 'InterpretationApprovalDate'],\n    '0113': ['TM', '1', 'InterpretationApprovalTime'],\n    '0114': ['PN', '1', 'PhysicianApprovingInterpretation'],\n    '0115': ['LT', '1', 'InterpretationDiagnosisDescription'],\n    '0117': ['SQ', '1', 'InterpretationDiagnosisCodeSequence'],\n    '0118': ['SQ', '1', 'ResultsDistributionListSequence'],\n    '0119': ['PN', '1', 'DistributionName'],\n    '011A': ['LO', '1', 'DistributionAddress'],\n    '0200': ['SH', '1', 'InterpretationID'],\n    '0202': ['LO', '1', 'InterpretationIDIssuer'],\n    '0210': ['CS', '1', 'InterpretationTypeID'],\n    '0212': ['CS', '1', 'InterpretationStatusID'],\n    '0300': ['ST', '1', 'Impressions'],\n    '4000': ['ST', '1', 'ResultsComments']\n  },\n  '4010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'LowEnergyDetectors'],\n    '0002': ['CS', '1', 'HighEnergyDetectors'],\n    '0004': ['SQ', '1', 'DetectorGeometrySequence'],\n    '1001': ['SQ', '1', 'ThreatROIVoxelSequence'],\n    '1004': ['FL', '3', 'ThreatROIBase'],\n    '1005': ['FL', '3', 'ThreatROIExtents'],\n    '1006': ['OB', '1', 'ThreatROIBitmap'],\n    '1007': ['SH', '1', 'RouteSegmentID'],\n    '1008': ['CS', '1', 'GantryType'],\n    '1009': ['CS', '1', 'OOIOwnerType'],\n    '100A': ['SQ', '1', 'RouteSegmentSequence'],\n    '1010': ['US', '1', 'PotentialThreatObjectID'],\n    '1011': ['SQ', '1', 'ThreatSequence'],\n    '1012': ['CS', '1', 'ThreatCategory'],\n    '1013': ['LT', '1', 'ThreatCategoryDescription'],\n    '1014': ['CS', '1', 'ATDAbilityAssessment'],\n    '1015': ['CS', '1', 'ATDAssessmentFlag'],\n    '1016': ['FL', '1', 'ATDAssessmentProbability'],\n    '1017': ['FL', '1', 'Mass'],\n    '1018': ['FL', '1', 'Density'],\n    '1019': ['FL', '1', 'ZEffective'],\n    '101A': ['SH', '1', 'BoardingPassID'],\n    '101B': ['FL', '3', 'CenterOfMass'],\n    '101C': ['FL', '3', 'CenterOfPTO'],\n    '101D': ['FL', '6-n', 'BoundingPolygon'],\n    '101E': ['SH', '1', 'RouteSegmentStartLocationID'],\n    '101F': ['SH', '1', 'RouteSegmentEndLocationID'],\n    '1020': ['CS', '1', 'RouteSegmentLocationIDType'],\n    '1021': ['CS', '1-n', 'AbortReason'],\n    '1023': ['FL', '1', 'VolumeOfPTO'],\n    '1024': ['CS', '1', 'AbortFlag'],\n    '1025': ['DT', '1', 'RouteSegmentStartTime'],\n    '1026': ['DT', '1', 'RouteSegmentEndTime'],\n    '1027': ['CS', '1', 'TDRType'],\n    '1028': ['CS', '1', 'InternationalRouteSegment'],\n    '1029': ['LO', '1-n', 'ThreatDetectionAlgorithmAndVersion'],\n    '102A': ['SH', '1', 'AssignedLocation'],\n    '102B': ['DT', '1', 'AlarmDecisionTime'],\n    '1031': ['CS', '1', 'AlarmDecision'],\n    '1033': ['US', '1', 'NumberOfTotalObjects'],\n    '1034': ['US', '1', 'NumberOfAlarmObjects'],\n    '1037': ['SQ', '1', 'PTORepresentationSequence'],\n    '1038': ['SQ', '1', 'ATDAssessmentSequence'],\n    '1039': ['CS', '1', 'TIPType'],\n    '103A': ['CS', '1', 'DICOSVersion'],\n    '1041': ['DT', '1', 'OOIOwnerCreationTime'],\n    '1042': ['CS', '1', 'OOIType'],\n    '1043': ['FL', '3', 'OOISize'],\n    '1044': ['CS', '1', 'AcquisitionStatus'],\n    '1045': ['SQ', '1', 'BasisMaterialsCodeSequence'],\n    '1046': ['CS', '1', 'PhantomType'],\n    '1047': ['SQ', '1', 'OOIOwnerSequence'],\n    '1048': ['CS', '1', 'ScanType'],\n    '1051': ['LO', '1', 'ItineraryID'],\n    '1052': ['SH', '1', 'ItineraryIDType'],\n    '1053': ['LO', '1', 'ItineraryIDAssigningAuthority'],\n    '1054': ['SH', '1', 'RouteID'],\n    '1055': ['SH', '1', 'RouteIDAssigningAuthority'],\n    '1056': ['CS', '1', 'InboundArrivalType'],\n    '1058': ['SH', '1', 'CarrierID'],\n    '1059': ['CS', '1', 'CarrierIDAssigningAuthority'],\n    '1060': ['FL', '3', 'SourceOrientation'],\n    '1061': ['FL', '3', 'SourcePosition'],\n    '1062': ['FL', '1', 'BeltHeight'],\n    '1064': ['SQ', '1', 'AlgorithmRoutingCodeSequence'],\n    '1067': ['CS', '1', 'TransportClassification'],\n    '1068': ['LT', '1', 'OOITypeDescriptor'],\n    '1069': ['FL', '1', 'TotalProcessingTime'],\n    '106C': ['OB', '1', 'DetectorCalibrationData'],\n    '106D': ['CS', '1', 'AdditionalScreeningPerformed'],\n    '106E': ['CS', '1', 'AdditionalInspectionSelectionCriteria'],\n    '106F': ['SQ', '1', 'AdditionalInspectionMethodSequence'],\n    '1070': ['CS', '1', 'AITDeviceType'],\n    '1071': ['SQ', '1', 'QRMeasurementsSequence'],\n    '1072': ['SQ', '1', 'TargetMaterialSequence'],\n    '1073': ['FD', '1', 'SNRThreshold'],\n    '1075': ['DS', '1', 'ImageScaleRepresentation'],\n    '1076': ['SQ', '1', 'ReferencedPTOSequence'],\n    '1077': ['SQ', '1', 'ReferencedTDRInstanceSequence'],\n    '1078': ['ST', '1', 'PTOLocationDescription'],\n    '1079': ['SQ', '1', 'AnomalyLocatorIndicatorSequence'],\n    '107A': ['FL', '3', 'AnomalyLocatorIndicator'],\n    '107B': ['SQ', '1', 'PTORegionSequence'],\n    '107C': ['CS', '1', 'InspectionSelectionCriteria'],\n    '107D': ['SQ', '1', 'SecondaryInspectionMethodSequence'],\n    '107E': ['DS', '6', 'PRCSToRCSOrientation']\n  },\n  '4FFE': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'MACParametersSequence']\n  },\n  '5000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0005': ['US', '1', 'CurveDimensions'],\n    '0010': ['US', '1', 'NumberOfPoints'],\n    '0020': ['CS', '1', 'TypeOfData'],\n    '0022': ['LO', '1', 'CurveDescription'],\n    '0030': ['SH', '1-n', 'AxisUnits'],\n    '0040': ['SH', '1-n', 'AxisLabels'],\n    '0103': ['US', '1', 'DataValueRepresentation'],\n    '0104': ['US', '1-n', 'MinimumCoordinateValue'],\n    '0105': ['US', '1-n', 'MaximumCoordinateValue'],\n    '0106': ['SH', '1-n', 'CurveRange'],\n    '0110': ['US', '1-n', 'CurveDataDescriptor'],\n    '0112': ['US', '1-n', 'CoordinateStartValue'],\n    '0114': ['US', '1-n', 'CoordinateStepValue'],\n    '1001': ['CS', '1', 'CurveActivationLayer'],\n    '2000': ['US', '1', 'AudioType'],\n    '2002': ['US', '1', 'AudioSampleFormat'],\n    '2004': ['US', '1', 'NumberOfChannels'],\n    '2006': ['UL', '1', 'NumberOfSamples'],\n    '2008': ['UL', '1', 'SampleRate'],\n    '200A': ['UL', '1', 'TotalTime'],\n    '200C': ['ox', '1', 'AudioSampleData'],\n    '200E': ['LT', '1', 'AudioComments'],\n    '2500': ['LO', '1', 'CurveLabel'],\n    '2600': ['SQ', '1', 'CurveReferencedOverlaySequence'],\n    '2610': ['US', '1', 'CurveReferencedOverlayGroup'],\n    '3000': ['ox', '1', 'CurveData']\n  },\n  '5200': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '9229': ['SQ', '1', 'SharedFunctionalGroupsSequence'],\n    '9230': ['SQ', '1', 'PerFrameFunctionalGroupsSequence']\n  },\n  '5400': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0100': ['SQ', '1', 'WaveformSequence'],\n    '0110': ['ox', '1', 'ChannelMinimumValue'],\n    '0112': ['ox', '1', 'ChannelMaximumValue'],\n    '1004': ['US', '1', 'WaveformBitsAllocated'],\n    '1006': ['CS', '1', 'WaveformSampleInterpretation'],\n    '100A': ['ox', '1', 'WaveformPaddingValue'],\n    '1010': ['ox', '1', 'WaveformData']\n  },\n  '5600': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['OF', '1', 'FirstOrderPhaseCorrectionAngle'],\n    '0020': ['OF', '1', 'SpectroscopyData']\n  },\n  '6000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'OverlayRows'],\n    '0011': ['US', '1', 'OverlayColumns'],\n    '0012': ['US', '1', 'OverlayPlanes'],\n    '0015': ['IS', '1', 'NumberOfFramesInOverlay'],\n    '0022': ['LO', '1', 'OverlayDescription'],\n    '0040': ['CS', '1', 'OverlayType'],\n    '0045': ['LO', '1', 'OverlaySubtype'],\n    '0050': ['SS', '2', 'OverlayOrigin'],\n    '0051': ['US', '1', 'ImageFrameOrigin'],\n    '0052': ['US', '1', 'OverlayPlaneOrigin'],\n    '0060': ['CS', '1', 'OverlayCompressionCode'],\n    '0061': ['SH', '1', 'OverlayCompressionOriginator'],\n    '0062': ['SH', '1', 'OverlayCompressionLabel'],\n    '0063': ['CS', '1', 'OverlayCompressionDescription'],\n    '0066': ['AT', '1-n', 'OverlayCompressionStepPointers'],\n    '0068': ['US', '1', 'OverlayRepeatInterval'],\n    '0069': ['US', '1', 'OverlayBitsGrouped'],\n    '0100': ['US', '1', 'OverlayBitsAllocated'],\n    '0102': ['US', '1', 'OverlayBitPosition'],\n    '0110': ['CS', '1', 'OverlayFormat'],\n    '0200': ['US', '1', 'OverlayLocation'],\n    '0800': ['CS', '1-n', 'OverlayCodeLabel'],\n    '0802': ['US', '1', 'OverlayNumberOfTables'],\n    '0803': ['AT', '1-n', 'OverlayCodeTableLocation'],\n    '0804': ['US', '1', 'OverlayBitsForCodeWord'],\n    '1001': ['CS', '1', 'OverlayActivationLayer'],\n    '1100': ['US', '1', 'OverlayDescriptorGray'],\n    '1101': ['US', '1', 'OverlayDescriptorRed'],\n    '1102': ['US', '1', 'OverlayDescriptorGreen'],\n    '1103': ['US', '1', 'OverlayDescriptorBlue'],\n    '1200': ['US', '1-n', 'OverlaysGray'],\n    '1201': ['US', '1-n', 'OverlaysRed'],\n    '1202': ['US', '1-n', 'OverlaysGreen'],\n    '1203': ['US', '1-n', 'OverlaysBlue'],\n    '1301': ['IS', '1', 'ROIArea'],\n    '1302': ['DS', '1', 'ROIMean'],\n    '1303': ['DS', '1', 'ROIStandardDeviation'],\n    '1500': ['LO', '1', 'OverlayLabel'],\n    '3000': ['ox', '1', 'OverlayData'],\n    '4000': ['LT', '1', 'OverlayComments']\n  },\n  '7F00': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ox', '1', 'VariablePixelData'],\n    '0011': ['US', '1', 'VariableNextDataGroup'],\n    '0020': ['OW', '1', 'VariableCoefficientsSDVN'],\n    '0030': ['OW', '1', 'VariableCoefficientsSDHN'],\n    '0040': ['OW', '1', 'VariableCoefficientsSDDN']\n  },\n  '7FE0': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['OV', '1', 'ExtendedOffsetTable'],\n    '0002': ['OV', '1', 'ExtendedOffsetTableLengths'],\n    '0008': ['OF', '1', 'FloatPixelData'],\n    '0009': ['OD', '1', 'DoubleFloatPixelData'],\n    '0010': ['ox', '1', 'PixelData'],\n    '0020': ['OW', '1', 'CoefficientsSDVN'],\n    '0030': ['OW', '1', 'CoefficientsSDHN'],\n    '0040': ['OW', '1', 'CoefficientsSDDN']\n  },\n  'FFFA': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'FFFA': ['SQ', '1', 'DigitalSignaturesSequence']\n  },\n  'FFFC': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'FFFC': ['OB', '1', 'DataSetTrailingPadding']\n  },\n  'FFFE': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'E000': ['NONE', '1', 'Item'],\n    'E00D': ['NONE', '1', 'ItemDelimitationItem'],\n    'E0DD': ['NONE', '1', 'SequenceDelimitationItem']\n  }\n}; // Dictionary\n\n/**\n * Add tags to the dictionary.\n *\n * @param {string} group The group key.\n * @param {object} tags The tags to add.\n */\nexport function addTagsToDictionary(group, tags) {\n  // TODO: add checks!\n  dictionary[group] = tags;\n}\n\n// taken from gdcm-2.6.1\\Source\\DataDictionary\\GroupName.dic\n// -> removed duplicates (commented)\nexport const tagGroups = {\n  '0000': 'Command',\n  '0002': 'Meta Element',\n  '0004': 'File Set',\n  //'0004': 'Directory',\n  '0008': 'Identifying',\n  '0009': 'SPI Identifying',\n  '0010': 'Patient',\n  '0012': 'Clinical Trial',\n  '0018': 'Acquisition',\n  '0019': 'SPI Acquisition',\n  '0020': 'Image',\n  '0021': 'SPI Image',\n  '0022': 'Ophtalmology',\n  '0028': 'Image Presentation',\n  '0032': 'Study',\n  '0038': 'Visit',\n  '003A': 'Waveform',\n  '0040': 'Procedure',\n  //'0040': ''Modality Worklist',\n  '0042': 'Encapsulated Document',\n  '0050': 'Device Informations',\n  //'0050': 'XRay Angio Device',\n  '0054': 'Nuclear Medicine',\n  '0060': 'Histogram',\n  '0070': 'Presentation State',\n  '0072': 'Hanging Protocol',\n  '0088': 'Storage',\n  //'0088': 'Medicine',\n  '0100': 'Authorization',\n  '0400': 'Digital Signature',\n  '1000': 'Code Table',\n  '1010': 'Zonal Map',\n  '2000': 'Film Session',\n  '2010': 'Film Box',\n  '2020': 'Image Box',\n  '2030': 'Annotation',\n  '2040': 'Overlay Box',\n  '2050': 'Presentation LUT',\n  '2100': 'Print Job',\n  '2110': 'Printer',\n  '2120': 'Queue',\n  '2130': 'Print Content',\n  '2200': 'Media Creation',\n  '3002': 'RT Image',\n  '3004': 'RT Dose',\n  '3006': 'RT StructureSet',\n  '3008': 'RT Treatment',\n  '300A': 'RT Plan',\n  '300C': 'RT Relationship',\n  '300E': 'RT Approval',\n  '4000': 'Text',\n  '4008': 'Results',\n  '4FFE': 'MAC Parameters',\n  '5000': 'Curve',\n  '5002': 'Curve',\n  '5004': 'Curve',\n  '5006': 'Curve',\n  '5008': 'Curve',\n  '500A': 'Curve',\n  '500C': 'Curve',\n  '500E': 'Curve',\n  '5400': 'Waveform Data',\n  '6000': 'Overlays',\n  '6002': 'Overlays',\n  '6004': 'Overlays',\n  '6008': 'Overlays',\n  '600A': 'Overlays',\n  '600C': 'Overlays',\n  '600E': 'Overlays',\n  'FFFC': 'Generic',\n  '7FE0': 'Pixel Data',\n  'FFFF': 'Unknown'\n};\n\n// Value Representation (VR) with 32bit Value Length (VL)\n// Added locally used 'ox'\n// see http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_7.html#table_7.1-1\nconst vr32bitVL = {\n  OB: true,\n  OD: true,\n  OF: true,\n  OL: true,\n  OV: true,\n  OW: true,\n  SQ: true,\n  SV: true,\n  UC: true,\n  UN: true,\n  UR: true,\n  UT: true,\n  UV: true,\n  ox: true\n};\n\n/**\n * Does the input Value Representation (VR) have a 32bit Value Length (VL).\n *\n * @param {string} vr The data Value Representation (VR).\n * @returns {boolean} True if this VR has a 32-bit VL.\n */\nexport function is32bitVLVR(vr) {\n  return typeof vr32bitVL[vr] !== 'undefined';\n}\n\n// String VR with extended or replaced default character repertoire defined in\n// Specific Character Set (0008,0005)\n// see https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_6.html#sect_6.1.2.2\nconst vrCharSetString = {\n  SH: true,\n  LO: true,\n  UC: true,\n  ST: true,\n  LT: true,\n  UT: true,\n  PN: true\n};\n\n/**\n * Does the input Value Representation (VR) have an special character repertoire.\n *\n * @param {string} vr The data VR.\n * @returns {boolean} True if this VR has a special char set.\n */\nexport function isCharSetStringVR(vr) {\n  return typeof vrCharSetString[vr] !== 'undefined';\n}\n\n// VR types\n// see https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_6.2.html#table_6.2-1\nexport const vrTypes = {\n  AE: 'string',\n  AS: 'string',\n  AT: undefined,\n  CS: 'string',\n  DA: 'string',\n  DS: 'string',\n  DT: 'string',\n  FL: 'Float32',\n  FD: 'Float64',\n  IS: 'string',\n  LO: 'string',\n  LT: 'string',\n  OB: 'Uint8',\n  OD: 'Uint64',\n  OF: 'Uint32',\n  OL: 'Uint32',\n  OV: 'Uint64',\n  OW: 'Uint16',\n  PN: 'string',\n  SH: 'string',\n  SL: 'Int32',\n  SQ: undefined,\n  SS: 'Int16',\n  ST: 'string',\n  SV: 'Int64',\n  TM: 'string',\n  UC: 'string',\n  UI: 'string',\n  UL: 'Uint32',\n  UN: 'Uint8',\n  UR: 'string',\n  US: 'Uint16',\n  UT: 'string',\n  UV: 'Uint64'\n};\n","import {\n  dictionary,\n  tagGroups\n} from './dictionary';\n\n/**\n * Immutable tag.\n */\nexport class Tag {\n\n  /**\n   * The tag group.\n   *\n   * @type {string}\n   */\n  #group;\n\n  /**\n   * The tag element.\n   *\n   * @type {string}\n   */\n  #element;\n\n  /**\n   * @param {string} group The tag group as '####'.\n   * @param {string} element The tag element as '####'.\n   */\n  constructor(group, element) {\n    if (!group || typeof group === 'undefined') {\n      throw new Error('Cannot create tag with no group.');\n    }\n    if (group.length !== 4) {\n      throw new Error('Cannot create tag with badly sized group.');\n    }\n    if (!element || typeof element === 'undefined') {\n      throw new Error('Cannot create tag with no element.');\n    }\n    if (element.length !== 4) {\n      throw new Error('Cannot create tag with badly sized element.');\n    }\n    this.#group = group;\n    this.#element = element;\n  }\n\n  /**\n   * Get the tag group.\n   *\n   * @returns {string} The tag group.\n   */\n  getGroup() {\n    return this.#group;\n  }\n\n  /**\n   * Get the tag element.\n   *\n   * @returns {string} The tag element.\n   */\n  getElement() {\n    return this.#element;\n  }\n\n  /**\n   * Get as string representation of the tag: 'key: name'.\n   *\n   * @returns {string} A string representing the tag.\n   */\n  toString() {\n    return this.getKey() + ': ' + this.getNameFromDictionary();\n  }\n\n  /**\n   * Check for Tag equality.\n   *\n   * @param {Tag} rhs The other tag to compare to.\n   * @returns {boolean} True if both tags are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.#group === rhs.getGroup() &&\n      this.#element === rhs.getElement();\n  }\n\n  /**\n   * Get the group-element key used to store DICOM elements.\n   *\n   * @returns {string} The key as '########'.\n   */\n  getKey() {\n    return this.#group + this.#element;\n  }\n\n  /**\n   * Get the group name as defined in TagGroups.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return tagGroups[this.#group];\n  }\n\n  /**\n   * Does this tag have a VR.\n   * Basically not the Item, ItemDelimitationItem nor\n   *  SequenceDelimitationItem tags.\n   *\n   * @returns {boolean} True if this tag has a VR.\n   */\n  isWithVR() {\n    return !(this.#group === 'FFFE' &&\n      (this.#element === 'E000' ||\n      this.#element === 'E00D' ||\n      this.#element === 'E0DD')\n    );\n  }\n\n  /**\n   * Is the tag group a private tag group ?\n   * see: http://dicom.nema.org/medical/dicom/2015a/output/html/part05.html#sect_7.8\n   *\n   * @returns {boolean} True if the tag group is private,\n   *   ie if its group is an odd number.\n   */\n  isPrivate() {\n    return parseInt(this.#group, 16) % 2 === 1;\n  }\n\n  /**\n   * Get the tag info from the dicom dictionary.\n   *\n   * @returns {Array|undefined} The info as [vr, multiplicity, name].\n   */\n  getInfoFromDictionary() {\n    let info;\n    if (typeof dictionary[this.#group] !== 'undefined' &&\n      typeof dictionary[this.#group][this.#element] !==\n        'undefined') {\n      info = dictionary[this.#group][this.#element];\n    }\n    return info;\n  }\n\n  /**\n   * Get the tag Value Representation (VR) from the dicom dictionary.\n   *\n   * @returns {string|undefined} The VR.\n   */\n  getVrFromDictionary() {\n    let vr;\n    const info = this.getInfoFromDictionary();\n    if (typeof info !== 'undefined') {\n      vr = info[0];\n    }\n    return vr;\n  }\n\n  /**\n   * Get the tag name from the dicom dictionary.\n   *\n   * @returns {string|undefined} The VR.\n   */\n  getNameFromDictionary() {\n    let name;\n    const info = this.getInfoFromDictionary();\n    if (typeof info !== 'undefined') {\n      name = info[2];\n    }\n    return name;\n  }\n\n} // Tag class\n\n/**\n * Tag compare function.\n *\n * @param {Tag} a The first tag.\n * @param {Tag} b The second tag.\n * @returns {number} The result of the tag comparison,\n *   positive for b before a, negative for a before b and\n *   zero to keep same order.\n */\nexport function tagCompareFunction(a, b) {\n  // first by group\n  let res = parseInt(a.getGroup(), 16) - parseInt(b.getGroup(), 16);\n  if (res === 0) {\n    // by element if same group\n    res = parseInt(a.getElement(), 16) - parseInt(b.getElement(), 16);\n  }\n  return res;\n}\n\n/**\n * Split a group-element key used to store DICOM elements.\n *\n * @param {string} key The key in form \"00280102\" as generated by tag::getKey.\n * @returns {Tag} The DICOM tag.\n */\nexport function getTagFromKey(key) {\n  if (!key || typeof key === 'undefined') {\n    throw new Error('Cannot create tag with no key.');\n  }\n  if (key.length !== 8) {\n    throw new Error('Cannot create tag with badly sized key.');\n  }\n  return new Tag(key.substring(0, 4), key.substring(4, 8));\n}\n\n/**\n * Get the TransferSyntaxUID Tag.\n *\n * @returns {object} The tag.\n */\nexport function getTransferSyntaxUIDTag() {\n  return new Tag('0002', '0010');\n}\n\n/**\n * Get the FileMetaInformationGroupLength Tag.\n *\n * @returns {object} The tag.\n */\nexport function getFileMetaInformationGroupLengthTag() {\n  return new Tag('0002', '0000');\n}\n\n/**\n * Is the input tag the FileMetaInformationGroupLength Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isFileMetaInformationGroupLengthTag(tag) {\n  return tag.equals(getFileMetaInformationGroupLengthTag());\n}\n\n/**\n * Get the Item Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getItemTag() {\n  return new Tag('FFFE', 'E000');\n}\n\n/**\n * Is the input tag the Item Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isItemTag(tag) {\n  // faster than tag.equals(getItemTag());\n  return tag.getKey() === 'FFFEE000';\n}\n\n/**\n * Get the ItemDelimitationItem Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getItemDelimitationItemTag() {\n  return new Tag('FFFE', 'E00D');\n}\n\n/**\n * Is the input tag the ItemDelimitationItem Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isItemDelimitationItemTag(tag) {\n  // faster than tag.equals(getItemDelimitationItemTag());\n  return tag.getKey() === 'FFFEE00D';\n}\n\n/**\n * Get the SequenceDelimitationItem Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getSequenceDelimitationItemTag() {\n  return new Tag('FFFE', 'E0DD');\n}\n\n/**\n * Is the input tag the SequenceDelimitationItem Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isSequenceDelimitationItemTag(tag) {\n  // faster than tag.equals(getSequenceDelimitationItemTag());\n  return tag.getKey() === 'FFFEE0DD';\n}\n\n/**\n * Get the PixelData Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getPixelDataTag() {\n  return new Tag('7FE0', '0010');\n}\n\n/**\n * Is the input tag the PixelData Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isPixelDataTag(tag) {\n  // faster than tag.equals(getPixelDataTag());\n  return tag.getKey() === '7FE00010';\n}\n\n/**\n * Get a tag from the dictionary using a tag string name.\n *\n * @param {string} tagName The tag string name.\n * @returns {object|null} The tag object or null if not found.\n */\nexport function getTagFromDictionary(tagName) {\n  if (typeof tagName === 'undefined' || tagName === null) {\n    return null;\n  }\n  let group = null;\n  let element = null;\n  const dict = dictionary;\n  const keys0 = Object.keys(dict);\n  let keys1 = null;\n  let foundTag = false;\n  // search through dictionary\n  for (let k0 = 0, lenK0 = keys0.length; k0 < lenK0; ++k0) {\n    group = keys0[k0];\n    keys1 = Object.keys(dict[group]);\n    for (let k1 = 0, lenK1 = keys1.length; k1 < lenK1; ++k1) {\n      element = keys1[k1];\n      if (dict[group][element][2] === tagName) {\n        foundTag = true;\n        break;\n      }\n    }\n    if (foundTag) {\n      break;\n    }\n  }\n  let tag = null;\n  if (foundTag) {\n    tag = new Tag(group, element);\n  }\n  return tag;\n}\n","/**\n * Is the Native endianness Little Endian.\n *\n * @returns {boolean} True if little endian.\n */\nexport function isNativeLittleEndian() {\n  return new Int8Array(new Int16Array([1]).buffer)[0] > 0;\n}\n\n/**\n * Flip an array's endianness.\n * Inspired from [DataStream.js]{@link https://github.com/kig/DataStream.js}.\n *\n * @param {object} array The array to flip (modified).\n */\nfunction flipArrayEndianness(array) {\n  const blen = array.byteLength;\n  const u8 = new Uint8Array(array.buffer, array.byteOffset, blen);\n  const bpe = array.BYTES_PER_ELEMENT;\n  let tmp;\n  for (let i = 0; i < blen; i += bpe) {\n    for (let j = i + bpe - 1, k = i; j > k; j--, k++) {\n      tmp = u8[k];\n      u8[k] = u8[j];\n      u8[j] = tmp;\n    }\n  }\n}\n\n/**\n * Data reader.\n */\nexport class DataReader {\n\n  /**\n   * The input buffer.\n   *\n   * @type {ArrayBuffer}\n   */\n  #buffer;\n\n  /**\n   * Is the endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isLittleEndian = true;\n\n  /**\n   * Is the Native endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isNativeLittleEndian = isNativeLittleEndian();\n\n  /**\n   * Flag to know if the TypedArray data needs flipping.\n   *\n   * @type {boolean}\n   */\n  #needFlip;\n\n  /**\n   * The main data view.\n   *\n   * @type {DataView}\n   */\n  #view;\n\n  /**\n   * @param {ArrayBuffer} buffer The input array buffer.\n   * @param {boolean} [isLittleEndian] Flag to tell if the data is little\n   *   or big endian (default: true).\n   */\n  constructor(buffer, isLittleEndian) {\n    this.#buffer = buffer;\n    // Set endian flag if not defined.\n    if (typeof isLittleEndian !== 'undefined') {\n      this.#isLittleEndian = isLittleEndian;\n    }\n    this.#needFlip = (this.#isLittleEndian !== this.#isNativeLittleEndian);\n    this.#view = new DataView(buffer);\n  }\n\n  /**\n   * Read Uint16 (2 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readUint16(byteOffset) {\n    return this.#view.getUint16(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Int16 (2 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readInt16(byteOffset) {\n    return this.#view.getInt16(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Uint32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readUint32(byteOffset) {\n    return this.#view.getUint32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read BigUint64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {bigint} The read data.\n   */\n  readBigUint64(byteOffset) {\n    return this.#view.getBigUint64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Int32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readInt32(byteOffset) {\n    return this.#view.getInt32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read BigInt64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {bigint} The read data.\n   */\n  readBigInt64(byteOffset) {\n    return this.#view.getBigInt64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Float32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readFloat32(byteOffset) {\n    return this.#view.getFloat32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Float64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readFloat64(byteOffset) {\n    return this.#view.getFloat64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read binary (0/1) array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint8Array} The read data.\n   */\n  readBinaryArray(byteOffset, size) {\n    // input\n    const bitArray = new Uint8Array(this.#buffer, byteOffset, size);\n    // result\n    const byteArrayLength = 8 * bitArray.length;\n    const data = new Uint8Array(byteArrayLength);\n    let bitNumber = 0;\n    let bitIndex = 0;\n    for (let i = 0; i < byteArrayLength; ++i) {\n      bitNumber = i % 8;\n      bitIndex = Math.floor(i / 8);\n      // see https://stackoverflow.com/questions/4854207/get-a-specific-bit-from-byte/4854257\n      // @ts-ignore\n      data[i] = 255 * ((bitArray[bitIndex] & (1 << bitNumber)) !== 0);\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint8 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint8Array} The read data.\n   */\n  readUint8Array(byteOffset, size) {\n    return new Uint8Array(this.#buffer, byteOffset, size);\n  }\n\n  /**\n   * Read Int8 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int8Array} The read data.\n   */\n  readInt8Array(byteOffset, size) {\n    return new Int8Array(this.#buffer, byteOffset, size);\n  }\n\n  /**\n   * Read Uint16 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint16Array} The read data.\n   */\n  readUint16Array(byteOffset, size) {\n    const bpe = Uint16Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Uint16Array.BYTES_PER_ELEMENT (=2)\n    if (byteOffset % bpe === 0) {\n      data = new Uint16Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Uint16Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readUint16(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int16 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int16Array} The read data.\n   */\n  readInt16Array(byteOffset, size) {\n    const bpe = Int16Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Int16Array.BYTES_PER_ELEMENT (=2)\n    if (byteOffset % bpe === 0) {\n      data = new Int16Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Int16Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readInt16(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint32Array} The read data.\n   */\n  readUint32Array(byteOffset, size) {\n    const bpe = Uint32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Uint32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Uint32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Uint32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readUint32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {BigUint64Array} The read data.\n   */\n  readUint64Array(byteOffset, size) {\n    const bpe = BigUint64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of BigUint64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new BigUint64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new BigUint64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readBigUint64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int32Array} The read data.\n   */\n  readInt32Array(byteOffset, size) {\n    const bpe = Int32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Int32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Int32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Int32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readInt32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {BigInt64Array} The read data.\n   */\n  readInt64Array(byteOffset, size) {\n    const bpe = BigInt64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of BigInt64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new BigInt64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new BigInt64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readBigInt64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Float32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Float32Array} The read data.\n   */\n  readFloat32Array(byteOffset, size) {\n    const bpe = Float32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Float32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Float32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Float32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readFloat32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Float64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Float64Array} The read data.\n   */\n  readFloat64Array(byteOffset, size) {\n    const bpe = Float64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Float64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new Float64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Float64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readFloat64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read data as an hexadecimal string of length 4 (no '0x' prefix).\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {string} The read data ('####').\n   */\n  readHex(byteOffset) {\n    // read and convert to hex string\n    const str = this.readUint16(byteOffset).toString(16);\n    // return padded\n    return '0000'.substring(0, 4 - str.length) + str.toUpperCase();\n  }\n\n} // class DataReader\n","/**\n * Capitalise the first letter of a string.\n *\n * @param {string} string The string to capitalise the first letter.\n * @returns {string} The new string.\n */\nexport function capitaliseFirstLetter(string) {\n  let res = string;\n  if (string) {\n    res = string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  return res;\n}\n\n/**\n * Check if a string starts with the input element.\n *\n * @param {string} str The input string.\n * @param {string} search The searched start.\n * @param {number} [rawPos] The position in this string at which to begin\n *  searching for searchString. Defaults to 0.\n * @returns {boolean} True if the input string starts with the searched string.\n */\nexport function startsWith(str, search, rawPos) {\n  if (typeof str === 'undefined' || str === null ||\n    typeof search === 'undefined' || search === null) {\n    return false;\n  }\n  const pos = rawPos > 0 ? rawPos | 0 : 0;\n  return str.substring(pos, pos + search.length) === search;\n}\n\n/**\n * Check if a string ends with the input element.\n *\n * @param {string} str The input string.\n * @param {string} search The searched ending.\n * @returns {boolean} True if the input string ends with the searched string.\n */\nexport function endsWith(str, search) {\n  if (typeof str === 'undefined' || str === null ||\n    typeof search === 'undefined' || search === null) {\n    return false;\n  }\n  return str.substring(str.length - search.length) === search;\n}\n\n/**\n * Split key/value string:\n *  key0=val00&key0=val01&key1=val10 returns\n *  { key0 : [val00, val01], key1 : val1 }\n *\n * @param {string} inputStr The string to split.\n * @returns {object} The split string.\n */\nexport function splitKeyValueString(inputStr) {\n  // result\n  const result = {};\n  // check input string\n  if (inputStr) {\n    // split key/value pairs\n    const pairs = inputStr.split('&');\n    for (let i = 0; i < pairs.length; ++i) {\n      const pair = pairs[i].split('=');\n      // if the key does not exist, create it\n      if (!result[pair[0]]) {\n        result[pair[0]] = pair[1];\n      } else {\n        // make it an array\n        if (!(result[pair[0]] instanceof Array)) {\n          result[pair[0]] = [result[pair[0]]];\n        }\n        result[pair[0]].push(pair[1]);\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Get flags from an input string. Flags are words surrounded with curly\n * braces.\n *\n * @param {string} inputStr The input string.\n * @returns {Array} An array of found flags.\n */\nexport function getFlags(inputStr) {\n  const flags = [];\n  // check input string\n  if (inputStr === null || typeof inputStr === 'undefined') {\n    return flags;\n  }\n\n  // word surrounded by curly braces\n  const regex = /{(\\w+)}/g;\n\n  let match = regex.exec(inputStr);\n  while (match) {\n    flags.push(match[1]); // first matching group\n    match = regex.exec(inputStr);\n  }\n  return flags;\n}\n\n/**\n * Replace flags in a input string. Flags are keywords surrounded with curly\n * braces.\n *\n * @param {string} inputStr The input string.\n * @param {object} values A object of {value, unit}.\n * @example\n *    const values = {\"length\": { \"value\": 33, \"unit\": \"cm\" } };\n *    const str = \"The length is: {length}.\";\n *    const res = dwv.replaceFlags(str, values); // \"The length is: 33 cm.\"\n * @returns {string} The result string.\n */\nexport function replaceFlags(inputStr, values) {\n  let res = '';\n  // check input string\n  if (inputStr === null || typeof inputStr === 'undefined') {\n    return res;\n  }\n  res = inputStr;\n  // check values\n  if (values === null || typeof values === 'undefined') {\n    return res;\n  }\n\n  // loop through flags\n  const keys = getFlags(inputStr);\n  for (let i = 0; i < keys.length; ++i) {\n    const valueObj = values[keys[i]];\n    if (valueObj !== null && typeof valueObj !== 'undefined' &&\n      valueObj.value !== null && typeof valueObj.value !== 'undefined') {\n      // value string\n      let valueStr = valueObj.value.toPrecision(4);\n      // add unit if available\n      // space or no space? Yes apart from degree...\n      // check: https://en.wikipedia.org/wiki/Space_(punctuation)#Spaces_and_unit_symbols\n      if (valueObj.unit !== null &&\n        typeof valueObj.unit !== 'undefined' &&\n        valueObj.unit.length !== 0) {\n        if (valueObj.unit !== 'degree') {\n          valueStr += ' ';\n        }\n        valueStr += valueObj.unit;\n      }\n      // flag to replace\n      const flag = '{' + keys[i] + '}';\n      // replace\n      res = res.replace(flag, valueStr);\n    }\n  }\n  // return\n  return res;\n}\n\n/**\n * Get the root of an input path.\n * Splits using `/` as separator.\n *\n * @param {string} path The input path\n * @returns {string} The input path without its last part.\n */\nexport function getRootPath(path) {\n  return path.split('/').slice(0, -1).join('/');\n}\n\n/**\n * Get a file extension: anything after the last dot.\n * File name starting with a dot are discarded.\n * Extensions are expected to contain at least one letter.\n *\n * @param {string} filePath The file path containing the file name.\n * @returns {string} The lower case file extension or null for none.\n */\nexport function getFileExtension(filePath) {\n  let ext = null;\n  if (typeof filePath !== 'undefined' &&\n    filePath !== null &&\n    filePath[0] !== '.') {\n    const pathSplit = filePath.toLowerCase().split('.');\n    if (pathSplit.length !== 1) {\n      ext = pathSplit.pop();\n      // extension should contain at least one letter and no slash\n      const regExp = /[a-z]/;\n      if (!regExp.test(ext) || ext.includes('/')) {\n        ext = null;\n      }\n    }\n  }\n  return ext;\n}\n\n/**\n * Convert a string to a Uint8Array.\n *\n * @param {string} str The string to convert.\n * @returns {Uint8Array} The Uint8Array.\n */\nexport function stringToUint8Array(str) {\n  const arr = new Uint8Array(str.length);\n  for (let i = 0, leni = str.length; i < leni; i++) {\n    arr[i] = str.charCodeAt(i);\n  }\n  return arr;\n}\n\n/**\n * Round a float number to a given precision.\n * Inspired from https://stackoverflow.com/a/49729715/3639892.\n * Can be a solution to not have trailing zero as when\n * using toFixed or toPrecision.\n * '+number.toFixed(precision)' does not pass all the tests...\n *\n * @param {number} number The number to round.\n * @param {number} precision The rounding precision.\n * @returns {number} The rounded number.\n */\nexport function precisionRound(number, precision) {\n  const factor = Math.pow(10, precision);\n  const delta = 0.01 / factor; // fixes precisionRound(1.005, 2)\n  return Math.round(number * factor + delta) / factor;\n}\n","import {stringToUint8Array} from './string';\n\n/**\n * Check for array equality after sorting.\n *\n * @param {Array} arr0 First array.\n * @param {*} arr1 Second array.\n * @returns {boolean} True if both array are defined and contain same values.\n */\nexport function arraySortEquals(arr0, arr1) {\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  const arr0sorted = arr0.slice().sort();\n  const arr1sorted = arr1.slice().sort();\n  return arrayEquals(arr0sorted, arr1sorted);\n}\n\n/**\n * Check for array equality.\n *\n * @param {Array} arr0 First array.\n * @param {*} arr1 Second array.\n * @returns {boolean} True if both array are defined and contain same values.\n */\nexport function arrayEquals(arr0, arr1) {\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  if (arr0.length !== arr1.length) {\n    return false;\n  }\n  return arr0.every(function (element, index) {\n    return element === arr1[index];\n  });\n}\n\n/**\n * Convert a Uint8Array to a string.\n *\n * @param {Uint8Array} arr The array to convert.\n * @returns {string} The array as string.\n */\nexport function uint8ArrayToString(arr) {\n  return String.fromCharCode.apply(String, arr);\n}\n\n/**\n * Array find in a subset of the input array.\n * Equivalent to: arr.slice(start, end).find(callbackFn)\n *\n * @param {Uint8Array} arr The input array to search.\n * @param {Function} callbackFn The find function.\n * @param {number|undefined} start The array start index.\n * @param {number|undefined} [end] The array end index.\n * @returns {number|undefined} The index where the element was found.\n */\nexport function findInArraySubset(arr, callbackFn, start, end) {\n  // check inputs\n  if (typeof start === 'undefined' ||\n    start < 0 ||\n    start >= arr.length\n  ) {\n    start = 0;\n  }\n  if (typeof end === 'undefined' ||\n    end <= start ||\n    end > arr.length) {\n    end = arr.length;\n  }\n  // run\n  for (let i = start; i < end; ++i) {\n    if (callbackFn(arr[i], i, arr)) {\n      return i;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get a find in array callback.\n *\n * @param {Uint8Array} arr1 The array to find.\n * @returns {Function} The find callback function.\n */\nexport function getFindArrayInArrayCallback(arr1) {\n  return function (element, index, arr0) {\n    for (let i = 0; i < arr1.length; ++i) {\n      if (arr0[index + i] !== arr1[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n}\n\n/**\n * Extract each element of a multipart ArrayBuffer.\n * https://en.wikipedia.org/wiki/MIME#Multipart_messages\n *\n * @param {ArrayBuffer} arr The multipart array.\n * @returns {Array} The multipart parts as an array of object as\n *  {'Content-Type', ..., data} (depending on header tags)\n */\nexport function parseMultipart(arr) {\n  const u8Array = new Uint8Array(arr);\n\n  const parts = [];\n  // check input\n  if (u8Array.length === 0) {\n    return parts;\n  }\n\n  // \\r\\n\\r\\n\n  const doubleReturnNew = new Uint8Array([0x0d, 0x0a, 0x0d, 0x0a]);\n  const partHeaderEndCb = getFindArrayInArrayCallback(doubleReturnNew);\n\n  // look for boundary in first part header\n  let partHeaderEndIndex = findInArraySubset(\n    u8Array, partHeaderEndCb, 0\n  );\n  if (typeof partHeaderEndIndex === 'undefined') {\n    throw new Error('Can\\'t find the end of the first multipart header');\n  }\n  const firstPartHeader = u8Array.slice(0, partHeaderEndIndex);\n  // switch to string to use split\n  const lines = uint8ArrayToString(firstPartHeader).split('\\r\\n');\n  // boundary should start with '--'\n  let boundaryStr;\n  for (let i = 0; i < lines.length; ++i) {\n    if (lines[i][0] === '-' && lines[i][1] === '-') {\n      boundaryStr = lines[i];\n      break;\n    }\n  }\n  if (typeof boundaryStr === 'undefined') {\n    throw new Error('Can\\'t find the boundary between multi-parts');\n  }\n  const boundary = stringToUint8Array(boundaryStr);\n  const boundaryCb = getFindArrayInArrayCallback(boundary);\n  const boundaryLen = boundaryStr.length;\n\n  // skip mime header\n  let nextBoundaryIndex = findInArraySubset(\n    u8Array, boundaryCb, 0\n  );\n\n  // loop through content\n  while (typeof partHeaderEndIndex !== 'undefined') {\n    const part = {};\n\n    // header\n    const partHeader = u8Array.slice(\n      nextBoundaryIndex + boundaryLen, partHeaderEndIndex);\n    // split into object\n    const partHeaderLines =\n      uint8ArrayToString(partHeader).split('\\r\\n');\n    for (let l = 0; l < partHeaderLines.length; ++l) {\n      const line = partHeaderLines[l];\n      const semiColonIndex = line.indexOf(':');\n      if (semiColonIndex !== -1) {\n        const key = line.substring(0, semiColonIndex).trim();\n        const val = line.substring(semiColonIndex + 1).trim();\n        part[key] = val;\n      }\n    }\n\n    // find next boundary\n    nextBoundaryIndex = findInArraySubset(\n      u8Array, boundaryCb, partHeaderEndIndex\n    );\n    // exit if none\n    if (typeof nextBoundaryIndex === 'undefined') {\n      break;\n    }\n\n    // get part\n    // partHeaderEndIndex plus the size of the '\\r\\n\\r\\n' separator\n    const dataBeginIndex = partHeaderEndIndex + 4;\n    // nextBoundaryIndex minus the previous '\\r\\n'\n    const dataEndIndex = nextBoundaryIndex - 2;\n    if (dataBeginIndex < dataEndIndex) {\n      part.data = u8Array.slice(dataBeginIndex, dataEndIndex).buffer;\n    } else {\n      part.data = new Uint8Array();\n    }\n\n    // store part\n    parts.push(part);\n\n    // find next part header end\n    partHeaderEndIndex = findInArraySubset(\n      u8Array, partHeaderEndCb,\n      nextBoundaryIndex + boundaryLen\n    );\n  }\n\n  return parts;\n}\n\n/**\n * Build a multipart message.\n * See: https://en.wikipedia.org/wiki/MIME#Multipart_messages\n * See: https://hg.orthanc-server.com/orthanc-dicomweb/file/tip/Resources/Samples/JavaScript/stow-rs.js\n *\n * @param {Array} parts The message parts as an array of object containing\n *   content headers and messages as the data property (as returned by parse).\n * @param {string} boundary The message boundary.\n * @returns {Uint8Array} The full multipart message.\n */\nexport function buildMultipart(parts, boundary) {\n  const lineBreak = '\\r\\n';\n  // build headers and calculate size\n  let partsSize = 0;\n  const headers = [];\n  for (let i = 0; i < parts.length; ++i) {\n    let headerStr = '';\n    if (i !== 0) {\n      headerStr += lineBreak;\n    }\n    headerStr += '--' + boundary + lineBreak;\n    const partKeys = Object.keys(parts[i]);\n    for (let k = 0; k < partKeys.length; ++k) {\n      const key = partKeys[k];\n      if (key !== 'data') {\n        headerStr += key + ': ' + parts[i][key] + lineBreak;\n      }\n    }\n    headerStr += lineBreak;\n    const header = stringToUint8Array(headerStr);\n    headers.push(header);\n    partsSize += header.byteLength + parts[i].data.byteLength;\n  }\n  // build trailer\n  const trailerStr = lineBreak + '--' + boundary + '--' + lineBreak;\n  const trailer = stringToUint8Array(trailerStr);\n\n  // final buffer\n  const buffer = new Uint8Array(partsSize + trailer.byteLength);\n  let offset = 0;\n  // concatenate parts\n  for (let j = 0; j < parts.length; ++j) {\n    buffer.set(headers[j], offset);\n    offset += headers[j].byteLength;\n    buffer.set(new Uint8Array(parts[j].data), offset);\n    offset += parts[j].data.byteLength;\n  }\n  // end buffer with trailer\n  buffer.set(trailer, offset);\n\n  // return\n  return buffer;\n}\n","import {\n  Tag,\n  isSequenceDelimitationItemTag,\n  isItemDelimitationItemTag,\n  isPixelDataTag\n} from './dicomTag';\nimport {\n  is32bitVLVR,\n  isCharSetStringVR,\n  vrTypes,\n} from './dictionary';\nimport {DataReader} from './dataReader';\nimport {logger} from '../utils/logger';\nimport {arrayEquals} from '../utils/array';\n\n/**\n * Get the version of the library.\n *\n * @returns {string} The version of the library.\n */\nexport function getDwvVersion() {\n  return '0.32.0';\n}\n\n/**\n * Check that an input buffer includes the DICOM prefix 'DICM'\n * after the 128 bytes preamble.\n * Ref: [DICOM File Meta]{@link https://dicom.nema.org/dicom/2013/output/chtml/part10/chapter_7.html#sect_7.1}\n *\n * @param {ArrayBuffer} buffer The buffer to check.\n * @returns {boolean} True if the buffer includes the prefix.\n */\nexport function hasDicomPrefix(buffer) {\n  const prefixArray = new Uint8Array(buffer, 128, 4);\n  const stringReducer = function (previous, current) {\n    return previous += String.fromCharCode(current);\n  };\n  return prefixArray.reduce(stringReducer, '') === 'DICM';\n}\n\n// Zero-width space (u200B)\n// @ts-ignore\nconst ZWS = String.fromCharCode('u200B');\n\n/**\n * Clean string: remove zero-width space ending and trim.\n * Warning: no tests are done on the input, will fail if\n *   null or undefined or not string.\n * (exported for tests only)\n *\n * @param {string} inputStr The string to clean.\n * @returns {string} The cleaned string.\n */\nexport function cleanString(inputStr) {\n  let res = inputStr;\n  // get rid of ending zero-width space\n  const lastIndex = inputStr.length - 1;\n  if (inputStr[lastIndex] === ZWS) {\n    res = inputStr.substring(0, lastIndex);\n  }\n  // trim spaces\n  res = res.trim();\n  // return\n  return res;\n}\n\n/**\n * Get the utfLabel (used by the TextDecoder) from a character set term\n * References:\n * - DICOM [Value Encoding]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_6.html}\n * - DICOM [Specific Character Set]{@link http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.12.html#sect_C.12.1.1.2}\n * - [TextDecoder#Parameters]{@link https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder/TextDecoder#Parameters}\n *\n * @param {string} charSetTerm The DICOM character set.\n * @returns {string} The corresponding UTF label.\n */\nfunction getUtfLabel(charSetTerm) {\n  let label = 'utf-8';\n  if (charSetTerm === 'ISO_IR 100') {\n    label = 'iso-8859-1';\n  } else if (charSetTerm === 'ISO_IR 101') {\n    label = 'iso-8859-2';\n  } else if (charSetTerm === 'ISO_IR 109') {\n    label = 'iso-8859-3';\n  } else if (charSetTerm === 'ISO_IR 110') {\n    label = 'iso-8859-4';\n  } else if (charSetTerm === 'ISO_IR 144') {\n    label = 'iso-8859-5';\n  } else if (charSetTerm === 'ISO_IR 127') {\n    label = 'iso-8859-6';\n  } else if (charSetTerm === 'ISO_IR 126') {\n    label = 'iso-8859-7';\n  } else if (charSetTerm === 'ISO_IR 138') {\n    label = 'iso-8859-8';\n  } else if (charSetTerm === 'ISO_IR 148') {\n    label = 'iso-8859-9';\n  } else if (charSetTerm === 'ISO_IR 13') {\n    label = 'shift-jis';\n  } else if (charSetTerm === 'ISO_IR 166') {\n    label = 'iso-8859-11';\n  } else if (charSetTerm === 'ISO 2022 IR 87') {\n    label = 'iso-2022-jp';\n  } else if (charSetTerm === 'ISO 2022 IR 149') {\n    // not supported by TextDecoder when it says it should...\n    //label = \"iso-2022-kr\";\n  } else if (charSetTerm === 'ISO 2022 IR 58') {\n    // not supported by TextDecoder...\n    //label = \"iso-2022-cn\";\n  } else if (charSetTerm === 'ISO_IR 192') {\n    label = 'utf-8';\n  } else if (charSetTerm === 'GB18030') {\n    label = 'gb18030';\n  } else if (charSetTerm === 'GB2312') {\n    label = 'gb2312';\n  } else if (charSetTerm === 'GBK') {\n    label = 'chinese';\n  }\n  return label;\n}\n\n/**\n * Default text decoder\n */\nclass DefaultTextDecoder {\n  /**\n   * Decode an input string buffer.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  decode(buffer) {\n    let result = '';\n    for (let i = 0, leni = buffer.length; i < leni; ++i) {\n      result += String.fromCharCode(buffer[i]);\n    }\n    return result;\n  }\n}\n\n/**\n * Get patient orientation label in the reverse direction.\n *\n * @param {string} ori Patient Orientation value.\n * @returns {string} Reverse Orientation Label.\n */\nexport function getReverseOrientation(ori) {\n  if (!ori) {\n    return null;\n  }\n  // reverse labels\n  const rlabels = {\n    L: 'R',\n    R: 'L',\n    A: 'P',\n    P: 'A',\n    H: 'F',\n    F: 'H'\n  };\n\n  let rori = '';\n  for (let n = 0; n < ori.length; n++) {\n    const o = ori.substring(n, n + 1);\n    const r = rlabels[o];\n    if (r) {\n      rori += r;\n    }\n  }\n  // return\n  return rori;\n}\n\n/**\n * Get the name of an image orientation patient.\n *\n * @param {Array} orientation The image orientation patient.\n * @returns {string} The orientation name: axial, coronal or sagittal.\n */\nexport function getOrientationName(orientation) {\n  const axialOrientation = [1, 0, 0, 0, 1, 0];\n  const coronalOrientation = [1, 0, 0, 0, 0, -1];\n  const sagittalOrientation = [0, 1, 0, 0, 0, -1];\n  let name;\n  if (arrayEquals(orientation, axialOrientation)) {\n    name = 'axial';\n  } else if (arrayEquals(orientation, coronalOrientation)) {\n    name = 'coronal';\n  } else if (arrayEquals(orientation, sagittalOrientation)) {\n    name = 'sagittal';\n  }\n  return name;\n}\n\n/**\n * Tell if a given syntax is an implicit one (element with no VR).\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if an implicit syntax.\n */\nexport function isImplicitTransferSyntax(syntax) {\n  return syntax === '1.2.840.10008.1.2';\n}\n\n/**\n * Tell if a given syntax is a big endian syntax.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a big endian syntax.\n */\nexport function isBigEndianTransferSyntax(syntax) {\n  return syntax === '1.2.840.10008.1.2.2';\n}\n\n/**\n * Tell if a given syntax is a JPEG baseline one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg baseline syntax.\n */\nexport function isJpegBaselineTransferSyntax(syntax) {\n  return syntax === '1.2.840.10008.1.2.4.50' ||\n    syntax === '1.2.840.10008.1.2.4.51';\n}\n\n/**\n * Tell if a given syntax is a retired JPEG one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a retired jpeg syntax.\n */\nfunction isJpegRetiredTransferSyntax(syntax) {\n  return (syntax.match(/1.2.840.10008.1.2.4.5/) !== null &&\n    !isJpegBaselineTransferSyntax(syntax) &&\n    !isJpegLosslessTransferSyntax(syntax)) ||\n    syntax.match(/1.2.840.10008.1.2.4.6/) !== null;\n}\n\n/**\n * Tell if a given syntax is a JPEG Lossless one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg lossless syntax.\n */\nexport function isJpegLosslessTransferSyntax(syntax) {\n  return syntax === '1.2.840.10008.1.2.4.57' ||\n    syntax === '1.2.840.10008.1.2.4.70';\n}\n\n/**\n * Tell if a given syntax is a JPEG-LS one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg-ls syntax.\n */\nfunction isJpeglsTransferSyntax(syntax) {\n  return syntax.match(/1.2.840.10008.1.2.4.8/) !== null;\n}\n\n/**\n * Tell if a given syntax is a JPEG 2000 one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg 2000 syntax.\n */\nexport function isJpeg2000TransferSyntax(syntax) {\n  return syntax.match(/1.2.840.10008.1.2.4.9/) !== null;\n}\n\n/**\n * Tell if a given syntax is a RLE (Run-length encoding) one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a RLE syntax.\n */\nfunction isRleTransferSyntax(syntax) {\n  return syntax.match(/1.2.840.10008.1.2.5/) !== null;\n}\n\n/**\n * Tell if a given syntax needs decompression.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {string} The name of the decompression algorithm.\n */\nexport function getSyntaxDecompressionName(syntax) {\n  let algo = null;\n  if (isJpeg2000TransferSyntax(syntax)) {\n    algo = 'jpeg2000';\n  } else if (isJpegBaselineTransferSyntax(syntax)) {\n    algo = 'jpeg-baseline';\n  } else if (isJpegLosslessTransferSyntax(syntax)) {\n    algo = 'jpeg-lossless';\n  } else if (isRleTransferSyntax(syntax)) {\n    algo = 'rle';\n  }\n  return algo;\n}\n\n/**\n * Tell if a given syntax is supported for reading.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a supported syntax.\n */\nfunction isReadSupportedTransferSyntax(syntax) {\n\n  // Unsupported:\n  // \"1.2.840.10008.1.2.1.99\": Deflated Explicit VR - Little Endian\n  // \"1.2.840.10008.1.2.4.100\": MPEG2 Image Compression\n  // isJpegRetiredTransferSyntax(syntax): non supported JPEG\n  // isJpeglsTransferSyntax(syntax): JPEG-LS\n\n  return (syntax === '1.2.840.10008.1.2' || // Implicit VR - Little Endian\n    syntax === '1.2.840.10008.1.2.1' || // Explicit VR - Little Endian\n    syntax === '1.2.840.10008.1.2.2' || // Explicit VR - Big Endian\n    isJpegBaselineTransferSyntax(syntax) || // JPEG baseline\n    isJpegLosslessTransferSyntax(syntax) || // JPEG Lossless\n    isJpeg2000TransferSyntax(syntax) || // JPEG 2000\n    isRleTransferSyntax(syntax)); // RLE\n}\n\n/**\n * Get the transfer syntax name.\n * Reference: [UID Values]{@link http://dicom.nema.org/dicom/2013/output/chtml/part06/chapter_A.html}.\n *\n * @param {string} syntax The transfer syntax.\n * @returns {string} The name of the transfer syntax.\n */\nexport function getTransferSyntaxName(syntax) {\n  let name = 'Unknown';\n  if (syntax === '1.2.840.10008.1.2') {\n    // Implicit VR - Little Endian\n    name = 'Little Endian Implicit';\n  } else if (syntax === '1.2.840.10008.1.2.1') {\n    // Explicit VR - Little Endian\n    name = 'Little Endian Explicit';\n  } else if (syntax === '1.2.840.10008.1.2.1.99') {\n    // Deflated Explicit VR - Little Endian\n    name = 'Little Endian Deflated Explicit';\n  } else if (syntax === '1.2.840.10008.1.2.2') {\n    // Explicit VR - Big Endian\n    name = 'Big Endian Explicit';\n  } else if (isJpegBaselineTransferSyntax(syntax)) {\n    // JPEG baseline\n    if (syntax === '1.2.840.10008.1.2.4.50') {\n      name = 'JPEG Baseline';\n    } else { // *.51\n      name = 'JPEG Extended, Process 2+4';\n    }\n  } else if (isJpegLosslessTransferSyntax(syntax)) {\n    // JPEG Lossless\n    if (syntax === '1.2.840.10008.1.2.4.57') {\n      name = 'JPEG Lossless, Nonhierarchical (Processes 14)';\n    } else { // *.70\n      name = 'JPEG Lossless, Non-hierarchical, 1st Order Prediction';\n    }\n  } else if (isJpegRetiredTransferSyntax(syntax)) {\n    // Retired JPEG\n    name = 'Retired JPEG';\n  } else if (isJpeglsTransferSyntax(syntax)) {\n    // JPEG-LS\n    name = 'JPEG-LS';\n  } else if (isJpeg2000TransferSyntax(syntax)) {\n    // JPEG 2000\n    if (syntax === '1.2.840.10008.1.2.4.91') {\n      name = 'JPEG 2000 (Lossless or Lossy)';\n    } else { // *.90\n      name = 'JPEG 2000 (Lossless only)';\n    }\n  } else if (syntax === '1.2.840.10008.1.2.4.100') {\n    // MPEG2 Image Compression\n    name = 'MPEG2';\n  } else if (isRleTransferSyntax(syntax)) {\n    // RLE (lossless)\n    name = 'RLE';\n  }\n  // return\n  return name;\n}\n\n/**\n * Guess the transfer syntax from the first data element.\n * See https://github.com/ivmartel/dwv/issues/188\n *   (Allow to load DICOM with no DICM preamble) for more details.\n *\n * @param {object} firstDataElement The first data element of the DICOM header.\n * @returns {object} The transfer syntax data element.\n */\nfunction guessTransferSyntax(firstDataElement) {\n  const oEightGroupBigEndian = '0800';\n  const oEightGroupLittleEndian = '0008';\n  // check that group is 0008\n  const group = firstDataElement.tag.getGroup();\n  if (group !== oEightGroupBigEndian &&\n    group !== oEightGroupLittleEndian) {\n    throw new Error(\n      'Not a valid DICOM file (no magic DICM word found' +\n        ' and first element not in 0008 group)'\n    );\n  }\n  // reasonable assumption: 2 uppercase characters => explicit vr\n  const vr = firstDataElement.vr;\n  const vr0 = vr.charCodeAt(0);\n  const vr1 = vr.charCodeAt(1);\n  const implicit = (vr0 >= 65 && vr0 <= 90 && vr1 >= 65 && vr1 <= 90)\n    ? false : true;\n  // guess transfer syntax\n  let syntax = null;\n  if (group === oEightGroupLittleEndian) {\n    if (implicit) {\n      // ImplicitVRLittleEndian\n      syntax = '1.2.840.10008.1.2';\n    } else {\n      // ExplicitVRLittleEndian\n      syntax = '1.2.840.10008.1.2.1';\n    }\n  } else {\n    if (implicit) {\n      // ImplicitVRBigEndian: impossible\n      throw new Error(\n        'Not a valid DICOM file (no magic DICM word found' +\n        'and implicit VR big endian detected)'\n      );\n    } else {\n      // ExplicitVRBigEndian\n      syntax = '1.2.840.10008.1.2.2';\n    }\n  }\n  // set transfer syntax data element\n  const dataElement = {\n    tag: new Tag('0002', '0010'),\n    vr: 'UI'\n  };\n  dataElement.value = [syntax + ' ']; // even length\n  dataElement.vl = dataElement.value[0].length;\n  dataElement.startOffset = firstDataElement.startOffset;\n  dataElement.endOffset = dataElement.startOffset + dataElement.vl;\n\n  return dataElement;\n}\n\n/**\n * Get the appropriate TypedArray in function of arguments.\n *\n * @param {number} bitsAllocated The number of bites used to store\n *   the data: [8, 16, 32].\n * @param {number} pixelRepresentation The pixel representation,\n *   0:unsigned;1:signed.\n * @param {number} size The size of the new array.\n * @returns {Uint8Array|Int8Array|Uint16Array|Int16Array|Uint32Array|Int32Array}\n *   The good typed array.\n */\nexport function getTypedArray(bitsAllocated, pixelRepresentation, size) {\n  let res = null;\n  try {\n    if (bitsAllocated === 8) {\n      if (pixelRepresentation === 0) {\n        res = new Uint8Array(size);\n      } else {\n        res = new Int8Array(size);\n      }\n    } else if (bitsAllocated === 16) {\n      if (pixelRepresentation === 0) {\n        res = new Uint16Array(size);\n      } else {\n        res = new Int16Array(size);\n      }\n    } else if (bitsAllocated === 32) {\n      if (pixelRepresentation === 0) {\n        res = new Uint32Array(size);\n      } else {\n        res = new Int32Array(size);\n      }\n    }\n  } catch (error) {\n    if (error instanceof RangeError) {\n      const powerOf2 = Math.floor(Math.log(size) / Math.log(2));\n      logger.error('Cannot allocate array of size: ' +\n        size + ' (>2^' + powerOf2 + ').');\n    }\n  }\n  return res;\n}\n\n/**\n * Get the number of bytes occupied by a data element prefix,\n *   i.e. without its value.\n *\n * @param {string} vr The Value Representation of the element.\n * @param {boolean} isImplicit Does the data use implicit VR?\n * @returns {number} The size of the element prefix.\n * WARNING: this is valid for tags with a VR, if not sure use\n *   the 'isTagWithVR' function first.\n * Reference:\n * - [Data Element explicit]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_7.html#table_7.1-1},\n * - [Data Element implicit]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_7.5.html#table_7.5-1}.\n *\n * | Tag | VR  | VL | Value |\n * | 4   | 2   | 2  | X     | -> regular explicit: 8 + X\n * | 4   | 2+2 | 4  | X     | -> 32bit VL: 12 + X\n *\n * | Tag | VL | Value |\n * | 4   | 4  | X     | -> implicit (32bit VL): 8 + X\n *\n * | Tag | Len | Value |\n * | 4   | 4   | X     | -> item: 8 + X\n */\nexport function getDataElementPrefixByteSize(vr, isImplicit) {\n  return isImplicit ? 8 : is32bitVLVR(vr) ? 12 : 8;\n}\n\n/**\n * DicomParser class.\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // setup the dicom parser\n *   const dicomParser = new dwv.DicomParser();\n *   // parse the buffer\n *   dicomParser.parse(event.target.response);\n *   // get the dicom tags\n *   const tags = dicomParser.getDicomElements();\n *   // display the modality\n *   const div = document.getElementById('dwv');\n *   div.appendChild(document.createTextNode(\n *     'Modality: ' + tags['00080060'].value[0]\n *   ));\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class DicomParser {\n\n  /**\n   * The list of DICOM elements.\n   *\n   * @type {object}\n   */\n  #dicomElements = {};\n\n  /**\n   * Default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Default text decoder.\n   *\n   * @type {DefaultTextDecoder}\n   */\n  #defaultTextDecoder = new DefaultTextDecoder();\n\n  /**\n   * Special text decoder.\n   *\n   * @type {DefaultTextDecoder|TextDecoder}\n   */\n  #textDecoder = this.#defaultTextDecoder;\n\n  /**\n   * Decode an input string buffer using the default text decoder.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  #decodeString(buffer) {\n    return this.#defaultTextDecoder.decode(buffer);\n  }\n\n  /**\n   * Decode an input string buffer using the 'special' text decoder.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  #decodeSpecialString(buffer) {\n    return this.#textDecoder.decode(buffer);\n  }\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The input character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Set the text decoder character set.\n   *\n   * @param {string} characterSet The input character set.\n   */\n  setDecoderCharacterSet(characterSet) {\n    /**\n     * The text decoder.\n     *\n     * @external TextDecoder\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder\n     */\n    this.#textDecoder = new TextDecoder(characterSet);\n  }\n\n  /**\n   * Get the raw DICOM data elements.\n   *\n   * @returns {object} The raw DICOM elements.\n   */\n  getDicomElements() {\n    return this.#dicomElements;\n  }\n\n  /**\n   * Read a DICOM tag.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @returns {object} An object containing the tag and the end offset.\n   */\n  #readTag(reader, offset) {\n    // group\n    const group = reader.readHex(offset);\n    offset += Uint16Array.BYTES_PER_ELEMENT;\n    // element\n    const element = reader.readHex(offset);\n    offset += Uint16Array.BYTES_PER_ELEMENT;\n    // return\n    return {\n      tag: new Tag(group, element),\n      endOffset: offset\n    };\n  }\n\n  /**\n   * Read an item data element.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} The item data as a list of data elements.\n   */\n  #readItemDataElement(reader, offset, implicit) {\n    const itemData = {};\n\n    // read the first item\n    let item = this.#readDataElement(reader, offset, implicit);\n    offset = item.endOffset;\n\n    // exit if it is a sequence delimitation item\n    if (isSequenceDelimitationItemTag(item.tag)) {\n      return {\n        data: itemData,\n        endOffset: item.endOffset,\n        isSeqDelim: true\n      };\n    }\n\n    // store item (mainly to keep vl)\n    itemData[item.tag.getKey()] = {\n      tag: item.tag,\n      vr: 'NONE',\n      vl: item.vl,\n      undefinedLength: item.undefinedLength\n    };\n\n    if (!item.undefinedLength) {\n      // explicit VR item: read until the end offset\n      const endOffset = offset;\n      offset -= item.vl;\n      while (offset < endOffset) {\n        item = this.#readDataElement(reader, offset, implicit);\n        offset = item.endOffset;\n        itemData[item.tag.getKey()] = item;\n      }\n    } else {\n      // implicit VR item: read until the item delimitation item\n      let isItemDelim = false;\n      while (!isItemDelim) {\n        item = this.#readDataElement(reader, offset, implicit);\n        offset = item.endOffset;\n        isItemDelim = isItemDelimitationItemTag(item.tag);\n        if (!isItemDelim) {\n          itemData[item.tag.getKey()] = item;\n        }\n      }\n    }\n\n    return {\n      data: itemData,\n      endOffset: offset,\n      isSeqDelim: false\n    };\n  }\n\n  /**\n   * Read the pixel item data element.\n   * Ref: [Single frame fragments]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_A.4.html#table_A.4-1}.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} The item data as an array of data elements.\n   */\n  #readPixelItemDataElement(\n    reader, offset, implicit) {\n    const itemData = [];\n\n    // first item: basic offset table\n    let item = this.#readDataElement(reader, offset, implicit);\n    const offsetTableVl = item.vl;\n    offset = item.endOffset;\n\n    // read until the sequence delimitation item\n    let isSeqDelim = false;\n    while (!isSeqDelim) {\n      item = this.#readDataElement(reader, offset, implicit);\n      offset = item.endOffset;\n      isSeqDelim = isSequenceDelimitationItemTag(item.tag);\n      if (!isSeqDelim) {\n        // force pixel item vr to OB\n        item.vr = 'OB';\n        itemData.push(item);\n      }\n    }\n\n    return {\n      data: itemData,\n      endOffset: offset,\n      offsetTableVl: offsetTableVl\n    };\n  }\n\n  /**\n   * Read a DICOM data element.\n   * Reference: [DICOM VRs]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_6.2.html#table_6.2-1}.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} An object containing the element\n   *   'tag', 'vl', 'vr', 'data' and 'endOffset'.\n   */\n  #readDataElement(reader, offset, implicit) {\n    // Tag: group, element\n    const readTagRes = this.#readTag(reader, offset);\n    const tag = readTagRes.tag;\n    offset = readTagRes.endOffset;\n\n    // Value Representation (VR)\n    let vr = null;\n    let is32bitVL = false;\n    if (tag.isWithVR()) {\n      // implicit VR\n      if (implicit) {\n        vr = tag.getVrFromDictionary();\n        if (typeof vr === 'undefined') {\n          vr = 'UN';\n        }\n        is32bitVL = true;\n      } else {\n        vr = this.#decodeString(reader.readUint8Array(offset, 2));\n        offset += 2 * Uint8Array.BYTES_PER_ELEMENT;\n        is32bitVL = is32bitVLVR(vr);\n        // reserved 2 bytes\n        if (is32bitVL) {\n          offset += 2 * Uint8Array.BYTES_PER_ELEMENT;\n        }\n      }\n    } else {\n      vr = 'NONE';\n      is32bitVL = true;\n    }\n\n    // Value Length (VL)\n    let vl = 0;\n    if (is32bitVL) {\n      vl = reader.readUint32(offset);\n      offset += Uint32Array.BYTES_PER_ELEMENT;\n    } else {\n      vl = reader.readUint16(offset);\n      offset += Uint16Array.BYTES_PER_ELEMENT;\n    }\n\n    // check the value of VL\n    let undefinedLength = false;\n    if (vl === 0xffffffff) {\n      undefinedLength = true;\n      vl = 0;\n    }\n\n    // treat private tag with unknown VR and zero VL as a sequence (see #799)\n    if (tag.isPrivate() && vr === 'UN' && vl === 0) {\n      vr = 'SQ';\n    }\n\n    let startOffset = offset;\n    let endOffset = startOffset + vl;\n\n    // read sequence elements\n    let data = null;\n    if (isPixelDataTag(tag) && undefinedLength) {\n      // pixel data sequence (implicit)\n      const pixItemData =\n        this.#readPixelItemDataElement(reader, offset, implicit);\n      offset = pixItemData.endOffset;\n      startOffset += pixItemData.offsetTableVl;\n      data = pixItemData.data;\n      endOffset = offset;\n      vl = offset - startOffset;\n    } else if (vr === 'SQ') {\n      // sequence\n      data = [];\n      let itemData;\n      if (!undefinedLength) {\n        if (vl !== 0) {\n          // explicit VR sequence: read until the end offset\n          const sqEndOffset = offset + vl;\n          while (offset < sqEndOffset) {\n            itemData = this.#readItemDataElement(reader, offset, implicit);\n            data.push(itemData.data);\n            offset = itemData.endOffset;\n          }\n          endOffset = offset;\n          vl = offset - startOffset;\n        }\n      } else {\n        // implicit VR sequence: read until the sequence delimitation item\n        let isSeqDelim = false;\n        while (!isSeqDelim) {\n          itemData = this.#readItemDataElement(reader, offset, implicit);\n          isSeqDelim = itemData.isSeqDelim;\n          offset = itemData.endOffset;\n          // do not store the delimitation item\n          if (!isSeqDelim) {\n            data.push(itemData.data);\n          }\n        }\n        endOffset = offset;\n        vl = offset - startOffset;\n      }\n    }\n\n    // return\n    const element = {\n      tag: tag,\n      vr: vr,\n      vl: vl,\n      startOffset: startOffset,\n      endOffset: endOffset\n    };\n    // only set if true (only for sequences and items)\n    if (undefinedLength) {\n      element.undefinedLength = undefinedLength;\n    }\n    if (data) {\n      element.items = data;\n    }\n    return element;\n  }\n\n  /**\n   * Interpret the data of an element.\n   *\n   * @param {object} element The data element.\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} [pixelRepresentation] PixelRepresentation 0->unsigned,\n   *   1->signed (needed for pixel data or VR=xs).\n   * @param {number} [bitsAllocated] Bits allocated (needed for pixel data).\n   * @returns {object} The interpreted data.\n   */\n  #interpretElement(\n    element, reader, pixelRepresentation, bitsAllocated) {\n\n    const tag = element.tag;\n    const vl = element.vl;\n    const vr = element.vr;\n    const offset = element.startOffset;\n\n    // data\n    let data = null;\n    const vrType = vrTypes[vr];\n    if (isPixelDataTag(tag)) {\n      if (element.undefinedLength) {\n        // implicit pixel data sequence\n        data = [];\n        for (let j = 0; j < element.items.length; ++j) {\n          data.push(this.#interpretElement(\n            element.items[j], reader,\n            pixelRepresentation, bitsAllocated));\n        }\n        // remove non parsed items\n        delete element.items;\n      } else {\n        // check bits allocated and VR\n        // https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_A.2.html\n        if (bitsAllocated > 8 && vr === 'OB') {\n          logger.warn(\n            'Reading DICOM pixel data with bitsAllocated>8 and OB VR.'\n          );\n        }\n        // read\n        data = [];\n        if (bitsAllocated === 1) {\n          data.push(reader.readBinaryArray(offset, vl));\n        } else if (bitsAllocated === 8) {\n          if (pixelRepresentation === 0) {\n            data.push(reader.readUint8Array(offset, vl));\n          } else {\n            data.push(reader.readInt8Array(offset, vl));\n          }\n        } else if (bitsAllocated === 16) {\n          if (pixelRepresentation === 0) {\n            data.push(reader.readUint16Array(offset, vl));\n          } else {\n            data.push(reader.readInt16Array(offset, vl));\n          }\n        } else {\n          throw new Error('Unsupported bits allocated: ' + bitsAllocated);\n        }\n      }\n    } else if (typeof vrType !== 'undefined') {\n      if (vrType === 'Uint8') {\n        data = reader.readUint8Array(offset, vl);\n      } else if (vrType === 'Uint16') {\n        data = reader.readUint16Array(offset, vl);\n        // keep as binary for 'O*' VR\n        if (vr[0] !== 'O') {\n          data = Array.from(data);\n        }\n      } else if (vrType === 'Uint32') {\n        data = reader.readUint32Array(offset, vl);\n        // keep as binary for 'O*' VR\n        if (vr[0] !== 'O') {\n          data = Array.from(data);\n        }\n      } else if (vrType === 'Uint64') {\n        data = reader.readUint64Array(offset, vl);\n      } else if (vrType === 'Int16') {\n        data = Array.from(reader.readInt16Array(offset, vl));\n      } else if (vrType === 'Int32') {\n        data = Array.from(reader.readInt32Array(offset, vl));\n      } else if (vrType === 'Int64') {\n        data = reader.readInt64Array(offset, vl);\n      } else if (vrType === 'Float32') {\n        data = Array.from(reader.readFloat32Array(offset, vl));\n      } else if (vrType === 'Float64') {\n        data = Array.from(reader.readFloat64Array(offset, vl));\n      } else if (vrType === 'string') {\n        const stream = reader.readUint8Array(offset, vl);\n        if (isCharSetStringVR(vr)) {\n          data = this.#decodeSpecialString(stream);\n        } else {\n          data = this.#decodeString(stream);\n        }\n        data = cleanString(data).split('\\\\');\n      } else {\n        throw Error('Unknown VR type: ' + vrType);\n      }\n    } else if (vr === 'xx') {\n      // US or OW\n      data = Array.from(reader.readUint16Array(offset, vl));\n    } else if (vr === 'ox') {\n      // OB or OW\n      if (bitsAllocated === 8) {\n        data = Array.from(reader.readUint8Array(offset, vl));\n      } else {\n        data = Array.from(reader.readUint16Array(offset, vl));\n      }\n    } else if (vr === 'xs') {\n      // (US or SS) or (US or SS or OW)\n      if (pixelRepresentation === 0) {\n        data = Array.from(reader.readUint16Array(offset, vl));\n      } else {\n        data = Array.from(reader.readInt16Array(offset, vl));\n      }\n    } else if (vr === 'AT') {\n      // attribute\n      const raw = reader.readUint16Array(offset, vl);\n      data = [];\n      for (let i = 0, leni = raw.length; i < leni; i += 2) {\n        const stri = raw[i].toString(16);\n        const stri1 = raw[i + 1].toString(16);\n        let str = '(';\n        str += '0000'.substring(0, 4 - stri.length) + stri.toUpperCase();\n        str += ',';\n        str += '0000'.substring(0, 4 - stri1.length) + stri1.toUpperCase();\n        str += ')';\n        data.push(str);\n      }\n    } else if (vr === 'SQ') {\n      // sequence\n      data = [];\n      for (let k = 0; k < element.items.length; ++k) {\n        const item = element.items[k];\n        const itemData = {};\n        const keys = Object.keys(item);\n        for (let l = 0; l < keys.length; ++l) {\n          const subElement = item[keys[l]];\n          subElement.value = this.#interpretElement(\n            subElement, reader,\n            pixelRepresentation, bitsAllocated);\n          delete subElement.tag;\n          delete subElement.vl;\n          delete subElement.startOffset;\n          delete subElement.endOffset;\n          itemData[keys[l]] = subElement;\n        }\n        data.push(itemData);\n      }\n      // remove non parsed elements\n      delete element.items;\n    } else if (vr === 'NONE') {\n      // no VR -> no data\n      data = [];\n    } else {\n      logger.warn('Unknown VR: ' + vr +\n        ' (for tag ' + element.tag.getKey() + ')');\n      // empty data...\n      data = [];\n    }\n\n    return data;\n  }\n\n  /**\n   * Interpret the data of a list of elements.\n   *\n   * @param {Array} elements A list of data elements.\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} pixelRepresentation PixelRepresentation 0->unsigned,\n   *   1->signed.\n   * @param {number} bitsAllocated Bits allocated.\n   */\n  #interpret(\n    elements, reader,\n    pixelRepresentation, bitsAllocated) {\n\n    const keys = Object.keys(elements);\n    for (let i = 0; i < keys.length; ++i) {\n      const element = elements[keys[i]];\n      if (typeof element.value === 'undefined') {\n        element.value = this.#interpretElement(\n          element, reader, pixelRepresentation, bitsAllocated);\n      }\n      // delete interpretation specific properties\n      delete element.tag;\n      delete element.vl;\n      delete element.startOffset;\n      delete element.endOffset;\n    }\n  }\n\n  /**\n   * Parse the complete DICOM file (given as input to the class).\n   * Fills in the member object 'dicomElements'.\n   *\n   * @param {ArrayBuffer} buffer The input array buffer.\n   */\n  parse(buffer) {\n    let offset = 0;\n    let syntax = '';\n    let dataElement = null;\n    // default readers\n    const metaReader = new DataReader(buffer);\n    let dataReader = new DataReader(buffer);\n\n    // 128 -> 132: magic word\n    offset = 128;\n    const magicword = this.#decodeString(metaReader.readUint8Array(offset, 4));\n    offset += 4 * Uint8Array.BYTES_PER_ELEMENT;\n    if (magicword === 'DICM') {\n      // 0002, 0000: FileMetaInformationGroupLength (vr='UL')\n      dataElement = this.#readDataElement(metaReader, offset, false);\n      dataElement.value = this.#interpretElement(dataElement, metaReader);\n      // increment offset\n      offset = dataElement.endOffset;\n      // store the data element\n      this.#dicomElements[dataElement.tag.getKey()] = dataElement;\n      // get meta length\n      const metaLength = dataElement.value[0];\n\n      // meta elements\n      const metaEnd = offset + metaLength;\n      while (offset < metaEnd) {\n        // get the data element\n        dataElement = this.#readDataElement(metaReader, offset, false);\n        offset = dataElement.endOffset;\n        // store the data element\n        this.#dicomElements[dataElement.tag.getKey()] = dataElement;\n      }\n\n      // check the TransferSyntaxUID (has to be there!)\n      dataElement = this.#dicomElements['00020010'];\n      if (typeof dataElement === 'undefined') {\n        throw new Error('Not a valid DICOM file (no TransferSyntaxUID found)');\n      }\n      dataElement.value = this.#interpretElement(dataElement, metaReader);\n      syntax = dataElement.value[0];\n\n    } else {\n      logger.warn('No DICM prefix, trying to guess tansfer syntax.');\n      // read first element\n      dataElement = this.#readDataElement(dataReader, 0, false);\n      // guess transfer syntax\n      const tsElement = guessTransferSyntax(dataElement);\n      // store\n      this.#dicomElements[tsElement.tag.getKey()] = tsElement;\n      syntax = tsElement.value[0];\n      // reset offset\n      offset = 0;\n    }\n\n    // check transfer syntax support\n    if (!isReadSupportedTransferSyntax(syntax)) {\n      throw new Error('Unsupported DICOM transfer syntax: \\'' + syntax +\n        '\\' (' + getTransferSyntaxName(syntax) + ')');\n    }\n\n    // set implicit flag\n    let implicit = false;\n    if (isImplicitTransferSyntax(syntax)) {\n      implicit = true;\n    }\n\n    // Big Endian\n    if (isBigEndianTransferSyntax(syntax)) {\n      dataReader = new DataReader(buffer, false);\n    }\n\n    // DICOM data elements\n    while (offset < buffer.byteLength) {\n      // get the data element\n      dataElement = this.#readDataElement(dataReader, offset, implicit);\n      // increment offset\n      offset = dataElement.endOffset;\n      // store the data element\n      const key = dataElement.tag.getKey();\n      if (typeof this.#dicomElements[key] === 'undefined') {\n        this.#dicomElements[key] = dataElement;\n      } else {\n        logger.warn('Not saving duplicate tag: ' + key);\n      }\n    }\n\n    // safety checks...\n    if (isNaN(offset)) {\n      throw new Error('Problem while parsing, bad offset');\n    }\n    if (buffer.byteLength !== offset) {\n      logger.warn('Did not reach the end of the buffer: ' +\n        offset + ' != ' + buffer.byteLength);\n    }\n\n    //-------------------------------------------------\n    // values needed for data interpretation\n\n    // pixel specific\n    let pixelRepresentation = 0;\n    let bitsAllocated = 16;\n    if (typeof this.#dicomElements['7FE00010'] !== 'undefined') {\n      // PixelRepresentation 0->unsigned, 1->signed\n      dataElement = this.#dicomElements['00280103'];\n      if (typeof dataElement !== 'undefined') {\n        dataElement.value = this.#interpretElement(dataElement, dataReader);\n        pixelRepresentation = dataElement.value[0];\n      } else {\n        logger.warn(\n          'Reading DICOM pixel data with default pixelRepresentation.');\n      }\n\n      // BitsAllocated\n      dataElement = this.#dicomElements['00280100'];\n      if (typeof dataElement !== 'undefined') {\n        dataElement.value = this.#interpretElement(dataElement, dataReader);\n        bitsAllocated = dataElement.value[0];\n      } else {\n        logger.warn('Reading DICOM pixel data with default bitsAllocated.');\n      }\n    }\n\n    // default character set\n    if (typeof this.#defaultCharacterSet !== 'undefined') {\n      this.setDecoderCharacterSet(this.#defaultCharacterSet);\n    }\n\n    // SpecificCharacterSet\n    dataElement = this.#dicomElements['00080005'];\n    if (typeof dataElement !== 'undefined') {\n      dataElement.value = this.#interpretElement(dataElement, dataReader);\n      let charSetTerm;\n      if (dataElement.value.length === 1) {\n        charSetTerm = dataElement.value[0];\n      } else {\n        charSetTerm = dataElement.value[1];\n        logger.warn('Unsupported character set with code extensions: \\'' +\n          charSetTerm + '\\'.');\n      }\n      this.setDecoderCharacterSet(getUtfLabel(charSetTerm));\n    }\n\n    // interpret the dicom elements\n    this.#interpret(\n      this.#dicomElements, dataReader,\n      pixelRepresentation, bitsAllocated\n    );\n\n    // handle fragmented pixel buffer\n    // Reference: http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_8.2.html\n    // (third note, \"Depending on the transfer syntax...\")\n    dataElement = this.#dicomElements['7FE00010'];\n    if (typeof dataElement !== 'undefined') {\n      if (dataElement.undefinedLength) {\n        let numberOfFrames = 1;\n        if (typeof this.#dicomElements['00280008'] !== 'undefined') {\n          numberOfFrames = Number(this.#dicomElements['00280008'].value[0]);\n        }\n        const pixItems = dataElement.value;\n        if (pixItems.length > 1 && pixItems.length > numberOfFrames) {\n          // concatenate pixel data items\n          // concat does not work on typed arrays\n          //this.pixelBuffer = this.pixelBuffer.concat( dataElement.data );\n          // manual concat...\n          const nItemPerFrame = pixItems.length / numberOfFrames;\n          const newPixItems = [];\n          let index = 0;\n          for (let f = 0; f < numberOfFrames; ++f) {\n            index = f * nItemPerFrame;\n            // calculate the size of a frame\n            let size = 0;\n            for (let i = 0; i < nItemPerFrame; ++i) {\n              size += pixItems[index + i].length;\n            }\n            // create new buffer\n            const newBuffer = new pixItems[0].constructor(size);\n            // fill new buffer\n            let fragOffset = 0;\n            for (let j = 0; j < nItemPerFrame; ++j) {\n              newBuffer.set(pixItems[index + j], fragOffset);\n              fragOffset += pixItems[index + j].length;\n            }\n            newPixItems[f] = newBuffer;\n          }\n          // store as pixel data\n          dataElement.value = newPixItems;\n        }\n      }\n    }\n  }\n\n} // class DicomParser\n","/**\n * ListenerHandler class: handles add/removing and firing listeners.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget#example\n */\nexport class ListenerHandler {\n  /**\n   * listeners.\n   *\n   * @type {object}\n   */\n  #listeners = {};\n\n  /**\n   * Add an event listener.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  add(type, callback) {\n    // create array if not present\n    if (typeof this.#listeners[type] === 'undefined') {\n      this.#listeners[type] = [];\n    }\n    // add callback to listeners array\n    this.#listeners[type].push(callback);\n  }\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  remove(type, callback) {\n    // check if the type is present\n    if (typeof this.#listeners[type] === 'undefined') {\n      return;\n    }\n    // remove from listeners array\n    for (let i = 0; i < this.#listeners[type].length; ++i) {\n      if (this.#listeners[type][i] === callback) {\n        this.#listeners[type].splice(i, 1);\n      }\n    }\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  fireEvent = (event) => {\n    // check if they are listeners for the event type\n    if (typeof this.#listeners[event.type] === 'undefined') {\n      return;\n    }\n    // fire events from a copy of the listeners array\n    // to avoid interference from possible add/remove\n    const stack = this.#listeners[event.type].slice();\n    for (let i = 0; i < stack.length; ++i) {\n      stack[i](event);\n    }\n  };\n}\n","import {Index} from '../math/index';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * Immutable Size class.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Size {\n\n  /**\n   * The size values.\n   *\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * @param {Array} values The size values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create size with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create size with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val) && val !== 0;\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create size with non number or zero values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the size value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the size.\n   *\n   * @returns {string} The Size as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {Array} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if a dimension exists and has more than one element.\n   *\n   * @param {number} dimension The dimension to check.\n   * @returns {boolean} True if the size is more than one.\n   */\n  moreThanOne(dimension) {\n    return this.length() >= dimension + 1 && this.get(dimension) !== 1;\n  }\n\n  /**\n   * Check if the associated data is scrollable in 3D.\n   *\n   * @param {Matrix33} [viewOrientation] The orientation matrix.\n   * @returns {boolean} True if scrollable.\n   */\n  canScroll3D(viewOrientation) {\n    let dimension = 2;\n    if (typeof viewOrientation !== 'undefined') {\n      dimension = viewOrientation.getThirdColMajorDirection();\n    }\n    return this.moreThanOne(dimension);\n  }\n\n  /**\n   * Check if the associated data is scrollable: either in 3D or\n   * in other directions.\n   *\n   * @param {Matrix33} viewOrientation The orientation matrix.\n   * @returns {boolean} True if scrollable.\n   */\n  canScroll(viewOrientation) {\n    let canScroll = this.canScroll3D(viewOrientation);\n    // check possible other dimensions\n    for (let i = 3; i < this.length(); ++i) {\n      canScroll = canScroll || this.moreThanOne(i);\n    }\n    return canScroll;\n  }\n\n  /**\n   * Get the size of a given dimension.\n   *\n   * @param {number} dimension The dimension.\n   * @param {number} [start] Optional start dimension to start counting from.\n   * @returns {number} The size.\n   */\n  getDimSize(dimension, start) {\n    if (dimension > this.length()) {\n      return null;\n    }\n    if (typeof start === 'undefined') {\n      start = 0;\n    } else {\n      if (start < 0 || start > dimension) {\n        throw new Error('Invalid start value for getDimSize');\n      }\n    }\n    let size = 1;\n    for (let i = start; i < dimension; ++i) {\n      size *= this.get(i);\n    }\n    return size;\n  }\n\n  /**\n   * Get the total size.\n   *\n   * @param {number} [start] Optional start dimension to base the offset on.\n   * @returns {number} The total size.\n   */\n  getTotalSize(start) {\n    return this.getDimSize(this.length(), start);\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Size} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== rhs.length()) {\n      return false;\n    }\n    // check values\n    for (let i = 0; i < length; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check that an index is within bounds.\n   *\n   * @param {Index} index The index to check.\n   * @param {Array} dirs Optional list of directions to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isInBounds(index, dirs) {\n    // check input\n    if (!index) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== index.length()) {\n      return false;\n    }\n    // create dirs if not there\n    if (typeof dirs === 'undefined') {\n      dirs = [];\n      for (let j = 0; j < length; ++j) {\n        dirs.push(j);\n      }\n    } else {\n      for (let k = 0; k < length; ++k) {\n        if (dirs[k] > length - 1) {\n          throw new Error('Wrong input dir value: ' + dirs[k]);\n        }\n      }\n    }\n    // check values is 0 <= v < size\n    const inBound = function (value, size) {\n      return value >= 0 && value < size;\n    };\n    // check\n    for (let i = 0; i < dirs.length; ++i) {\n      if (!inBound(index.get(dirs[i]), this.get(dirs[i]))) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Convert an index to an offset in memory.\n   *\n   * @param {Index} index The index to convert.\n   * @param {number} [start] Optional start dimension to base the offset on.\n   * @returns {number} The offset.\n   */\n  indexToOffset(index, start) {\n    // TODO check for equality\n    if (index.length() < this.length()) {\n      throw new Error('Incompatible index and size length');\n    }\n    if (typeof start === 'undefined') {\n      start = 0;\n    } else {\n      if (start < 0 || start > this.length() - 1) {\n        throw new Error('Invalid start value for indexToOffset');\n      }\n    }\n    let offset = 0;\n    for (let i = start; i < this.length(); ++i) {\n      offset += index.get(i) * this.getDimSize(i, start);\n    }\n    return offset;\n  }\n\n  /**\n   * Convert an offset in memory to an index.\n   *\n   * @param {number} offset The offset to convert.\n   * @returns {Index} The index.\n   */\n  offsetToIndex(offset) {\n    const values = new Array(this.length());\n    let off = offset;\n    let dimSize = 0;\n    for (let i = this.length() - 1; i > 0; --i) {\n      dimSize = this.getDimSize(i);\n      values[i] = Math.floor(off / dimSize);\n      off = off - values[i] * dimSize;\n    }\n    values[0] = off;\n    return new Index(values);\n  }\n\n  /**\n   * Get the 2D base of this size.\n   *\n   * @returns {object} The 2D base [0,1] as {x,y}.\n   */\n  get2D() {\n    return {\n      x: this.get(0),\n      y: this.get(1)\n    };\n  }\n\n} // Size class\n","/**\n * Immutable Spacing class.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Spacing {\n\n  /**\n   * The spacing values.\n   *\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * @param {Array} values The spacing values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create spacing with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create spacing with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val) && val !== 0;\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create spacing with non number or zero values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the spacing value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the spacing.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the spacing.\n   *\n   * @returns {string} The spacing as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this spacing.\n   *\n   * @returns {Array} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Spacing} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== rhs.length()) {\n      return false;\n    }\n    // check values\n    for (let i = 0; i < length; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Get the 2D base of this size.\n   *\n   * @returns {object} The 2D base [col,row] as {x,y}.\n   */\n  get2D() {\n    return {\n      x: this.get(0),\n      y: this.get(1)\n    };\n  }\n\n} // Spacing class\n","import {\n  BIG_EPSILON,\n  isSimilar,\n  getIdentityMat33\n} from '../math/matrix';\nimport {Point3D, Point} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {Index} from '../math/index';\nimport {logger} from '../utils/logger';\nimport {Size} from './size';\nimport {Spacing} from './spacing';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * 2D/3D Geometry class.\n */\nexport class Geometry {\n\n  /**\n   * Array of origins.\n   *\n   * @type {Array}\n   */\n  #origins;\n\n  /**\n   * Data size.\n   *\n   * @type {Size}\n   */\n  #size;\n\n  /**\n   * Data spacing.\n   *\n   * @type {Spacing}\n   */\n  #spacing;\n\n  /**\n   * Local helper object for time points.\n   *\n   * @type {object}\n   */\n  #timeOrigins = {};\n\n  /**\n   * Initial time index.\n   *\n   * @type {number}\n   */\n  #initialTime;\n\n  /**\n   * Data orientation.\n   *\n   * @type {Matrix33}\n   */\n  #orientation = getIdentityMat33();\n\n  /**\n   * Flag to know if new origins were added.\n   *\n   * @type {boolean}\n   */\n  #newOrigins = false;\n\n  /**\n   * @param {Point3D} origin The object origin (a 3D point).\n   * @param {Size} size The object size.\n   * @param {Spacing} spacing The object spacing.\n   * @param {Matrix33} [orientation] The object orientation (3*3 matrix,\n   *   default to 3*3 identity).\n   * @param {number} [time] Optional time index.\n   */\n  constructor(origin, size, spacing, orientation, time) {\n    this.#origins = [origin];\n    this.#size = size;\n    this.#spacing = spacing;\n    if (typeof time !== 'undefined') {\n      this.#initialTime = time;\n      this.#timeOrigins[time] = [origin];\n    }\n    // check input orientation\n    if (typeof orientation !== 'undefined') {\n      this.#orientation = orientation;\n    }\n  }\n\n  /**\n   * Get the time value that was passed at construction.\n   *\n   * @returns {number} The time value.\n   */\n  getInitialTime() {\n    return this.#initialTime;\n  }\n\n  /**\n   * Get the total number of slices.\n   * Can be different from what is stored in the size object\n   *  during a volume with time points creation process.\n   *\n   * @returns {number} The total count.\n   */\n  getCurrentTotalNumberOfSlices() {\n    const keys = Object.keys(this.#timeOrigins);\n    if (keys.length === 0) {\n      return this.#origins.length;\n    }\n    let count = 0;\n    for (let i = 0; i < keys.length; ++i) {\n      count += this.#timeOrigins[keys[i]].length;\n    }\n    return count;\n  }\n\n  /**\n   * Check if a time point has associated slices.\n   *\n   * @param {number} time The time point to check.\n   * @returns {boolean} True if slices are present.\n   */\n  hasSlicesAtTime(time) {\n    return typeof this.#timeOrigins[time] !== 'undefined';\n  }\n\n  /**\n   * Get the number of slices stored for time points preceding\n   * the input one.\n   *\n   * @param {number} time The time point to check.\n   * @returns {number|undefined} The count.\n   */\n  getCurrentNumberOfSlicesBeforeTime(time) {\n    const keys = Object.keys(this.#timeOrigins);\n    if (keys.length === 0) {\n      return undefined;\n    }\n    let count = 0;\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i];\n      if (parseInt(key, 10) === time) {\n        break;\n      }\n      count += this.#timeOrigins[key].length;\n    }\n    return count;\n  }\n\n  /**\n   * Get the object origin.\n   * This should be the lowest origin to ease calculations (?).\n   *\n   * @returns {Point3D} The object origin.\n   */\n  getOrigin() {\n    return this.#origins[0];\n  }\n\n  /**\n   * Get the object origins.\n   *\n   * @returns {Array} The object origins.\n   */\n  getOrigins() {\n    return this.#origins;\n  }\n\n  /**\n   * Check if a point is in the origin list.\n   *\n   * @param {Point3D} point3D The point to check.\n   * @param {number} tol The comparison tolerance\n   *   default to Number.EPSILON.\n   * @returns {boolean} True if in list.\n   */\n  includesOrigin(point3D, tol) {\n    for (let i = 0; i < this.#origins.length; ++i) {\n      if (this.#origins[i].isSimilar(point3D, tol)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the object size.\n   * Warning: the size comes as stored in DICOM, meaning that it could\n   * be oriented.\n   *\n   * @param {Matrix33} [viewOrientation] The view orientation (optional)\n   * @returns {Size} The object size.\n   */\n  getSize(viewOrientation) {\n    let res = this.#size;\n    if (viewOrientation && typeof viewOrientation !== 'undefined') {\n      let values = getOrientedArray3D(\n        [\n          this.#size.get(0),\n          this.#size.get(1),\n          this.#size.get(2)\n        ],\n        viewOrientation);\n      values = values.map(Math.abs);\n      res = new Size(values.concat(this.#size.getValues().slice(3)));\n    }\n    return res;\n  }\n\n  /**\n   * Calculate slice spacing from origins and replace current\n   *   if needed.\n   */\n  #updateSliceSpacing() {\n    const geoSliceSpacing = getSliceGeometrySpacing(\n      this.#origins,\n      this.#orientation\n    );\n    // update local if needed\n    if (typeof geoSliceSpacing !== 'undefined' &&\n      this.#spacing.get(2) !== geoSliceSpacing) {\n      logger.trace('Updating slice spacing.');\n      const values = this.#spacing.getValues();\n      values[2] = geoSliceSpacing;\n      this.#spacing = new Spacing(values);\n    }\n  }\n\n  /**\n   * Get the object spacing.\n   * Warning: the spacing comes as stored in DICOM, meaning that it could\n   * be oriented.\n   *\n   * @param {Matrix33} [viewOrientation] The view orientation (optional)\n   * @returns {Spacing} The object spacing.\n   */\n  getSpacing(viewOrientation) {\n    // update slice spacing after appendSlice\n    if (this.#newOrigins) {\n      this.#updateSliceSpacing();\n      this.#newOrigins = false;\n    }\n    let res = this.#spacing;\n    if (viewOrientation && typeof viewOrientation !== 'undefined') {\n      let orientedValues = getOrientedArray3D(\n        [\n          this.#spacing.get(0),\n          this.#spacing.get(1),\n          this.#spacing.get(2)\n        ],\n        viewOrientation);\n      orientedValues = orientedValues.map(Math.abs);\n      res = new Spacing(orientedValues);\n    }\n    return res;\n  }\n\n  /**\n   * Get the image spacing in real world.\n   *\n   * @returns {Spacing} The object spacing.\n   */\n  getRealSpacing() {\n    // asOneAndZeros to not change spacing values...\n    return this.getSpacing(\n      this.#orientation.getInverse().asOneAndZeros()\n    );\n  }\n\n  /**\n   * Get the object orientation.\n   *\n   * @returns {Matrix33} The object orientation.\n   */\n  getOrientation() {\n    return this.#orientation;\n  }\n\n  /**\n   * Get the slice position of a point in the current slice layout.\n   * Slice indices increase with decreasing origins (high index -> low origin),\n   * this simplified the handling of reconstruction since it means\n   * the displayed data is in the same 'direction' as the extracted data.\n   * As seen in the getOrigin method, the main origin is the lowest one.\n   * This implies that the index to world and reverse method do some flipping\n   * magic...\n   *\n   * @param {Point3D} point The point to evaluate.\n   * @param {number} time Optional time index.\n   * @returns {number} The slice index.\n   */\n  getSliceIndex(point, time) {\n    // cannot use this.worldToIndex(point).getK() since\n    // we cannot guaranty consecutive slices...\n\n    let localOrigins = this.#origins;\n    if (typeof time !== 'undefined') {\n      localOrigins = this.#timeOrigins[time];\n    }\n\n    // find the closest index\n    let closestSliceIndex = 0;\n    let minDist = point.getDistance(localOrigins[0]);\n    let dist = 0;\n    for (let i = 0; i < localOrigins.length; ++i) {\n      dist = point.getDistance(localOrigins[i]);\n      if (dist < minDist) {\n        minDist = dist;\n        closestSliceIndex = i;\n      }\n    }\n    const closestOrigin = localOrigins[closestSliceIndex];\n    // direction between the input point and the closest origin\n    const pointDir = point.minus(closestOrigin);\n    // use third orientation matrix column as base plane vector\n    const normal = new Vector3D(\n      this.#orientation.get(0, 2),\n      this.#orientation.get(1, 2),\n      this.#orientation.get(2, 2)\n    );\n    // a.dot(b) = ||a|| * ||b|| * cos(theta)\n    // (https://en.wikipedia.org/wiki/Dot_product#Geometric_definition)\n    // -> the sign of the dot product depends on the cosinus of\n    //    the angle between the vectors\n    //   -> >0 => vectors are codirectional\n    //   -> <0 => vectors are opposite\n    const dotProd = normal.dotProduct(pointDir);\n    // oposite vectors get higher index\n    const sliceIndex = dotProd > 0 ? closestSliceIndex + 1 : closestSliceIndex;\n    return sliceIndex;\n  }\n\n  /**\n   * Append an origin to the geometry.\n   *\n   * @param {Point3D} origin The origin to append.\n   * @param {number} index The index at which to append.\n   * @param {number} [time] Optional time index.\n   */\n  appendOrigin(origin, index, time) {\n    if (typeof time !== 'undefined') {\n      this.#timeOrigins[time].splice(index, 0, origin);\n    }\n    if (typeof time === 'undefined' || time === this.#initialTime) {\n      this.#newOrigins = true;\n      // add in origin array\n      this.#origins.splice(index, 0, origin);\n      // increment second dimension\n      const values = this.#size.getValues();\n      values[2] += 1;\n      this.#size = new Size(values);\n    }\n  }\n\n  /**\n   * Append a frame to the geometry.\n   *\n   * @param {Point3D} origin The origin to append.\n   * @param {number} time Optional time index.\n   */\n  appendFrame(origin, time) {\n    // add origin to list\n    this.#timeOrigins[time] = [origin];\n    // increment third dimension\n    const sizeValues = this.#size.getValues();\n    const spacingValues = this.#spacing.getValues();\n    if (sizeValues.length === 4) {\n      sizeValues[3] += 1;\n    } else {\n      sizeValues.push(2);\n      spacingValues.push(1);\n    }\n    this.#size = new Size(sizeValues);\n    this.#spacing = new Spacing(spacingValues);\n  }\n\n  /**\n   * Get a string representation of the geometry.\n   *\n   * @returns {string} The geometry as a string.\n   */\n  toString() {\n    return 'Origin: ' + this.getOrigin() +\n      ', Size: ' + this.getSize() +\n      ', Spacing: ' + this.getSpacing() +\n      ', Orientation: ' + this.getOrientation();\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Geometry} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getOrigin().equals(rhs.getOrigin()) &&\n      this.getSize().equals(rhs.getSize()) &&\n      this.getSpacing().equals(rhs.getSpacing());\n  }\n\n  /**\n   * Check that a point is within bounds.\n   *\n   * @param {Point} point The point to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isInBounds(point) {\n    return this.isIndexInBounds(this.worldToIndex(point));\n  }\n\n  /**\n   * Check that a index is within bounds.\n   *\n   * @param {Index} index The index to check.\n   * @param {Array} [dirs] Optional list of directions to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isIndexInBounds(index, dirs) {\n    return this.getSize().isInBounds(index, dirs);\n  }\n\n  /**\n   * Convert an index into world coordinates.\n   *\n   * @param {Index} index The index to convert.\n   * @returns {Point} The corresponding point.\n   */\n  indexToWorld(index) {\n    // apply spacing\n    // (spacing is oriented, apply before orientation)\n    const spacing = this.getSpacing();\n    const orientedPoint3D = new Point3D(\n      index.get(0) * spacing.get(0),\n      index.get(1) * spacing.get(1),\n      index.get(2) * spacing.get(2)\n    );\n    // de-orient\n    const point3D = this.getOrientation().multiplyPoint3D(orientedPoint3D);\n    // keep >3d values\n    const values = index.getValues();\n    const origin = this.getOrigin();\n    values[0] = origin.getX() + point3D.getX();\n    values[1] = origin.getY() + point3D.getY();\n    values[2] = origin.getZ() + point3D.getZ();\n    // return point\n    return new Point(values);\n  }\n\n  /**\n   * Convert a 3D point into world coordinates.\n   *\n   * @param {Point3D} point The 3D point to convert.\n   * @returns {Point3D} The corresponding world 3D point.\n   */\n  pointToWorld(point) {\n    // apply spacing\n    // (spacing is oriented, apply before orientation)\n    const spacing = this.getSpacing();\n    const orientedPoint3D = new Point3D(\n      point.getX() * spacing.get(0),\n      point.getY() * spacing.get(1),\n      point.getZ() * spacing.get(2)\n    );\n    // de-orient\n    const point3D = this.getOrientation().multiplyPoint3D(orientedPoint3D);\n    // return point3D\n    const origin = this.getOrigin();\n    return new Point3D(\n      origin.getX() + point3D.getX(),\n      origin.getY() + point3D.getY(),\n      origin.getZ() + point3D.getZ()\n    );\n  }\n\n  /**\n   * Convert world coordinates into an index.\n   *\n   * @param {Point} point The point to convert.\n   * @returns {Index} The corresponding index.\n   */\n  worldToIndex(point) {\n    // compensate for origin\n    // (origin is not oriented, compensate before orientation)\n    // TODO: use slice origin...\n    const origin = this.getOrigin();\n    const point3D = new Point3D(\n      point.get(0) - origin.getX(),\n      point.get(1) - origin.getY(),\n      point.get(2) - origin.getZ()\n    );\n    // orient\n    const orientedPoint3D =\n      this.getOrientation().getInverse().multiplyPoint3D(point3D);\n    // keep >3d values\n    const values = point.getValues();\n    // apply spacing and round\n    const spacing = this.getSpacing();\n    values[0] = Math.round(orientedPoint3D.getX() / spacing.get(0));\n    values[1] = Math.round(orientedPoint3D.getY() / spacing.get(1));\n    values[2] = Math.round(orientedPoint3D.getZ() / spacing.get(2));\n\n    // return index\n    return new Index(values);\n  }\n\n  /**\n   * Convert world coordinates into an point.\n   *\n   * @param {Point} point The world point to convert.\n   * @returns {Point3D} The corresponding point.\n   */\n  worldToPoint(point) {\n    // compensate for origin\n    // (origin is not oriented, compensate before orientation)\n    const origin = this.getOrigin();\n    const point3D = new Point3D(\n      point.get(0) - origin.getX(),\n      point.get(1) - origin.getY(),\n      point.get(2) - origin.getZ()\n    );\n    // orient\n    const orientedPoint3D =\n      this.getOrientation().getInverse().multiplyPoint3D(point3D);\n    // keep >3d values\n    const values = point.getValues();\n    // apply spacing and round\n    const spacing = this.getSpacing();\n    values[0] = orientedPoint3D.getX() / spacing.get(0);\n    values[1] = orientedPoint3D.getY() / spacing.get(1);\n    values[2] = orientedPoint3D.getZ() / spacing.get(2);\n\n    // return index\n    return new Point3D(values[0], values[1], values[2]);\n  }\n\n} // class Geometry\n\n/**\n * Get the oriented values of an input 3D array.\n *\n * @param {Array} array3D The 3D array.\n * @param {Matrix33} orientation The orientation 3D matrix.\n * @returns {Array} The values reordered according to the orientation.\n */\nexport function getOrientedArray3D(array3D, orientation) {\n  // values = orientation * orientedValues\n  // -> inv(orientation) * values = orientedValues\n  return orientation.getInverse().multiplyArray3D(array3D);\n}\n\n/**\n * Get the raw values of an oriented input 3D array.\n *\n * @param {Array} array3D The 3D array.\n * @param {Matrix33} orientation The orientation 3D matrix.\n * @returns {Array} The values reordered to compensate the orientation.\n */\nexport function getDeOrientedArray3D(array3D, orientation) {\n  // values = orientation * orientedValues\n  return orientation.multiplyArray3D(array3D);\n}\n\n/**\n * Get the slice spacing from the difference in the Z directions\n * of input origins.\n *\n * @param {Array} origins An array of Point3D.\n * @param {Matrix33} orientation The oritentation matrix.\n * @param {boolean} [withCheck] Flag to activate spacing variation check,\n *   default to true.\n * @returns {number|undefined} The spacing.\n */\nexport function getSliceGeometrySpacing(origins, orientation, withCheck) {\n  if (typeof withCheck === 'undefined') {\n    withCheck = true;\n  }\n  // check origins\n  if (origins.length <= 1) {\n    return;\n  }\n  // (x, y, z) = orientationMatrix * (i, j, k)\n  // -> inv(orientationMatrix) * (x, y, z) = (i, j, k)\n  // applied on the patient position, reorders indices\n  // so that Z is the slice direction\n  const invOrientation = orientation.getInverse();\n  let origin1 = invOrientation.multiplyVector3D(origins[0]);\n  let origin2 = invOrientation.multiplyVector3D(origins[1]);\n  let sliceSpacing = Math.abs(origin1.getZ() - origin2.getZ());\n  const deltas = [];\n  for (let i = 0; i < origins.length - 1; ++i) {\n    origin1 = invOrientation.multiplyVector3D(origins[i]);\n    origin2 = invOrientation.multiplyVector3D(origins[i + 1]);\n    const diff = Math.abs(origin1.getZ() - origin2.getZ());\n    if (diff === 0) {\n      throw new Error('Zero slice spacing.' +\n        origin1.toString() + ' ' + origin2.toString());\n    }\n    // keep smallest\n    if (diff < sliceSpacing) {\n      sliceSpacing = diff;\n    }\n    if (withCheck) {\n      if (!isSimilar(sliceSpacing, diff, BIG_EPSILON)) {\n        deltas.push(Math.abs(sliceSpacing - diff));\n      }\n    }\n  }\n  // warn if non constant\n  if (withCheck && deltas.length !== 0) {\n    const sumReducer = function (sum, value) {\n      return sum + value;\n    };\n    const mean = deltas.reduce(sumReducer) / deltas.length;\n    if (mean > 1e-4) {\n      logger.warn('Varying slice spacing, mean delta: ' +\n        mean.toFixed(3) + ' (' + deltas.length + ' case(s))');\n    }\n  }\n\n  return sliceSpacing;\n}\n","import {Index} from '../math/index';\nimport {Point3D} from '../math/point';\nimport {logger} from '../utils/logger';\nimport {getTypedArray} from '../dicom/dicomParser';\nimport {ListenerHandler} from '../utils/listen';\nimport {colourRange} from './iterator';\nimport {RescaleSlopeAndIntercept} from './rsi';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Geometry} from './geometry';\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the slice index of an input slice into a volume geometry.\n *\n * @param {Geometry} volumeGeometry The volume geometry.\n * @param {Geometry} sliceGeometry The slice geometry.\n * @returns {Index} The index of the slice in the volume geomtry.\n */\nfunction getSliceIndex(volumeGeometry, sliceGeometry) {\n  // possible time\n  const timeId = sliceGeometry.getInitialTime();\n  // index values\n  const values = [];\n  // x, y\n  values.push(0);\n  values.push(0);\n  // z\n  values.push(volumeGeometry.getSliceIndex(sliceGeometry.getOrigin(), timeId));\n  // time\n  if (typeof timeId !== 'undefined') {\n    values.push(timeId);\n  }\n  // return index\n  return new Index(values);\n}\n\n/**\n * Image class.\n * Usable once created, optional are:\n * - rescale slope and intercept (default 1:0),\n * - photometric interpretation (default MONOCHROME2),\n * - planar configuration (default RGBRGB...).\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // setup the dicom parser\n *   const dicomParser = new dwv.DicomParser();\n *   // parse the buffer\n *   dicomParser.parse(event.target.response);\n *   // create the image\n *   const imageFactory = new dwv.ImageFactory();\n *   // inputs are dicom tags and buffer\n *   const image = imageFactory.create(\n *     dicomParser.getDicomElements(),\n *     dicomParser.getDicomElements()['7FE00010'].value[0]\n *   );\n *   // result div\n *   const div = document.getElementById('dwv');\n *   // display the image size\n *   const size = image.getGeometry().getSize();\n *   div.appendChild(document.createTextNode(\n *     'Size: ' + size.toString() +\n *     ' (should be 256,256,1)'));\n *   // break line\n *   div.appendChild(document.createElement('br'));\n *   // display a pixel value\n *   div.appendChild(document.createTextNode(\n *     'Pixel @ [128,40,0]: ' +\n *     image.getRescaledValue(128,40,0) +\n *     ' (should be 101)'));\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class Image {\n\n  /**\n   * Data geometry.\n   *\n   * @type {Geometry}\n   */\n  #geometry;\n\n  /**\n   * List of compatible typed arrays.\n   *\n   * @typedef {(\n   *   Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array\n   * )} TypedArray\n   */\n\n  /**\n   * Data buffer.\n   *\n   * @type {TypedArray}\n   */\n  #buffer;\n\n  /**\n   * Image UIDs.\n   *\n   * @type {Array}\n   */\n  #imageUids;\n\n  /**\n   * Constant rescale slope and intercept (default).\n   *\n   * @type {object}\n   */\n  #rsi = new RescaleSlopeAndIntercept(1, 0);\n\n  /**\n   * Varying rescale slope and intercept.\n   *\n   * @type {Array}\n   */\n  #rsis = null;\n\n  /**\n   * Flag to know if the RSIs are all identity (1,0).\n   *\n   * @type {boolean}\n   */\n  #isIdentityRSI = true;\n\n  /**\n   * Flag to know if the RSIs are all equals.\n   *\n   * @type {boolean}\n   */\n  #isConstantRSI = true;\n\n  /**\n   * Photometric interpretation (MONOCHROME, RGB...).\n   *\n   * @type {string}\n   */\n  #photometricInterpretation = 'MONOCHROME2';\n\n  /**\n   * Planar configuration for RGB data (0:RGBRGBRGBRGB... or\n   *   1:RRR...GGG...BBB...).\n   *\n   * @type {number}\n   */\n  #planarConfiguration = 0;\n\n  /**\n   * Number of components.\n   *\n   * @type {number}\n   */\n  #numberOfComponents;\n\n  /**\n   * Meta information.\n   *\n   * @type {object}\n   */\n  #meta = {};\n\n  /**\n   * Data range.\n   *\n   * @type {object}\n   */\n  #dataRange = null;\n\n  /**\n   * Rescaled data range.\n   *\n   * @type {object}\n   */\n  #rescaledDataRange = null;\n\n  /**\n   * Histogram.\n   *\n   * @type {Array}\n   */\n  #histogram = null;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {Geometry} geometry The geometry of the image.\n   * @param {TypedArray} buffer The image data as a one dimensional buffer.\n   * @param {Array} [imageUids] An array of Uids indexed to slice number.\n   */\n  constructor(geometry, buffer, imageUids) {\n    this.#geometry = geometry;\n    this.#buffer = buffer;\n    this.#imageUids = imageUids;\n\n    this.#numberOfComponents = this.#buffer.length / (\n      this.#geometry.getSize().getTotalSize());\n  }\n\n  /**\n   * Get the image UID at a given index.\n   *\n   * @param {Index} [index] The index at which to get the id.\n   * @returns {string} The UID.\n   */\n  getImageUid(index) {\n    let uid = this.#imageUids[0];\n    if (this.#imageUids.length !== 1 && typeof index !== 'undefined') {\n      uid = this.#imageUids[this.getSecondaryOffset(index)];\n    }\n    return uid;\n  }\n\n  /**\n   * Get the geometry of the image.\n   *\n   * @returns {Geometry} The geometry.\n   */\n  getGeometry() {\n    return this.#geometry;\n  }\n\n  /**\n   * Get the data buffer of the image.\n   *\n   * @todo dangerous...\n   * @returns {TypedArray} The data buffer of the image.\n   */\n  getBuffer() {\n    return this.#buffer;\n  }\n\n  /**\n   * Can the image values be quantified?\n   *\n   * @returns {boolean} True if only one component.\n   */\n  canQuantify() {\n    return this.getNumberOfComponents() === 1;\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if the data is monochrome.\n   */\n  canWindowLevel() {\n    return this.getPhotometricInterpretation()\n      .match(/MONOCHROME/) !== null;\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @param {Matrix33} viewOrientation The view orientation.\n   * @returns {boolean} True if the data has a third dimension greater than one\n   *   after applying the view orientation.\n   */\n  canScroll(viewOrientation) {\n    const size = this.getGeometry().getSize();\n    // also check the numberOfFiles in case we are in the middle of a load\n    let nFiles = 1;\n    if (typeof this.#meta.numberOfFiles !== 'undefined') {\n      nFiles = this.#meta.numberOfFiles;\n    }\n    return size.canScroll(viewOrientation) || nFiles !== 1;\n  }\n\n  /**\n   * Get the secondary offset max.\n   *\n   * @returns {number} The maximum offset.\n   */\n  #getSecondaryOffsetMax() {\n    return this.#geometry.getSize().getTotalSize(2);\n  }\n\n  /**\n   * Get the secondary offset: an offset that takes into account\n   *   the slice and above dimension numbers.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The offset.\n   */\n  getSecondaryOffset(index) {\n    return this.#geometry.getSize().indexToOffset(index, 2);\n  }\n\n  /**\n   * Get the rescale slope and intercept.\n   *\n   * @param {Index} [index] The index (only needed for non constant rsi).\n   * @returns {object} The rescale slope and intercept.\n   */\n  getRescaleSlopeAndIntercept(index) {\n    let res = this.#rsi;\n    if (!this.isConstantRSI()) {\n      if (typeof index === 'undefined') {\n        throw new Error('Cannot get non constant RSI with empty slice index.');\n      }\n      const offset = this.getSecondaryOffset(index);\n      if (typeof this.#rsis[offset] !== 'undefined') {\n        res = this.#rsis[offset];\n      } else {\n        logger.warn('undefined non constant rsi at ' + offset);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the rsi at a specified (secondary) offset.\n   *\n   * @param {number} offset The desired (secondary) offset.\n   * @returns {object} The coresponding rsi.\n   */\n  #getRescaleSlopeAndInterceptAtOffset(offset) {\n    return this.#rsis[offset];\n  }\n\n  /**\n   * Set the rescale slope and intercept.\n   *\n   * @param {object} inRsi The input rescale slope and intercept.\n   * @param {number} [offset] The rsi offset (only needed for non constant rsi).\n   */\n  setRescaleSlopeAndIntercept(inRsi, offset) {\n    // update identity flag\n    this.#isIdentityRSI = this.#isIdentityRSI && inRsi.isID();\n    // update constant flag\n    if (!this.#isConstantRSI) {\n      if (typeof offset === 'undefined') {\n        throw new Error(\n          'Cannot store non constant RSI with empty slice index.');\n      }\n      this.#rsis.splice(offset, 0, inRsi);\n    } else {\n      if (!this.#rsi.equals(inRsi)) {\n        if (typeof offset === 'undefined') {\n          // no slice index, replace existing\n          this.#rsi = inRsi;\n        } else {\n          // first non constant rsi\n          this.#isConstantRSI = false;\n          // switch to non constant mode\n          this.#rsis = [];\n          // initialise RSIs\n          for (let i = 0, leni = this.#getSecondaryOffsetMax(); i < leni; ++i) {\n            this.#rsis.push(i);\n          }\n          // store\n          this.#rsi = null;\n          this.#rsis.splice(offset, 0, inRsi);\n        }\n      }\n    }\n  }\n\n  /**\n   * Are all the RSIs identity (1,0).\n   *\n   * @returns {boolean} True if they are.\n   */\n  isIdentityRSI() {\n    return this.#isIdentityRSI;\n  }\n\n  /**\n   * Are all the RSIs equal.\n   *\n   * @returns {boolean} True if they are.\n   */\n  isConstantRSI() {\n    return this.#isConstantRSI;\n  }\n\n  /**\n   * Get the photometricInterpretation of the image.\n   *\n   * @returns {string} The photometricInterpretation of the image.\n   */\n  getPhotometricInterpretation() {\n    return this.#photometricInterpretation;\n  }\n\n  /**\n   * Set the photometricInterpretation of the image.\n   *\n   * @param {string} interp The photometricInterpretation of the image.\n   */\n  setPhotometricInterpretation(interp) {\n    this.#photometricInterpretation = interp;\n  }\n\n  /**\n   * Get the planarConfiguration of the image.\n   *\n   * @returns {number} The planarConfiguration of the image.\n   */\n  getPlanarConfiguration() {\n    return this.#planarConfiguration;\n  }\n\n  /**\n   * Set the planarConfiguration of the image.\n   *\n   * @param {number} config The planarConfiguration of the image.\n   */\n  setPlanarConfiguration(config) {\n    this.#planarConfiguration = config;\n  }\n\n  /**\n   * Get the numberOfComponents of the image.\n   *\n   * @returns {number} The numberOfComponents of the image.\n   */\n  getNumberOfComponents() {\n    return this.#numberOfComponents;\n  }\n\n  /**\n   * Get the meta information of the image.\n   *\n   * @returns {object} The meta information of the image.\n   */\n  getMeta() {\n    return this.#meta;\n  }\n\n  /**\n   * Set the meta information of the image.\n   *\n   * @param {object} rhs The meta information of the image.\n   */\n  setMeta(rhs) {\n    this.#meta = rhs;\n  }\n\n  /**\n   * Get value at offset. Warning: No size check...\n   *\n   * @param {number} offset The desired offset.\n   * @returns {number} The value at offset.\n   */\n  getValueAtOffset(offset) {\n    return this.#buffer[offset];\n  }\n\n  /**\n   * Get the offsets where the buffer equals the input value.\n   * Loops through the whole volume, can get long for big data...\n   *\n   * @param {number|object} value The value to check.\n   * @returns {Array} The list of offsets.\n   */\n  getOffsets(value) {\n    // value to array\n    if (this.#numberOfComponents === 1) {\n      value = [value];\n    } else if (this.#numberOfComponents === 3 &&\n      typeof value.r !== 'undefined') {\n      value = [value.r, value.g, value.b];\n    }\n    // main loop\n    const offsets = [];\n    let equal;\n    for (let i = 0; i < this.#buffer.length; i = i + this.#numberOfComponents) {\n      equal = true;\n      for (let j = 0; j < this.#numberOfComponents; ++j) {\n        if (this.#buffer[i + j] !== value[j]) {\n          equal = false;\n          break;\n        }\n      }\n      if (equal) {\n        offsets.push(i);\n      }\n    }\n    return offsets;\n  }\n\n  /**\n   * Check if the input values are in the buffer.\n   * Could loop through the whole volume, can get long for big data...\n   *\n   * @param {Array} values The values to check.\n   * @returns {Array} A list of booleans for each input value,\n   *   set to true if the value is present in the buffer.\n   */\n  hasValues(values) {\n    // check input\n    if (typeof values === 'undefined' ||\n      values.length === 0) {\n      return [];\n    }\n    // final array value\n    const finalValues = [];\n    for (let v1 = 0; v1 < values.length; ++v1) {\n      if (this.#numberOfComponents === 1) {\n        finalValues.push([values[v1]]);\n      } else if (this.#numberOfComponents === 3) {\n        finalValues.push([\n          values[v1].r,\n          values[v1].g,\n          values[v1].b\n        ]);\n      }\n    }\n    // find callback\n    let equalFunc;\n    if (this.#numberOfComponents === 1) {\n      equalFunc = function (a, b) {\n        return a[0] === b[0];\n      };\n    } else if (this.#numberOfComponents === 3) {\n      equalFunc = function (a, b) {\n        return a[0] === b[0] &&\n          a[1] === b[1] &&\n          a[2] === b[2];\n      };\n    }\n    const getEqualCallback = function (value) {\n      return function (item) {\n        return equalFunc(item, value);\n      };\n    };\n    // main loop\n    const res = new Array(values.length);\n    res.fill(false);\n    const valuesToFind = finalValues.slice();\n    let equal;\n    let indicesToRemove;\n    for (let i = 0, leni = this.#buffer.length;\n      i < leni; i = i + this.#numberOfComponents) {\n      indicesToRemove = [];\n      for (let v = 0; v < valuesToFind.length; ++v) {\n        equal = true;\n        // check value(s)\n        for (let j = 0; j < this.#numberOfComponents; ++j) {\n          if (this.#buffer[i + j] !== valuesToFind[v][j]) {\n            equal = false;\n            break;\n          }\n        }\n        // if found, store answer and add to indices to remove\n        if (equal) {\n          const valIndex = finalValues.findIndex(\n            getEqualCallback(valuesToFind[v]));\n          res[valIndex] = true;\n          indicesToRemove.push(v);\n        }\n      }\n      // remove found values\n      for (let r = 0; r < indicesToRemove.length; ++r) {\n        valuesToFind.splice(indicesToRemove[r], 1);\n      }\n      // exit if no values to find\n      if (valuesToFind.length === 0) {\n        break;\n      }\n    }\n    // return\n    return res;\n  }\n\n  /**\n   * Clone the image.\n   *\n   * @returns {Image} A clone of this image.\n   */\n  clone() {\n    // clone the image buffer\n    const clonedBuffer = this.#buffer.slice(0);\n    // create the image copy\n    const copy = new Image(this.getGeometry(), clonedBuffer, this.#imageUids);\n    // copy the RSI(s)\n    if (this.isConstantRSI()) {\n      copy.setRescaleSlopeAndIntercept(this.getRescaleSlopeAndIntercept());\n    } else {\n      for (let i = 0; i < this.#getSecondaryOffsetMax(); ++i) {\n        copy.setRescaleSlopeAndIntercept(\n          this.#getRescaleSlopeAndInterceptAtOffset(i), i);\n      }\n    }\n    // copy extras\n    copy.setPhotometricInterpretation(this.getPhotometricInterpretation());\n    copy.setPlanarConfiguration(this.getPlanarConfiguration());\n    copy.setMeta(this.getMeta());\n    // return\n    return copy;\n  }\n\n  /**\n   * Re-allocate buffer memory to an input size.\n   *\n   * @param {number} size The new size.\n   */\n  #realloc(size) {\n    // save buffer\n    let tmpBuffer = this.#buffer;\n    // create new\n    this.#buffer = getTypedArray(\n      this.#buffer.BYTES_PER_ELEMENT * 8,\n      this.#meta.IsSigned ? 1 : 0,\n      size);\n    if (this.#buffer === null) {\n      throw new Error('Cannot reallocate data for image.');\n    }\n    // put old in new\n    this.#buffer.set(tmpBuffer);\n    // clean\n    tmpBuffer = null;\n  }\n\n  /**\n   * Append a slice to the image.\n   *\n   * @param {Image} rhs The slice to append.\n   */\n  appendSlice(rhs) {\n    // check input\n    if (rhs === null) {\n      throw new Error('Cannot append null slice');\n    }\n    const rhsSize = rhs.getGeometry().getSize();\n    let size = this.#geometry.getSize();\n    if (rhsSize.get(2) !== 1) {\n      throw new Error('Cannot append more than one slice');\n    }\n    if (size.get(0) !== rhsSize.get(0)) {\n      throw new Error('Cannot append a slice with different number of columns');\n    }\n    if (size.get(1) !== rhsSize.get(1)) {\n      throw new Error('Cannot append a slice with different number of rows');\n    }\n    if (!this.#geometry.getOrientation().equals(\n      rhs.getGeometry().getOrientation(), 0.0001)) {\n      throw new Error('Cannot append a slice with different orientation');\n    }\n    if (this.#photometricInterpretation !==\n      rhs.getPhotometricInterpretation()) {\n      throw new Error(\n        'Cannot append a slice with different photometric interpretation');\n    }\n    // all meta should be equal\n    for (const key in this.#meta) {\n      if (key === 'windowPresets' || key === 'numberOfFiles' ||\n        key === 'custom') {\n        continue;\n      }\n      if (this.#meta[key] !== rhs.getMeta()[key]) {\n        throw new Error('Cannot append a slice with different ' + key);\n      }\n    }\n\n    // possible time\n    const timeId = rhs.getGeometry().getInitialTime();\n\n    // append frame if needed\n    let isNewFrame = false;\n    if (typeof timeId !== 'undefined' &&\n      !this.#geometry.hasSlicesAtTime(timeId)) {\n      // update grometry\n      this.appendFrame(timeId, rhs.getGeometry().getOrigin());\n      // update size\n      size = this.#geometry.getSize();\n      // update flag\n      isNewFrame = true;\n    }\n\n    // get slice index\n    const index = getSliceIndex(this.#geometry, rhs.getGeometry());\n\n    // calculate slice size\n    const sliceSize = this.#numberOfComponents * size.getDimSize(2);\n\n    // create full buffer if not done yet\n    if (typeof this.#meta.numberOfFiles === 'undefined') {\n      throw new Error('Missing number of files for buffer manipulation.');\n    }\n    const fullBufferSize = sliceSize * this.#meta.numberOfFiles;\n    if (this.#buffer.length !== fullBufferSize) {\n      this.#realloc(fullBufferSize);\n    }\n\n    // slice index\n    const sliceIndex = index.get(2);\n\n    // slice index including possible 4D\n    let fullSliceIndex = sliceIndex;\n    if (typeof timeId !== 'undefined') {\n      fullSliceIndex +=\n        this.#geometry.getCurrentNumberOfSlicesBeforeTime(timeId);\n    }\n    // offset of the input slice\n    const indexOffset = fullSliceIndex * sliceSize;\n    const maxOffset =\n      this.#geometry.getCurrentTotalNumberOfSlices() * sliceSize;\n    // move content if needed\n    if (indexOffset < maxOffset) {\n      this.#buffer.set(\n        this.#buffer.subarray(indexOffset, maxOffset),\n        indexOffset + sliceSize\n      );\n    }\n    // add new slice content\n    this.#buffer.set(rhs.getBuffer(), indexOffset);\n\n    // update geometry\n    if (!isNewFrame) {\n      this.#geometry.appendOrigin(\n        rhs.getGeometry().getOrigin(), sliceIndex, timeId);\n    }\n    // update rsi\n    // (rhs should just have one rsi)\n    this.setRescaleSlopeAndIntercept(\n      rhs.getRescaleSlopeAndIntercept(), fullSliceIndex);\n\n    // current number of images\n    const numberOfImages = this.#imageUids.length;\n\n    // insert sop instance UIDs\n    this.#imageUids.splice(fullSliceIndex, 0, rhs.getImageUid());\n\n    // update window presets\n    if (typeof this.#meta.windowPresets !== 'undefined') {\n      const windowPresets = this.#meta.windowPresets;\n      const rhsPresets = rhs.getMeta().windowPresets;\n      const keys = Object.keys(rhsPresets);\n      let pkey = null;\n      for (let i = 0; i < keys.length; ++i) {\n        pkey = keys[i];\n        const rhsPreset = rhsPresets[pkey];\n        const windowPreset = windowPresets[pkey];\n        if (typeof windowPreset !== 'undefined') {\n          // if not set or false, check perslice\n          if (typeof windowPreset.perslice === 'undefined' ||\n            windowPreset.perslice === false) {\n            // if different preset.wl, mark it as perslice\n            if (!windowPreset.wl[0].equals(rhsPreset.wl[0])) {\n              windowPreset.perslice = true;\n              // fill wl array with copy of wl[0]\n              // (loop on number of images minus the existing one)\n              for (let j = 0; j < numberOfImages - 1; ++j) {\n                windowPreset.wl.push(windowPreset.wl[0]);\n              }\n            }\n          }\n          // store (first) rhs preset.wl if needed\n          if (typeof windowPreset.perslice !== 'undefined' &&\n            windowPreset.perslice === true) {\n            windowPresets[pkey].wl.splice(\n              fullSliceIndex, 0, rhsPreset.wl[0]);\n          }\n        } else {\n          // if not defined (it should be), store all\n          windowPresets[pkey] = rhsPresets[pkey];\n        }\n      }\n    }\n  }\n\n  /**\n   * Append a frame buffer to the image.\n   *\n   * @param {object} frameBuffer The frame buffer to append.\n   * @param {number} frameIndex The frame index.\n   */\n  appendFrameBuffer(frameBuffer, frameIndex) {\n    // create full buffer if not done yet\n    const size = this.#geometry.getSize();\n    const frameSize = this.#numberOfComponents * size.getDimSize(2);\n    if (typeof this.#meta.numberOfFiles === 'undefined') {\n      throw new Error('Missing number of files for frame buffer manipulation.');\n    }\n    const fullBufferSize = frameSize * this.#meta.numberOfFiles;\n    if (this.#buffer.length !== fullBufferSize) {\n      this.#realloc(fullBufferSize);\n    }\n    // check index\n    if (frameIndex >= this.#meta.numberOfFiles) {\n      logger.warn('Ignoring frame at index ' + frameIndex +\n        ' (size: ' + this.#meta.numberOfFiles + ')');\n      return;\n    }\n    // append\n    this.#buffer.set(frameBuffer, frameSize * frameIndex);\n    // update geometry\n    this.appendFrame(frameIndex, new Point3D(0, 0, 0));\n  }\n\n  /**\n   * Append a frame to the image.\n   *\n   * @param {number} time The frame time value.\n   * @param {Point3D} origin The origin of the frame.\n   */\n  appendFrame(time, origin) {\n    this.#geometry.appendFrame(origin, time);\n    this.#fireEvent({type: 'appendframe'});\n    // memory will be updated at the first appendSlice or appendFrameBuffer\n  }\n\n  /**\n   * Get the data range.\n   *\n   * @returns {object} The data range.\n   */\n  getDataRange() {\n    if (!this.#dataRange) {\n      this.#dataRange = this.calculateDataRange();\n    }\n    return this.#dataRange;\n  }\n\n  /**\n   * Get the rescaled data range.\n   *\n   * @returns {object} The rescaled data range.\n   */\n  getRescaledDataRange() {\n    if (!this.#rescaledDataRange) {\n      this.#rescaledDataRange = this.calculateRescaledDataRange();\n    }\n    return this.#rescaledDataRange;\n  }\n\n  /**\n   * Get the histogram.\n   *\n   * @returns {Array} The histogram.\n   */\n  getHistogram() {\n    if (!this.#histogram) {\n      const res = this.calculateHistogram();\n      this.#dataRange = res.dataRange;\n      this.#rescaledDataRange = res.rescaledDataRange;\n      this.#histogram = res.histogram;\n    }\n    return this.#histogram;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // ****************************************\n  // image data modifiers... carefull...\n  // ****************************************\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {Array} offsets List of offsets where to set the data.\n   * @param {object} value The value to set at the given offsets.\n   * @fires Image#imagechange\n   */\n  setAtOffsets(offsets, value) {\n    let offset;\n    for (let i = 0, leni = offsets.length; i < leni; ++i) {\n      offset = offsets[i];\n      this.#buffer[offset] = value.r;\n      this.#buffer[offset + 1] = value.g;\n      this.#buffer[offset + 2] = value.b;\n    }\n    // fire imagechange\n    this.#fireEvent({type: 'imagechange'});\n  }\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {Array} offsetsLists List of offset lists where to set the data.\n   * @param {object} value The value to set at the given offsets.\n   * @returns {Array} A list of objects representing the original values before\n   *  replacing them.\n   * @fires Image#imagechange\n   */\n  setAtOffsetsAndGetOriginals(offsetsLists, value) {\n    const originalColoursLists = [];\n\n    // update and store\n    for (let j = 0; j < offsetsLists.length; ++j) {\n      const offsets = offsetsLists[j];\n      // first colour\n      let offset = offsets[0] * 3;\n      let previousColour = {\n        r: this.#buffer[offset],\n        g: this.#buffer[offset + 1],\n        b: this.#buffer[offset + 2]\n      };\n      // original value storage\n      const originalColours = [];\n      originalColours.push({\n        index: 0,\n        colour: previousColour\n      });\n      for (let i = 0; i < offsets.length; ++i) {\n        offset = offsets[i] * 3;\n        const currentColour = {\n          r: this.#buffer[offset],\n          g: this.#buffer[offset + 1],\n          b: this.#buffer[offset + 2]\n        };\n        // check if new colour\n        if (previousColour.r !== currentColour.r ||\n          previousColour.g !== currentColour.g ||\n          previousColour.b !== currentColour.b) {\n          // store new colour\n          originalColours.push({\n            index: i,\n            colour: currentColour\n          });\n          previousColour = currentColour;\n        }\n        // write update colour\n        this.#buffer[offset] = value.r;\n        this.#buffer[offset + 1] = value.g;\n        this.#buffer[offset + 2] = value.b;\n      }\n      originalColoursLists.push(originalColours);\n    }\n    // fire imagechange\n    this.#fireEvent({type: 'imagechange'});\n    return originalColoursLists;\n  }\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {Array} offsetsLists List of offset lists where to set the data.\n   * @param {object|Array} value The value to set at the given offsets.\n   * @fires Image#imagechange\n   */\n  setAtOffsetsWithIterator(offsetsLists, value) {\n    for (let j = 0; j < offsetsLists.length; ++j) {\n      const offsets = offsetsLists[j];\n      let iterator;\n      if (typeof value !== 'undefined' &&\n        typeof value.r !== 'undefined') {\n        // input value is a simple color\n        iterator = colourRange(\n          [{index: 0, colour: value}], offsets.length);\n      } else {\n        // input value is a list of iterators\n        // created by setAtOffsetsAndGetOriginals\n        iterator = colourRange(\n          value[j], offsets.length);\n      }\n\n      // set values\n      let ival = iterator.next();\n      while (!ival.done) {\n        const offset = offsets[ival.index] * 3;\n        this.#buffer[offset] = ival.value.r;\n        this.#buffer[offset + 1] = ival.value.g;\n        this.#buffer[offset + 2] = ival.value.b;\n        ival = iterator.next();\n      }\n    }\n    /**\n     * Image change event.\n     *\n     * @event Image#imagechange\n     * @type {object}\n     */\n    this.#fireEvent({type: 'imagechange'});\n  }\n\n  /**\n   * Get the value of the image at a specific coordinate.\n   *\n   * @param {number} i The X index.\n   * @param {number} j The Y index.\n   * @param {number} k The Z index.\n   * @param {number} f The frame number.\n   * @returns {number} The value at the desired position.\n   * Warning: No size check...\n   */\n  getValue(i, j, k, f) {\n    const frame = (f || 0);\n    const index = new Index([i, j, k, frame]);\n    return this.getValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index));\n  }\n\n  /**\n   * Get the value of the image at a specific index.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The value at the desired position.\n   * Warning: No size check...\n   */\n  getValueAtIndex(index) {\n    return this.getValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index));\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific position.\n   *\n   * @param {number} i The X index.\n   * @param {number} j The Y index.\n   * @param {number} k The Z index.\n   * @param {number} f The frame number.\n   * @returns {number} The rescaled value at the desired position.\n   * Warning: No size check...\n   */\n  getRescaledValue(i, j, k, f) {\n    if (typeof f === 'undefined') {\n      f = 0;\n    }\n    let val = this.getValue(i, j, k, f);\n    if (!this.isIdentityRSI()) {\n      if (this.isConstantRSI()) {\n        val = this.getRescaleSlopeAndIntercept().apply(val);\n      } else {\n        const values = [i, j, k, f];\n        const index = new Index(values);\n        val = this.getRescaleSlopeAndIntercept(index).apply(val);\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific index.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The rescaled value at the desired position.\n   * Warning: No size check...\n   */\n  getRescaledValueAtIndex(index) {\n    return this.getRescaledValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index)\n    );\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific offset.\n   *\n   * @param {number} offset The desired offset.\n   * @returns {number} The rescaled value at the desired offset.\n   * Warning: No size check...\n   */\n  getRescaledValueAtOffset(offset) {\n    let val = this.getValueAtOffset(offset);\n    if (!this.isIdentityRSI()) {\n      if (this.isConstantRSI()) {\n        val = this.getRescaleSlopeAndIntercept().apply(val);\n      } else {\n        const index = this.getGeometry().getSize().offsetToIndex(offset);\n        val = this.getRescaleSlopeAndIntercept(index).apply(val);\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Calculate the data range of the image.\n   * WARNING: for speed reasons, only calculated on the first frame...\n   *\n   * @returns {object} The range {min, max}.\n   */\n  calculateDataRange() {\n    let min = this.getValueAtOffset(0);\n    let max = min;\n    let value = 0;\n    const size = this.getGeometry().getSize();\n    let leni = size.getTotalSize();\n    // max to 3D\n    if (size.length() >= 3) {\n      leni = size.getDimSize(3);\n    }\n    for (let i = 0; i < leni; ++i) {\n      value = this.getValueAtOffset(i);\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n    }\n    // return\n    return {min: min, max: max};\n  }\n\n  /**\n   * Calculate the rescaled data range of the image.\n   * WARNING: for speed reasons, only calculated on the first frame...\n   *\n   * @returns {object} The range {min, max}.\n   */\n  calculateRescaledDataRange() {\n    if (this.isIdentityRSI()) {\n      return this.getDataRange();\n    } else if (this.isConstantRSI()) {\n      const range = this.getDataRange();\n      const resmin = this.getRescaleSlopeAndIntercept().apply(range.min);\n      const resmax = this.getRescaleSlopeAndIntercept().apply(range.max);\n      return {\n        min: ((resmin < resmax) ? resmin : resmax),\n        max: ((resmin > resmax) ? resmin : resmax)\n      };\n    } else {\n      let rmin = this.getRescaledValueAtOffset(0);\n      let rmax = rmin;\n      let rvalue = 0;\n      const size = this.getGeometry().getSize();\n      let leni = size.getTotalSize();\n      // max to 3D\n      if (size.length() === 3) {\n        leni = size.getDimSize(3);\n      }\n      for (let i = 0; i < leni; ++i) {\n        rvalue = this.getRescaledValueAtOffset(i);\n        if (rvalue > rmax) {\n          rmax = rvalue;\n        }\n        if (rvalue < rmin) {\n          rmin = rvalue;\n        }\n      }\n      // return\n      return {min: rmin, max: rmax};\n    }\n  }\n\n  /**\n   * Calculate the histogram of the image.\n   *\n   * @returns {object} The histogram, data range and rescaled data range.\n   */\n  calculateHistogram() {\n    const size = this.getGeometry().getSize();\n    const histo = [];\n    let min = this.getValueAtOffset(0);\n    let max = min;\n    let value = 0;\n    let rmin = this.getRescaledValueAtOffset(0);\n    let rmax = rmin;\n    let rvalue = 0;\n    for (let i = 0, leni = size.getTotalSize(); i < leni; ++i) {\n      value = this.getValueAtOffset(i);\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n      rvalue = this.getRescaledValueAtOffset(i);\n      if (rvalue > rmax) {\n        rmax = rvalue;\n      }\n      if (rvalue < rmin) {\n        rmin = rvalue;\n      }\n      histo[rvalue] = (histo[rvalue] || 0) + 1;\n    }\n    // set data range\n    const dataRange = {min: min, max: max};\n    const rescaledDataRange = {min: rmin, max: rmax};\n    // generate data for plotting\n    const histogram = [];\n    for (let b = rmin; b <= rmax; ++b) {\n      histogram.push([b, (histo[b] || 0)]);\n    }\n    // return\n    return {\n      dataRange: dataRange,\n      rescaledDataRange: rescaledDataRange,\n      histogram: histogram\n    };\n  }\n\n  /**\n   * Convolute the image with a given 2D kernel.\n   *\n   * Note: Uses raw buffer values.\n   *\n   * @param {Array} weights The weights of the 2D kernel as a 3x3 matrix.\n   * @returns {Image} The convoluted image.\n   */\n  convolute2D(weights) {\n    if (weights.length !== 9) {\n      throw new Error(\n        'The convolution matrix does not have a length of 9; it has ' +\n        weights.length);\n    }\n\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n\n    const imgSize = this.getGeometry().getSize();\n    const dimOffset = imgSize.getDimSize(2) * this.getNumberOfComponents();\n    for (let k = 0; k < imgSize.get(2); ++k) {\n      this.convoluteBuffer(weights, newBuffer, k * dimOffset);\n    }\n\n    return newImage;\n  }\n\n  /**\n   * Convolute an image buffer with a given 2D kernel.\n   *\n   * Note: Uses raw buffer values.\n   *\n   * @param {Array} weights The weights of the 2D kernel as a 3x3 matrix.\n   * @param {TypedArray} buffer The buffer to convolute.\n   * @param {number} startOffset The index to start at.\n   */\n  convoluteBuffer(\n    weights, buffer, startOffset) {\n    const imgSize = this.getGeometry().getSize();\n    const ncols = imgSize.get(0);\n    const nrows = imgSize.get(1);\n    const ncomp = this.getNumberOfComponents();\n\n    // number of component and planar configuration vars\n    let factor = 1;\n    let componentOffset = 1;\n    if (ncomp === 3) {\n      if (this.getPlanarConfiguration() === 0) {\n        factor = 3;\n      } else {\n        componentOffset = imgSize.getDimSize(2);\n      }\n    }\n\n    // allow special indent for matrices\n    /*jshint indent:false */\n\n    // default weight offset matrix\n    const wOff = [];\n    wOff[0] = (-ncols - 1) * factor;\n    wOff[1] = (-ncols) * factor;\n    wOff[2] = (-ncols + 1) * factor;\n    wOff[3] = -factor;\n    wOff[4] = 0;\n    wOff[5] = 1 * factor;\n    wOff[6] = (ncols - 1) * factor;\n    wOff[7] = (ncols) * factor;\n    wOff[8] = (ncols + 1) * factor;\n\n    // border weight offset matrices\n    // borders are extended (see http://en.wikipedia.org/wiki/Kernel_%28image_processing%29)\n\n    // i=0, j=0\n    const wOff00 = [];\n    wOff00[0] = wOff[4]; wOff00[1] = wOff[4]; wOff00[2] = wOff[5];\n    wOff00[3] = wOff[4]; wOff00[4] = wOff[4]; wOff00[5] = wOff[5];\n    wOff00[6] = wOff[7]; wOff00[7] = wOff[7]; wOff00[8] = wOff[8];\n    // i=0, j=*\n    const wOff0x = [];\n    wOff0x[0] = wOff[1]; wOff0x[1] = wOff[1]; wOff0x[2] = wOff[2];\n    wOff0x[3] = wOff[4]; wOff0x[4] = wOff[4]; wOff0x[5] = wOff[5];\n    wOff0x[6] = wOff[7]; wOff0x[7] = wOff[7]; wOff0x[8] = wOff[8];\n    // i=0, j=nrows\n    const wOff0n = [];\n    wOff0n[0] = wOff[1]; wOff0n[1] = wOff[1]; wOff0n[2] = wOff[2];\n    wOff0n[3] = wOff[4]; wOff0n[4] = wOff[4]; wOff0n[5] = wOff[5];\n    wOff0n[6] = wOff[4]; wOff0n[7] = wOff[4]; wOff0n[8] = wOff[5];\n\n    // i=*, j=0\n    const wOffx0 = [];\n    wOffx0[0] = wOff[3]; wOffx0[1] = wOff[4]; wOffx0[2] = wOff[5];\n    wOffx0[3] = wOff[3]; wOffx0[4] = wOff[4]; wOffx0[5] = wOff[5];\n    wOffx0[6] = wOff[6]; wOffx0[7] = wOff[7]; wOffx0[8] = wOff[8];\n    // i=*, j=* -> wOff\n    // i=*, j=nrows\n    const wOffxn = [];\n    wOffxn[0] = wOff[0]; wOffxn[1] = wOff[1]; wOffxn[2] = wOff[2];\n    wOffxn[3] = wOff[3]; wOffxn[4] = wOff[4]; wOffxn[5] = wOff[5];\n    wOffxn[6] = wOff[3]; wOffxn[7] = wOff[4]; wOffxn[8] = wOff[5];\n\n    // i=ncols, j=0\n    const wOffn0 = [];\n    wOffn0[0] = wOff[3]; wOffn0[1] = wOff[4]; wOffn0[2] = wOff[4];\n    wOffn0[3] = wOff[3]; wOffn0[4] = wOff[4]; wOffn0[5] = wOff[4];\n    wOffn0[6] = wOff[6]; wOffn0[7] = wOff[7]; wOffn0[8] = wOff[7];\n    // i=ncols, j=*\n    const wOffnx = [];\n    wOffnx[0] = wOff[0]; wOffnx[1] = wOff[1]; wOffnx[2] = wOff[1];\n    wOffnx[3] = wOff[3]; wOffnx[4] = wOff[4]; wOffnx[5] = wOff[4];\n    wOffnx[6] = wOff[6]; wOffnx[7] = wOff[7]; wOffnx[8] = wOff[7];\n    // i=ncols, j=nrows\n    const wOffnn = [];\n    wOffnn[0] = wOff[0]; wOffnn[1] = wOff[1]; wOffnn[2] = wOff[1];\n    wOffnn[3] = wOff[3]; wOffnn[4] = wOff[4]; wOffnn[5] = wOff[4];\n    wOffnn[6] = wOff[3]; wOffnn[7] = wOff[4]; wOffnn[8] = wOff[4];\n\n    // restore indent for rest of method\n    /*jshint indent:4 */\n\n    // loop vars\n    let pixelOffset = startOffset;\n    let newValue = 0;\n    let wOffFinal = [];\n    for (let c = 0; c < ncomp; ++c) {\n      // component offset\n      pixelOffset += c * componentOffset;\n      for (let j = 0; j < nrows; ++j) {\n        for (let i = 0; i < ncols; ++i) {\n          wOffFinal = wOff;\n          // special border cases\n          if (i === 0 && j === 0) {\n            wOffFinal = wOff00;\n          } else if (i === 0 && j === (nrows - 1)) {\n            wOffFinal = wOff0n;\n          } else if (i === (ncols - 1) && j === 0) {\n            wOffFinal = wOffn0;\n          } else if (i === (ncols - 1) && j === (nrows - 1)) {\n            wOffFinal = wOffnn;\n          } else if (i === 0 && j !== (nrows - 1) && j !== 0) {\n            wOffFinal = wOff0x;\n          } else if (i === (ncols - 1) && j !== (nrows - 1) && j !== 0) {\n            wOffFinal = wOffnx;\n          } else if (i !== 0 && i !== (ncols - 1) && j === 0) {\n            wOffFinal = wOffx0;\n          } else if (i !== 0 && i !== (ncols - 1) && j === (nrows - 1)) {\n            wOffFinal = wOffxn;\n          }\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          newValue = 0;\n          for (let wi = 0; wi < 9; ++wi) {\n            newValue += this.getValueAtOffset(\n              pixelOffset + wOffFinal[wi]) * weights[wi];\n          }\n          buffer[pixelOffset] = newValue;\n          // increment pixel offset\n          pixelOffset += factor;\n        }\n      }\n    }\n  }\n\n  /**\n   * Transform an image using a specific operator.\n   * WARNING: no size check!\n   *\n   * @param {Function} operator The operator to use when transforming.\n   * @returns {Image} The transformed image.\n   * Note: Uses the raw buffer values.\n   */\n  transform(operator) {\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n    for (let i = 0, leni = newBuffer.length; i < leni; ++i) {\n      newBuffer[i] = operator(newImage.getValueAtOffset(i));\n    }\n    return newImage;\n  }\n\n  /**\n   * Compose this image with another one and using a specific operator.\n   * WARNING: no size check!\n   *\n   * @param {Image} rhs The image to compose with.\n   * @param {Function} operator The operator to use when composing.\n   * @returns {Image} The composed image.\n   * Note: Uses the raw buffer values.\n   */\n  compose(rhs, operator) {\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n    for (let i = 0, leni = newBuffer.length; i < leni; ++i) {\n      // using the operator on the local buffer, i.e. the\n      // latest (not original) data\n      newBuffer[i] = Math.floor(\n        operator(this.getValueAtOffset(i), rhs.getValueAtOffset(i))\n      );\n    }\n    return newImage;\n  }\n\n} // class Image\n","import {Index} from '../math/index';\nimport {Point2D} from '../math/point';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {Point} from '../math/point';\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get an simple iterator for a given range for a one component data.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} [increment] The increment between indicies (default=1).\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function simpleRange(dataAccessor, start, end, increment) {\n  if (typeof increment === 'undefined') {\n    increment = 1;\n  }\n  let nextIndex = start;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        nextIndex += increment;\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a one component data.\n *\n * Using 'maxIter' and not an 'end' index since it fails in some edge cases\n * (for ex coronal2, ie zxy)\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start Zero-based index at which to start the iteration.\n * @param {number} maxIter The maximum number of iterations.\n * @param {number} increment Increment between indicies.\n * @param {number} blockMaxIter Number of applied increment after which\n *   blockIncrement is applied.\n * @param {number} blockIncrement Increment after blockMaxIter is reached,\n *   the value is from block start to the next block start.\n * @param {boolean} reverse1 If true, loop from end to start.\n *   WARN: don't forget to set the value of start as the last index!\n * @param {boolean} reverse2 If true, loop from block end to block start.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function range(dataAccessor, start, maxIter, increment,\n  blockMaxIter, blockIncrement, reverse1, reverse2) {\n  if (typeof reverse1 === 'undefined') {\n    reverse1 = false;\n  }\n  if (typeof reverse2 === 'undefined') {\n    reverse2 = false;\n  }\n\n  // first index of the iteration\n  let nextIndex = start;\n  // adapt first index and increments to reverse values\n  if (reverse1) {\n    blockIncrement *= -1;\n    if (reverse2) {\n      // start at end of line\n      nextIndex -= (blockMaxIter - 1) * increment;\n    } else {\n      increment *= -1;\n    }\n  } else {\n    if (reverse2) {\n      // start at end of line\n      nextIndex += (blockMaxIter - 1) * increment;\n      increment *= -1;\n    }\n  }\n  const finalBlockIncrement = blockIncrement - blockMaxIter * increment;\n\n  // counters\n  let mainCount = 0;\n  let blockCount = 0;\n  // result\n  return {\n    next: function () {\n      if (mainCount < maxIter) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        nextIndex += increment;\n        ++mainCount;\n        ++blockCount;\n        if (blockCount === blockMaxIter) {\n          blockCount = 0;\n          nextIndex += finalBlockIncrement;\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: nextIndex\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range with bounds (for a one component data).\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} increment The increment between indicies.\n * @param {number} regionSize The size of the region to iterate through.\n * @param {number} regionOffset The offset between regions.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function rangeRegion(\n  dataAccessor, start, end, increment, regionSize, regionOffset) {\n  let nextIndex = start;\n  let regionElementCount = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        regionElementCount += 1;\n        nextIndex += increment;\n        if (regionElementCount === regionSize) {\n          regionElementCount = 0;\n          nextIndex += regionOffset;\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range with bounds (for a one component data).\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} increment The increment between indicies.\n * @param {Array} regions An array of regions: [off0, size, off1].\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function rangeRegions(\n  dataAccessor, start, end, increment, regions) {\n  let nextIndex = start;\n  let regionCount = 0;\n  let regionElementCount = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        regionElementCount += 1;\n        nextIndex += increment;\n        if (regionElementCount === regions[regionCount][1]) {\n          regionElementCount = 0;\n          // off1 of current group\n          nextIndex += regions[regionCount][2];\n          regionCount += 1;\n          // off0 of next group\n          if (regionCount < regions.length) {\n            nextIndex += regions[regionCount][0];\n          }\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a 3 components data.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n *   (end - start) needs to be a multiple of 3...\n * @param {number} increment The increment between indicies (default=1).\n * @param {boolean} isPlanar A flag to know if the data is planar\n *   (RRRR...GGGG...BBBB...) or not (RGBRGBRGBRGB...), defaults to false.\n * @returns {object} A 3 components iterator folowing the iterator and iterable\n *   protocol, the value is an array of size 3 with each component.\n */\nexport function simpleRange3d(\n  dataAccessor, start, end, increment, isPlanar) {\n  if (typeof increment === 'undefined') {\n    increment = 1;\n  }\n  if (typeof isPlanar === 'undefined') {\n    isPlanar = false;\n  }\n  let nextIndex = start;\n  let componentIncrement = 1;\n  if (isPlanar) {\n    componentIncrement = (end - start) / 3;\n  } else {\n    increment *= 3;\n  }\n  let nextIndex1 = nextIndex + componentIncrement;\n  let nextIndex2 = nextIndex + 2 * componentIncrement;\n\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: [\n            dataAccessor(nextIndex),\n            dataAccessor(nextIndex1),\n            dataAccessor(nextIndex2)\n          ],\n          done: false,\n          index: [nextIndex, nextIndex1, nextIndex2]\n        };\n        nextIndex += increment;\n        nextIndex1 += increment;\n        nextIndex2 += increment;\n        return result;\n      }\n      return {\n        done: true,\n        index: [end]\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a 3 components data.\n *\n * Using 'maxIter' and not an 'end' index since it fails in some edge cases\n * (for ex coronal2, ie zxy)\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start Zero-based index at which to start the iteration.\n * @param {number} maxIter The maximum number of iterations.\n * @param {number} increment Increment between indicies.\n * @param {number} blockMaxIter Number of applied increment after which\n *   blockIncrement is applied.\n * @param {number} blockIncrement Increment after blockMaxIter is reached,\n *   the value is from block start to the next block start.\n * @param {boolean} reverse1 If true, loop from end to start.\n *   WARN: don't forget to set the value of start as the last index!\n * @param {boolean} reverse2 If true, loop from block end to block start.\n * @param {boolean} isPlanar A flag to know if the data is planar\n *   (RRRR...GGGG...BBBB...) or not (RGBRGBRGBRGB...), defaults to false.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function range3d(dataAccessor, start, maxIter, increment,\n  blockMaxIter, blockIncrement, reverse1, reverse2, isPlanar) {\n  const iters = [];\n  if (isPlanar) {\n    iters.push(range(\n      dataAccessor, start, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + maxIter * increment, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 2 * maxIter * increment, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n  } else {\n    increment *= 3;\n    blockIncrement *= 3;\n    iters.push(range(\n      dataAccessor, start, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 1, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 2, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n  }\n\n  // result\n  return {\n    next: function () {\n      const r0 = iters[0].next();\n      const r1 = iters[1].next();\n      const r2 = iters[2].next();\n      if (!r0.done) {\n        return {\n          value: [\n            r0.value,\n            r1.value,\n            r2.value\n          ],\n          done: false,\n          index: [\n            r0.index,\n            r1.index,\n            r2.index\n          ]\n        };\n      }\n      return {\n        done: true,\n        index: r2.index\n      };\n    }\n  };\n}\n\n/**\n * Get a list of values for a given iterator.\n *\n * @param {object} iterator The iterator to use to loop through data.\n * @returns {Array} The list of values.\n */\nexport function getIteratorValues(iterator) {\n  const values = [];\n  let ival = iterator.next();\n  while (!ival.done) {\n    values.push(ival.value);\n    ival = iterator.next();\n  }\n  return values;\n}\n\n/**\n * Get a slice index iterator.\n *\n * @param {Image} image The image to parse.\n * @param {Index} position The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Matrix33} viewOrientation The view orientation.\n * @returns {object} The slice iterator.\n */\nexport function getSliceIterator(\n  image, position, isRescaled, viewOrientation) {\n  const size = image.getGeometry().getSize();\n  // zero-ify non direction index\n  let dirMax2Index = 2;\n  if (viewOrientation && typeof viewOrientation !== 'undefined') {\n    dirMax2Index = viewOrientation.getColAbsMax(2).index;\n  }\n  const posValues = position.getValues();\n  // keep the main direction and any other than 3D\n  const indexFilter = function (element, index) {\n    return (index === dirMax2Index || index > 2) ? element : 0;\n  };\n  const posStart = new Index(posValues.map(indexFilter));\n  let start = size.indexToOffset(posStart);\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const ncols = size.get(0);\n  const nrows = size.get(1);\n  const nslices = size.get(2);\n  let sliceSize = size.getDimSize(2);\n\n  const ncomp = image.getNumberOfComponents();\n  const isPlanar = image.getPlanarConfiguration() === 1;\n  const getRange = function (\n    dataAccessor, start, maxIter, increment,\n    blockMaxIter, blockIncrement, reverse1, reverse2) {\n    if (ncomp === 1) {\n      return range(dataAccessor, start, maxIter, increment,\n        blockMaxIter, blockIncrement, reverse1, reverse2);\n    } else if (ncomp === 3) {\n      return range3d(dataAccessor, 3 * start, maxIter, increment,\n        blockMaxIter, blockIncrement, reverse1, reverse2, isPlanar);\n    }\n  };\n\n  let rangeObj = null;\n  if (viewOrientation && typeof viewOrientation !== 'undefined') {\n    const dirMax0 = viewOrientation.getColAbsMax(0);\n    const dirMax2 = viewOrientation.getColAbsMax(2);\n\n    // default reverse\n    const reverse1 = false;\n    const reverse2 = false;\n\n    let maxIter = null;\n    if (dirMax2.index === 2) {\n      // axial\n      maxIter = ncols * nrows;\n      if (dirMax0.index === 0) {\n        // xyz\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, 1, ncols, ncols, reverse1, reverse2);\n      } else {\n        // yxz\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, ncols, nrows, 1, reverse1, reverse2);\n      }\n    } else if (dirMax2.index === 0) {\n      // sagittal\n      maxIter = nslices * nrows;\n      if (dirMax0.index === 1) {\n        // yzx\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, ncols, nrows, sliceSize, reverse1, reverse2);\n      } else {\n        // zyx\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, sliceSize, nslices, ncols, reverse1, reverse2);\n      }\n    } else if (dirMax2.index === 1) {\n      // coronal\n      maxIter = nslices * ncols;\n      if (dirMax0.index === 0) {\n        // xzy\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, 1, ncols, sliceSize, reverse1, reverse2);\n      } else {\n        // zxy\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, sliceSize, nslices, 1, reverse1, reverse2);\n      }\n    } else {\n      throw new Error('Unknown direction: ' + dirMax2.index);\n    }\n  } else {\n    if (image.getNumberOfComponents() === 1) {\n      rangeObj = simpleRange(dataAccessor, start, start + sliceSize);\n    } else if (image.getNumberOfComponents() === 3) {\n      // 3 times bigger...\n      start *= 3;\n      sliceSize *= 3;\n      rangeObj = simpleRange3d(\n        dataAccessor, start, start + sliceSize, 1, isPlanar);\n    } else {\n      throw new Error('Unsupported number of components: ' +\n        image.getNumberOfComponents());\n    }\n  }\n\n  return rangeObj;\n}\n\n/**\n * Get a slice index iterator for a rectangular region.\n *\n * @param {Image} image The image to parse.\n * @param {Index} index The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Point2D} min The minimum position (optional).\n * @param {Point2D} max The maximum position (optional).\n * @returns {object} The slice iterator.\n */\nexport function getRegionSliceIterator(\n  image, index, isRescaled, min, max) {\n  if (image.getNumberOfComponents() !== 1) {\n    throw new Error('Unsupported number of components for region iterator: ' +\n      image.getNumberOfComponents());\n  }\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const size = image.getGeometry().getSize();\n  if (typeof min === 'undefined') {\n    min = new Point2D(0, 0);\n  }\n  if (typeof max === 'undefined') {\n    max = new Point2D(\n      size.get(0) - 1,\n      size.get(1)\n    );\n  }\n  // position to pixel for max: extra X is ok, remove extra Y\n  const startOffset = size.indexToOffset(index.getWithNew2D(\n    min.getX(), min.getY()\n  ));\n  const endOffset = size.indexToOffset(index.getWithNew2D(\n    max.getX(), max.getY() - 1\n  ));\n\n  // minimum 1 column\n  const rangeNumberOfColumns = Math.max(1, max.getX() - min.getX());\n  const rowIncrement = size.get(0) - rangeNumberOfColumns;\n\n  return rangeRegion(\n    dataAccessor, startOffset, endOffset + 1,\n    1, rangeNumberOfColumns, rowIncrement);\n}\n\n/**\n * Get a slice index iterator for a rectangular region.\n *\n * @param {Image} image The image to parse.\n * @param {Index} index The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Array} regions An array of regions.\n * @returns {object|undefined} The slice iterator.\n */\nexport function getVariableRegionSliceIterator(\n  image, index, isRescaled, regions) {\n  if (image.getNumberOfComponents() !== 1) {\n    throw new Error('Unsupported number of components for region iterator: ' +\n      image.getNumberOfComponents());\n  }\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const size = image.getGeometry().getSize();\n\n  const offsetRegions = [];\n  let region;\n  let min = null;\n  let max = null;\n  let regionIndex = null;\n  for (let i = 0; i < regions.length; ++i) {\n    region = regions[i];\n    const width = region[1][0] - region[0][0];\n    if (width !== 0) {\n      regionIndex = i;\n      if (!min) {\n        min = region[0];\n      }\n      offsetRegions.push([\n        region[0][0],\n        width,\n        size.get(0) - region[1][0]\n      ]);\n    }\n  }\n  if (regionIndex !== null) {\n    max = regions[regionIndex][1];\n  }\n\n  // exit if no offsets\n  if (offsetRegions.length === 0) {\n    return undefined;\n  }\n\n  const startOffset = size.indexToOffset(index.getWithNew2D(\n    min[0], min[1]\n  ));\n  const endOffset = size.indexToOffset(index.getWithNew2D(\n    max[0], max[1]\n  ));\n\n  return rangeRegions(\n    dataAccessor, startOffset, endOffset + 1,\n    1, offsetRegions);\n}\n\n/**\n * Get a colour iterator. The input array defines the colours and\n * their start index.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Array} colours An array of {index, colour} pairs.\n * @param {number} end The end of the range (excluded).\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function colourRange(colours, end) {\n  let nextIndex = 0;\n  let nextColourIndex = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        if (nextColourIndex + 1 < colours.length &&\n          nextIndex >= colours[nextColourIndex + 1].index) {\n          ++nextColourIndex;\n        }\n        const result = {\n          value: colours[nextColourIndex].colour,\n          done: false,\n          index: nextIndex\n        };\n        ++nextIndex;\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n","import {Index} from '../math/index';\nimport {RescaleLut} from './rescaleLut';\nimport {WindowLut} from './windowLut';\nimport {lut} from './luts';\nimport {WindowLevel} from './windowLevel';\nimport {generateImageDataMonochrome} from './viewMonochrome';\nimport {generateImageDataPaletteColor} from './viewPaletteColor';\nimport {generateImageDataRgb} from './viewRgb';\nimport {generateImageDataYbrFull} from './viewYbrFull';\nimport {getSliceIterator} from '../image/iterator';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {Matrix33} from '../math/matrix';\nimport {Point, Point3D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * List of view event names.\n *\n * @type {Array}\n */\nexport const viewEventNames = [\n  'wlchange',\n  'wlpresetadd',\n  'colourchange',\n  'positionchange',\n  'opacitychange',\n  'alphafuncchange'\n];\n\n/**\n * View class.\n *\n * Need to set the window lookup table once created\n * (either directly or with helper methods).\n */\nexport class View {\n\n  /**\n   * The associated image.\n   *\n   * @type {Image}\n   */\n  #image;\n\n  /**\n   * Window lookup tables, indexed per Rescale Slope and Intercept (RSI).\n   *\n   * @type {object}\n   */\n  #windowLuts = {};\n\n  /**\n   * Window presets.\n   * Minmax will be filled at first use (see view.setWindowLevelPreset).\n   *\n   * @type {object}\n   */\n  #windowPresets = {minmax: {name: 'minmax'}};\n\n  /**\n   * Current window preset name.\n   *\n   * @type {string}\n   */\n  #currentPresetName = null;\n\n  /**\n   * Current window level.\n   *\n   * @type {object}\n   */\n  #currentWl = null;\n\n  /**\n   * colour map.\n   *\n   * @type {object}\n   */\n  #colourMap = lut.plain;\n\n  /**\n   * Current position as a Point.\n   * Store position and not index to stay geometry independent.\n   *\n   * @type {Point}\n   */\n  #currentPosition = null;\n\n  /**\n   * View orientation. Undefined will use the original slice ordering.\n   *\n   * @type {object}\n   */\n  #orientation;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {Image} image The associated image.\n   */\n  constructor(image) {\n    this.#image = image;\n\n    // listen to appendframe event to update the current position\n    //   to add the extra dimension\n    this.#image.addEventListener('appendframe', () => {\n      // update current position if first appendFrame\n      const index = this.getCurrentIndex();\n      if (index.length() === 3) {\n        // add dimension\n        const values = index.getValues();\n        values.push(0);\n        this.setCurrentIndex(new Index(values));\n      }\n    });\n  }\n\n  /**\n   * Get the associated image.\n   *\n   * @returns {Image} The associated image.\n   */\n  getImage() {\n    return this.#image;\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {Image} inImage The associated image.\n   */\n  setImage(inImage) {\n    this.#image = inImage;\n  }\n\n  /**\n   * Get the view orientation.\n   *\n   * @returns {Matrix33} The orientation matrix.\n   */\n  getOrientation() {\n    return this.#orientation;\n  }\n\n  /**\n   * Set the view orientation.\n   *\n   * @param {Matrix33} mat33 The orientation matrix.\n   */\n  setOrientation(mat33) {\n    this.#orientation = mat33;\n  }\n\n  /**\n   * Initialise the view: set initial index.\n   */\n  init() {\n    this.setInitialIndex();\n  }\n\n  /**\n   * Set the initial index to 0.\n   */\n  setInitialIndex() {\n    const geometry = this.#image.getGeometry();\n    const size = geometry.getSize();\n    const values = new Array(size.length());\n    values.fill(0);\n    // middle\n    values[0] = Math.floor(size.get(0) / 2);\n    values[1] = Math.floor(size.get(1) / 2);\n    values[2] = Math.floor(size.get(2) / 2);\n    this.setCurrentIndex(new Index(values), true);\n  }\n\n  /**\n   * Get the milliseconds per frame from frame rate.\n   *\n   * @param {number} recommendedDisplayFrameRate Recommended Display Frame Rate.\n   * @returns {number} The milliseconds per frame.\n   */\n  getPlaybackMilliseconds(recommendedDisplayFrameRate) {\n    if (!recommendedDisplayFrameRate) {\n      // Default to 10 FPS if none is found in the meta\n      recommendedDisplayFrameRate = 10;\n    }\n    // round milliseconds per frame to nearest whole number\n    return Math.round(1000 / recommendedDisplayFrameRate);\n  }\n\n  /**\n   * Per value alpha function.\n   *\n   * @param {*} _value The pixel value. Can be a number for monochrome\n   *  data or an array for RGB data.\n   * @param {number} _index The data index of the value.\n   * @returns {number} The coresponding alpha [0,255].\n   */\n  #alphaFunction = function (_value, _index) {\n    // default always returns fully visible\n    return 0xff;\n  };\n\n  /**\n   * @callback alphaFn\n   * @param {object} value The pixel value.\n   * @param {object} index The values' index.\n   * @returns {number} The value to display.\n   */\n\n  /**\n   * Get the alpha function.\n   *\n   * @returns {alphaFn} The function.\n   */\n  getAlphaFunction() {\n    return this.#alphaFunction;\n  }\n\n  /**\n   * Set alpha function.\n   *\n   * @param {alphaFn} func The function.\n   * @fires View#alphafuncchange\n   */\n  setAlphaFunction(func) {\n    this.#alphaFunction = func;\n    /**\n     * Alpha func change event.\n     *\n     * @event View#alphafuncchange\n     * @type {object}\n     */\n    this.#fireEvent({\n      type: 'alphafuncchange'\n    });\n  }\n\n  /**\n   * Get the window LUT of the image.\n   * Warning: can be undefined in no window/level was set.\n   *\n   * @param {object} [rsi] Optional image rsi, will take the one of the\n   *   current slice otherwise.\n   * @returns {WindowLut} The window LUT of the image.\n   * @fires View#wlchange\n   */\n  getCurrentWindowLut(rsi) {\n    // check position\n    if (!this.getCurrentIndex()) {\n      this.setInitialIndex();\n    }\n    const currentIndex = this.getCurrentIndex();\n    // use current rsi if not provided\n    if (typeof rsi === 'undefined') {\n      rsi = this.#image.getRescaleSlopeAndIntercept(currentIndex);\n    }\n\n    // get the current window level\n    let wl = null;\n    // special case for 'perslice' presets\n    if (this.#currentPresetName &&\n      typeof this.#windowPresets[this.#currentPresetName] !== 'undefined' &&\n      typeof this.#windowPresets[this.#currentPresetName].perslice !==\n        'undefined' &&\n      this.#windowPresets[this.#currentPresetName].perslice === true) {\n      // get the preset for this slice\n      const offset = this.#image.getSecondaryOffset(currentIndex);\n      wl = this.#windowPresets[this.#currentPresetName].wl[offset];\n    }\n    // regular case\n    if (!wl) {\n      // if no current, use first id\n      if (!this.#currentWl) {\n        this.setWindowLevelPresetById(0, true);\n      }\n      wl = this.#currentWl;\n    }\n\n    // get the window lut\n    let wlut = this.#windowLuts[rsi.toString()];\n    if (typeof wlut === 'undefined') {\n      // create the rescale lookup table\n      const rescaleLut = new RescaleLut(\n        this.#image.getRescaleSlopeAndIntercept(),\n        this.#image.getMeta().BitsStored);\n      // create the window lookup table\n      const windowLut = new WindowLut(\n        rescaleLut, this.#image.getMeta().IsSigned);\n      // store\n      this.addWindowLut(windowLut);\n      wlut = windowLut;\n    }\n\n    // update lut window level if not present or different from previous\n    const lutWl = wlut.getWindowLevel();\n    if (!wl.equals(lutWl)) {\n      // set lut window level\n      wlut.setWindowLevel(wl);\n      wlut.update();\n      // fire change event\n      if (!lutWl ||\n        lutWl.getWidth() !== wl.getWidth() ||\n        lutWl.getCenter() !== wl.getCenter()) {\n        this.#fireEvent({\n          type: 'wlchange',\n          value: [wl.getCenter(), wl.getWidth()],\n          wc: wl.getCenter(),\n          ww: wl.getWidth(),\n          skipGenerate: true\n        });\n      }\n    }\n\n    // return\n    return wlut;\n  }\n\n  /**\n   * Add the window LUT to the list.\n   *\n   * @param {WindowLut} wlut The window LUT of the image.\n   */\n  addWindowLut(wlut) {\n    const rsi = wlut.getRescaleLut().getRSI();\n    this.#windowLuts[rsi.toString()] = wlut;\n  }\n\n  /**\n   * Get the window presets.\n   *\n   * @returns {object} The window presets.\n   */\n  getWindowPresets() {\n    return this.#windowPresets;\n  }\n\n  /**\n   * Get the window presets names.\n   *\n   * @returns {object} The list of window presets names.\n   */\n  getWindowPresetsNames() {\n    return Object.keys(this.#windowPresets);\n  }\n\n  /**\n   * Set the window presets.\n   *\n   * @param {object} presets The window presets.\n   */\n  setWindowPresets(presets) {\n    this.#windowPresets = presets;\n  }\n\n  /**\n   * Set the default colour map.\n   *\n   * @param {object} map The colour map.\n   */\n  setDefaultColourMap(map) {\n    this.#colourMap = map;\n  }\n\n  /**\n   * Add window presets to the existing ones.\n   *\n   * @param {object} presets The window presets.\n   */\n  addWindowPresets(presets) {\n    const keys = Object.keys(presets);\n    let key = null;\n    for (let i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (typeof this.#windowPresets[key] !== 'undefined') {\n        if (typeof this.#windowPresets[key].perslice !== 'undefined' &&\n        this.#windowPresets[key].perslice === true) {\n          throw new Error('Cannot add perslice preset');\n        } else {\n          this.#windowPresets[key] = presets[key];\n        }\n      } else {\n        // add new\n        this.#windowPresets[key] = presets[key];\n        // fire event\n        /**\n         * Window/level add preset event.\n         *\n         * @event View#wlpresetadd\n         * @type {object}\n         * @property {string} name The name of the preset.\n         */\n        this.#fireEvent({\n          type: 'wlpresetadd',\n          name: key\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the colour map of the image.\n   *\n   * @returns {object} The colour map of the image.\n   */\n  getColourMap() {\n    return this.#colourMap;\n  }\n\n  /**\n   * Set the colour map of the image.\n   *\n   * @param {object} map The colour map of the image.\n   * @fires View#colourchange\n   */\n  setColourMap(map) {\n    this.#colourMap = map;\n    /**\n     * Color change event.\n     *\n     * @event View#colourchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     * @property {number} wc The new window center value.\n     * @property {number} ww The new window wdth value.\n     */\n    this.#fireEvent({\n      type: 'colourchange',\n      wc: this.getCurrentWindowLut().getWindowLevel().getCenter(),\n      ww: this.getCurrentWindowLut().getWindowLevel().getWidth()\n    });\n  }\n\n  /**\n   * Get the current position.\n   *\n   * @returns {Point} The current position.\n   */\n  getCurrentPosition() {\n    return this.#currentPosition;\n  }\n\n  /**\n   * Get the current index.\n   *\n   * @returns {Index} The current index.\n   */\n  getCurrentIndex() {\n    const position = this.getCurrentPosition();\n    if (!position) {\n      return null;\n    }\n    const geometry = this.getImage().getGeometry();\n    return geometry.worldToIndex(position);\n  }\n\n  /**\n   * Check is the provided position can be set.\n   *\n   * @param {Point} position The position.\n   * @returns {boolean} True is the position is in bounds.\n   */\n  canSetPosition(position) {\n    const geometry = this.#image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    return geometry.isIndexInBounds(index, dirs);\n  }\n\n  /**\n   * Get the origin at a given position.\n   *\n   * @param {Point} position The position.\n   * @returns {Point} The origin.\n   */\n  getOrigin(position) {\n    const geometry = this.#image.getGeometry();\n    let originIndex = 0;\n    if (typeof position !== 'undefined') {\n      const index = geometry.worldToIndex(position);\n      // index is reoriented, 2 is scroll index\n      originIndex = index.get(2);\n    }\n    return geometry.getOrigins()[originIndex];\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {boolean} silent Flag to fire event or not.\n   * @returns {boolean} False if not in bounds\n   * @fires View#positionchange\n   */\n  setCurrentPosition(position, silent) {\n    // send invalid event if not in bounds\n    const geometry = this.#image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    if (!geometry.isIndexInBounds(index, dirs)) {\n      if (!silent) {\n        // fire event with valid: false\n        this.#fireEvent({\n          type: 'positionchange',\n          value: [\n            index.getValues(),\n            position.getValues(),\n          ],\n          valid: false\n        });\n      }\n      return false;\n    }\n    return this.setCurrentIndex(index, silent);\n  }\n\n  /**\n   * Set the current index.\n   *\n   * @param {Index} index The new index.\n   * @param {boolean} [silent] Flag to fire event or not.\n   * @returns {boolean} False if not in bounds.\n   * @fires View#positionchange\n   */\n  setCurrentIndex(index, silent) {\n    // check input\n    if (typeof silent === 'undefined') {\n      silent = false;\n    }\n\n    const geometry = this.#image.getGeometry();\n    const position = geometry.indexToWorld(index);\n\n    // check if possible\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    if (!geometry.isIndexInBounds(index, dirs)) {\n      // do no send invalid positionchange event: avoid empty repaint\n      return false;\n    }\n\n    // calculate diff dims before updating internal\n    let diffDims = null;\n    let currentIndex = null;\n    if (this.getCurrentPosition()) {\n      currentIndex = this.getCurrentIndex();\n    }\n    if (currentIndex) {\n      if (currentIndex.canCompare(index)) {\n        diffDims = currentIndex.compare(index);\n      } else {\n        diffDims = [];\n        const minLen = Math.min(currentIndex.length(), index.length());\n        for (let i = 0; i < minLen; ++i) {\n          if (currentIndex.get(i) !== index.get(i)) {\n            diffDims.push(i);\n          }\n        }\n        const maxLen = Math.max(currentIndex.length(), index.length());\n        for (let j = minLen; j < maxLen; ++j) {\n          diffDims.push(j);\n        }\n      }\n    } else {\n      diffDims = [];\n      for (let k = 0; k < index.length(); ++k) {\n        diffDims.push(k);\n      }\n    }\n\n    // assign\n    this.#currentPosition = position;\n\n    if (!silent) {\n      /**\n       * Position change event.\n       *\n       * @event View#positionchange\n       * @type {object}\n       * @property {Array} value The changed value as [index, pixelValue].\n       * @property {Array} diffDims An array of modified indices.\n       */\n      const posEvent = {\n        type: 'positionchange',\n        value: [\n          index.getValues(),\n          position.getValues(),\n        ],\n        diffDims: diffDims,\n        data: {\n          imageUid: this.#image.getImageUid(index)\n        }\n      };\n\n      // add value if possible\n      if (this.#image.canQuantify()) {\n        const pixValue = this.#image.getRescaledValueAtIndex(index);\n        posEvent.value.push(pixValue);\n      }\n\n      // fire\n      this.#fireEvent(posEvent);\n    }\n\n    // all good\n    return true;\n  }\n\n  /**\n   * Set the view window/level.\n   *\n   * @param {number} center The window center.\n   * @param {number} width The window width.\n   * @param {string} [name] Associated preset name, defaults to 'manual'.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   * @fires View#wlchange\n   */\n  setWindowLevel(center, width, name, silent) {\n    // window width shall be >= 1 (see https://www.dabsoft.ch/dicom/3/C.11.2.1.2/)\n    if (width < 1) {\n      return;\n    }\n\n    // check input\n    if (typeof name === 'undefined') {\n      name = 'manual';\n    }\n    if (typeof silent === 'undefined') {\n      silent = false;\n    }\n\n    // new window level\n    const newWl = new WindowLevel(center, width);\n\n    // check if new\n    const isNew = !newWl.equals(this.#currentWl);\n\n    // compare to previous if present\n    if (isNew) {\n      const isNewWidth = this.#currentWl\n        ? this.#currentWl.getWidth() !== width : true;\n      const isNewCenter = this.#currentWl\n        ? this.#currentWl.getCenter() !== center : true;\n      // assign\n      this.#currentWl = newWl;\n      this.#currentPresetName = name;\n\n      if (isNewWidth || isNewCenter) {\n        /**\n         * Window/level change event.\n         *\n         * @event View#wlchange\n         * @type {object}\n         * @property {Array} value The changed value.\n         * @property {number} wc The new window center value.\n         * @property {number} ww The new window wdth value.\n         * @property {boolean} skipGenerate Flag to skip view generation.\n         */\n        this.#fireEvent({\n          type: 'wlchange',\n          value: [center, width],\n          wc: center,\n          ww: width,\n          skipGenerate: silent\n        });\n      }\n    }\n  }\n\n  /**\n   * Set the window level to the preset with the input name.\n   *\n   * @param {string} name The name of the preset to activate.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   */\n  setWindowLevelPreset(name, silent) {\n    const preset = this.getWindowPresets()[name];\n    if (typeof preset === 'undefined') {\n      throw new Error('Unknown window level preset: \\'' + name + '\\'');\n    }\n    // special min/max\n    if (name === 'minmax' && typeof preset.wl === 'undefined') {\n      preset.wl = [this.getWindowLevelMinMax()];\n    }\n    // default to first\n    let wl = preset.wl[0];\n    // check if 'perslice' case\n    if (typeof preset.perslice !== 'undefined' &&\n      preset.perslice === true) {\n      const offset = this.#image.getSecondaryOffset(this.getCurrentIndex());\n      wl = preset.wl[offset];\n    }\n    // set w/l\n    this.setWindowLevel(\n      wl.getCenter(), wl.getWidth(), name, silent);\n  }\n\n  /**\n   * Set the window level to the preset with the input id.\n   *\n   * @param {number} id The id of the preset to activate.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   */\n  setWindowLevelPresetById(id, silent) {\n    const keys = Object.keys(this.getWindowPresets());\n    this.setWindowLevelPreset(keys[id], silent);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get the image window/level that covers the full data range.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   *\n   * @returns {object} A min/max window level.\n   */\n  getWindowLevelMinMax() {\n    const range = this.getImage().getRescaledDataRange();\n    const min = range.min;\n    const max = range.max;\n    let width = max - min;\n    // full black / white images, defaults to 1.\n    if (width < 1) {\n      logger.warn('Zero or negative window width, defaulting to one.');\n      width = 1;\n    }\n    const center = min + width / 2;\n    return new WindowLevel(center, width);\n  }\n\n  /**\n   * Set the image window/level to cover the full data range.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   */\n  setWindowLevelMinMax() {\n    // calculate center and width\n    const wl = this.getWindowLevelMinMax();\n    // set window level\n    this.setWindowLevel(wl.getCenter(), wl.getWidth(), 'minmax');\n  }\n\n  /**\n   * Generate display image data to be given to a canvas.\n   *\n   * @param {ImageData} data The iamge data to fill in.\n   * @param {Index} index Optional index at which to generate,\n   *   otherwise generates at current index.\n   */\n  generateImageData(data, index) {\n    // check index\n    if (typeof index === 'undefined') {\n      if (!this.getCurrentIndex()) {\n        this.setInitialIndex();\n      }\n      index = this.getCurrentIndex();\n    }\n\n    const image = this.getImage();\n    const iterator = getSliceIterator(\n      image, index, false, this.getOrientation());\n\n    const photoInterpretation = image.getPhotometricInterpretation();\n    switch (photoInterpretation) {\n    case 'MONOCHROME1':\n    case 'MONOCHROME2':\n      generateImageDataMonochrome(\n        data,\n        iterator,\n        this.getAlphaFunction(),\n        this.getCurrentWindowLut(),\n        this.getColourMap()\n      );\n      break;\n\n    case 'PALETTE COLOR':\n      generateImageDataPaletteColor(\n        data,\n        iterator,\n        this.getAlphaFunction(),\n        this.getColourMap(),\n        image.getMeta().BitsStored === 16\n      );\n      break;\n\n    case 'RGB':\n      generateImageDataRgb(\n        data,\n        iterator,\n        this.getAlphaFunction()\n      );\n      break;\n\n    case 'YBR_FULL':\n      generateImageDataYbrFull(\n        data,\n        iterator,\n        this.getAlphaFunction()\n      );\n      break;\n\n    default:\n      throw new Error(\n        'Unsupported photometric interpretation: ' + photoInterpretation);\n    }\n  }\n\n  /**\n   * Increment the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementIndex(dim, silent) {\n    const index = this.getCurrentIndex();\n    const values = new Array(index.length());\n    values.fill(0);\n    if (dim < values.length) {\n      values[dim] = 1;\n    } else {\n      console.warn('Cannot increment given index: ', dim, values.length);\n    }\n    const incr = new Index(values);\n    const newIndex = index.add(incr);\n    return this.setCurrentIndex(newIndex, silent);\n  }\n\n  /**\n   * Decrement the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementIndex(dim, silent) {\n    const index = this.getCurrentIndex();\n    const values = new Array(index.length());\n    values.fill(0);\n    if (dim < values.length) {\n      values[dim] = -1;\n    } else {\n      console.warn('Cannot decrement given index: ', dim, values.length);\n    }\n    const incr = new Index(values);\n    const newIndex = index.add(incr);\n    return this.setCurrentIndex(newIndex, silent);\n  }\n\n  /**\n   * Get the scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    let index = null;\n    const orientation = this.getOrientation();\n    if (typeof orientation !== 'undefined') {\n      index = orientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n  /**\n   * Decrement the scroll dimension index.\n   *\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementScrollIndex(silent) {\n    return this.decrementIndex(this.getScrollIndex(), silent);\n  }\n\n  /**\n   * Increment the scroll dimension index.\n   *\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementScrollIndex(silent) {\n    return this.incrementIndex(this.getScrollIndex(), silent);\n  }\n\n} // class View\n","/**\n * Generate image data for 'MONOCHROME*' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n * @param {object} windowLut The window/level LUT.\n * @param {object} colourMap The colour map.\n */\nexport function generateImageDataMonochrome(\n  array,\n  iterator,\n  alphaFunc,\n  windowLut,\n  colourMap) {\n  let index = 0;\n  let pxValue = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // pixel value\n    pxValue = windowLut.getValue(ival.value);\n    // store data\n    array.data[index] = colourMap.red[pxValue];\n    array.data[index + 1] = colourMap.green[pxValue];\n    array.data[index + 2] = colourMap.blue[pxValue];\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {logger} from '../utils/logger';\n\n/**\n * Generate image data for 'PALETTE COLOR' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n * @param {object} colourMap The colour map.\n * @param {boolean} is16BitsStored Flag to know if the data is 16bits.\n */\nexport function generateImageDataPaletteColor(\n  array,\n  iterator,\n  alphaFunc,\n  colourMap,\n  is16BitsStored) {\n  // right shift 8\n  const to8 = function (value) {\n    return value >> 8;\n  };\n\n  if (is16BitsStored) {\n    logger.info('Scaling 16bits data to 8bits.');\n  }\n\n  let index = 0;\n  let pxValue = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // pixel value\n    pxValue = ival.value;\n    // store data\n    // TODO check pxValue fits in lut\n    if (is16BitsStored) {\n      array.data[index] = to8(colourMap.red[pxValue]);\n      array.data[index + 1] = to8(colourMap.green[pxValue]);\n      array.data[index + 2] = to8(colourMap.blue[pxValue]);\n    } else {\n      array.data[index] = colourMap.red[pxValue];\n      array.data[index + 1] = colourMap.green[pxValue];\n      array.data[index + 2] = colourMap.blue[pxValue];\n    }\n    array.data[index + 3] = alphaFunc(pxValue, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","/**\n * Generate image data for 'RGB' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n */\nexport function generateImageDataRgb(\n  array,\n  iterator,\n  alphaFunc) {\n  let index = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // store data\n    array.data[index] = ival.value[0];\n    array.data[index + 1] = ival.value[1];\n    array.data[index + 2] = ival.value[2];\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {ybrToRgb} from '../utils/colour';\n\n/**\n * Generate image data for 'YBR_FULL' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n */\nexport function generateImageDataYbrFull(\n  array,\n  iterator,\n  alphaFunc) {\n  let index = 0;\n  let rgb = null;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // convert ybr to rgb\n    rgb = ybrToRgb(ival.value[0], ival.value[1], ival.value[2]);\n    // store data\n    array.data[index] = rgb.r;\n    array.data[index + 1] = rgb.g;\n    array.data[index + 2] = rgb.b;\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {View} from './view';\nimport {lut} from './luts';\nimport {WindowLevel, defaultPresets} from './windowLevel';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\n/* eslint-enable no-unused-vars */\n\n/**\n * {@link View} factory.\n */\nexport class ViewFactory {\n\n  /**\n   * Get an View object from the read DICOM file.\n   *\n   * @param {object} dicomElements The DICOM tags.\n   * @param {Image} image The associated image.\n   * @returns {View} The new View.\n   */\n  create(dicomElements, image) {\n    // view\n    const view = new View(image);\n\n    // default color map\n    if (image.getPhotometricInterpretation() === 'MONOCHROME1') {\n      view.setDefaultColourMap(lut.invPlain);\n    } else if (image.getPhotometricInterpretation() === 'PALETTE COLOR') {\n      const paletteLut = image.getMeta().paletteLut;\n      if (typeof (paletteLut) !== 'undefined') {\n        view.setDefaultColourMap(paletteLut);\n      }\n    }\n\n    // window level presets\n    let windowPresets = {};\n    // image presets\n    if (typeof image.getMeta().windowPresets !== 'undefined') {\n      windowPresets = image.getMeta().windowPresets;\n    }\n    // min/max\n    // Not filled yet since it is stil too costly to calculate min/max\n    // for each slice... It will be filled at first use\n    // (see view.setWindowLevelPreset).\n    // Order is important, if no wl from DICOM, this will be the default.\n    windowPresets.minmax = {name: 'minmax'};\n    // optional modality presets\n    if (typeof defaultPresets !== 'undefined') {\n      const modality = image.getMeta().Modality;\n      for (const key in defaultPresets[modality]) {\n        const preset = defaultPresets[modality][key];\n        windowPresets[key] = {\n          wl: [new WindowLevel(preset.center, preset.width)],\n          name: key\n        };\n      }\n    }\n\n    // store\n    view.setWindowPresets(windowPresets);\n\n    // initialise the view\n    view.init();\n\n    return view;\n  }\n\n} // class ViewFactory\n","import {Vector3D} from '../math/vector';\nimport {Point3D} from '../math/point';\nimport {getTargetOrientation} from '../gui/layerGroup';\nimport {getOrientedArray3D, getDeOrientedArray3D} from './geometry';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\nimport {Spacing} from './spacing';\n/* eslint-enable no-unused-vars */\n\n/**\n * Plane geometry helper.\n */\nexport class PlaneHelper {\n\n  /**\n   * The associated spacing.\n   *\n   * @type {Spacing}\n   */\n  #spacing;\n\n  /**\n   * The image orientation.\n   *\n   * @type {Matrix33}\n   */\n  #imageOrientation;\n\n  /**\n   * The viewe orientation.\n   *\n   * @type {Matrix33}\n   */\n  #viewOrientation;\n\n  /**\n   * The target orientation.\n   *\n   * @type {Matrix33}\n   */\n  #targetOrientation;\n\n  /**\n   * @param {Spacing} spacing The spacing.\n   * @param {Matrix33} imageOrientation The image oientation.\n   * @param {Matrix33} viewOrientation The view orientation.\n   */\n  constructor(spacing, imageOrientation, viewOrientation) {\n    this.#spacing = spacing;\n    this.#imageOrientation = imageOrientation;\n    this.#viewOrientation = viewOrientation;\n\n    this.#targetOrientation = getTargetOrientation(\n      imageOrientation, viewOrientation);\n  }\n\n  /**\n   * Get a 3D offset from a plane one.\n   *\n   * @param {object} offset2D The plane offset as {x,y}.\n   * @returns {Vector3D} The 3D world offset.\n   */\n  getOffset3DFromPlaneOffset(offset2D) {\n    // make 3D\n    const planeOffset = new Vector3D(\n      offset2D.x, offset2D.y, 0);\n    // de-orient\n    const pixelOffset = this.getTargetDeOrientedVector3D(planeOffset);\n    // ~indexToWorld\n    return new Vector3D(\n      pixelOffset.getX() * this.#spacing.get(0),\n      pixelOffset.getY() * this.#spacing.get(1),\n      pixelOffset.getZ() * this.#spacing.get(2));\n  }\n\n  /**\n   * Get a plane offset from a 3D one.\n   *\n   * @param {object} offset3D The 3D offset as {x,y,z}.\n   * @returns {object} The plane offset as {x,y}.\n   */\n  getPlaneOffsetFromOffset3D(offset3D) {\n    // ~worldToIndex\n    const pixelOffset = new Vector3D(\n      offset3D.x / this.#spacing.get(0),\n      offset3D.y / this.#spacing.get(1),\n      offset3D.z / this.#spacing.get(2));\n    // orient\n    const planeOffset = this.getTargetOrientedVector3D(pixelOffset);\n    // make 2D\n    return {\n      x: planeOffset.getX(),\n      y: planeOffset.getY()\n    };\n  }\n\n  /**\n   * Orient an input vector from real to target space.\n   *\n   * @param {Vector3D} vector The input vector.\n   * @returns {Vector3D} The oriented vector.\n   */\n  getTargetOrientedVector3D(vector) {\n    let planeVector = vector;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      planeVector =\n        this.#targetOrientation.getInverse().multiplyVector3D(vector);\n    }\n    return planeVector;\n  }\n\n  /**\n   * De-orient an input vector from target to real space.\n   *\n   * @param {Vector3D} planeVector The input vector.\n   * @returns {Vector3D} The de-orienteded vector.\n   */\n  getTargetDeOrientedVector3D(planeVector) {\n    let vector = planeVector;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      vector = this.#targetOrientation.multiplyVector3D(planeVector);\n    }\n    return vector;\n  }\n\n  /**\n   * De-orient an input point from target to real space.\n   *\n   * @param {Point3D} planePoint The input point.\n   * @returns {Point3D} The de-orienteded point.\n   */\n  getTargetDeOrientedPoint3D(planePoint) {\n    let point = planePoint;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      point = this.#targetOrientation.multiplyPoint3D(planePoint);\n    }\n    return point;\n  }\n\n  /**\n   * Orient an input vector from target to image space.\n   *\n   * @param {Vector3D} planeVector The input vector.\n   * @returns {Vector3D} The orienteded vector.\n   */\n  getImageOrientedVector3D(planeVector) {\n    let vector = planeVector;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image oriented => view de-oriented\n      const values = getDeOrientedArray3D(\n        [\n          planeVector.getX(),\n          planeVector.getY(),\n          planeVector.getZ()\n        ],\n        this.#viewOrientation);\n      vector = new Vector3D(\n        values[0],\n        values[1],\n        values[2]\n      );\n    }\n    return vector;\n  }\n\n  /**\n   * Orient an input point from target to image space.\n   *\n   * @param {Point3D} planePoint The input vector.\n   * @returns {Point3D} The orienteded vector.\n   */\n  getImageOrientedPoint3D(planePoint) {\n    let point = planePoint;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image oriented => view de-oriented\n      const values = getDeOrientedArray3D(\n        [\n          planePoint.getX(),\n          planePoint.getY(),\n          planePoint.getZ()\n        ],\n        this.#viewOrientation);\n      point = new Point3D(\n        values[0],\n        values[1],\n        values[2]\n      );\n    }\n    return point;\n  }\n\n  /**\n   * De-orient an input vector from image to target space.\n   *\n   * @param {Vector3D} vector The input vector.\n   * @returns {Vector3D} The de-orienteded vector.\n   */\n  getImageDeOrientedVector3D(vector) {\n    let planeVector = vector;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image de-oriented => view oriented\n      const orientedValues = getOrientedArray3D(\n        [\n          vector.getX(),\n          vector.getY(),\n          vector.getZ()\n        ],\n        this.#viewOrientation);\n      planeVector = new Vector3D(\n        orientedValues[0],\n        orientedValues[1],\n        orientedValues[2]\n      );\n    }\n    return planeVector;\n  }\n\n  /**\n   * De-orient an input point from image to target space.\n   *\n   * @param {Point3D} point The input point.\n   * @returns {Point3D} The de-orienteded point.\n   */\n  getImageDeOrientedPoint3D(point) {\n    let planePoint = point;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image de-oriented => view oriented\n      const orientedValues = getOrientedArray3D(\n        [\n          point.getX(),\n          point.getY(),\n          point.getZ()\n        ],\n        this.#viewOrientation);\n      planePoint = new Point3D(\n        orientedValues[0],\n        orientedValues[1],\n        orientedValues[2]\n      );\n    }\n    return planePoint;\n  }\n\n  /**\n   * Reorder values to follow target orientation.\n   *\n   * @param {object} values Values as {x,y,z}.\n   * @returns {object} Reoriented values as {x,y,z}.\n   */\n  getTargetOrientedPositiveXYZ(values) {\n    const orientedValues = getOrientedArray3D(\n      [\n        values.x,\n        values.y,\n        values.z\n      ],\n      this.#targetOrientation);\n    return {\n      x: orientedValues[0],\n      y: orientedValues[1],\n      z: orientedValues[2]\n    };\n  }\n\n  /**\n   * Get the (view) scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    let index = null;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      index = this.#viewOrientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n  /**\n   * Get the native (image) scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getNativeScrollIndex() {\n    let index = null;\n    if (typeof this.#imageOrientation !== 'undefined') {\n      index = this.#imageOrientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n} // class PlaneHelper\n","import {getIdentityMat33, getCoronalMat33} from '../math/matrix';\nimport {Index} from '../math/index';\nimport {Point} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {viewEventNames} from '../image/view';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\nimport {ViewLayer} from './viewLayer';\nimport {DrawLayer} from './drawLayer';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\nimport {Point3D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the layer div id.\n *\n * @param {string} groupDivId The layer group div id.\n * @param {number} layerId The lyaer id.\n * @returns {string} A string id.\n */\nexport function getLayerDivId(groupDivId, layerId) {\n  return groupDivId + '-layer-' + layerId;\n}\n\n/**\n * Get the layer details from a div id.\n *\n * @param {string} idString The layer div id.\n * @returns {object} The layer details as {groupDivId, layerId}.\n */\nexport function getLayerDetailsFromLayerDivId(idString) {\n  const split = idString.split('-layer-');\n  if (split.length !== 2) {\n    logger.warn('Not the expected layer div id format...');\n  }\n  return {\n    groupDivId: split[0],\n    layerId: split[1]\n  };\n}\n\n/**\n * Get the layer details from a mouse event.\n *\n * @param {object} event The event to get the layer div id from. Expecting\n * an event origininating from a canvas inside a layer HTML div\n * with the 'layer' class and id generated with `getLayerDivId`.\n * @returns {object} The layer details as {groupDivId, layerId}.\n */\nexport function getLayerDetailsFromEvent(event) {\n  let res = null;\n  // get the closest element from the event target and with the 'layer' class\n  const layerDiv = event.target.closest('.layer');\n  if (layerDiv && typeof layerDiv.id !== 'undefined') {\n    res = getLayerDetailsFromLayerDivId(layerDiv.id);\n  }\n  return res;\n}\n\n/**\n * Get the view orientation according to an image and target orientation.\n * The view orientation is used to go from target to image space.\n *\n * @param {Matrix33} imageOrientation The image geometry.\n * @param {Matrix33} targetOrientation The target orientation.\n * @returns {Matrix33} The view orientation.\n */\nexport function getViewOrientation(imageOrientation, targetOrientation) {\n  let viewOrientation = getIdentityMat33();\n  if (typeof targetOrientation !== 'undefined') {\n    // i: image, v: view, t: target, O: orientation, P: point\n    // [Img] -- Oi --> [Real] <-- Ot -- [Target]\n    // Pi = (Oi)-1 * Ot * Pt = Ov * Pt\n    // -> Ov = (Oi)-1 * Ot\n    // TODO: asOneAndZeros simplifies but not nice...\n    viewOrientation =\n      imageOrientation.asOneAndZeros().getInverse().multiply(targetOrientation);\n  }\n  // TODO: why abs???\n  return viewOrientation.getAbs();\n}\n\n/**\n * Get the target orientation according to an image and view orientation.\n * The target orientation is used to go from target to real space.\n *\n * @param {Matrix33} imageOrientation The image geometry.\n * @param {Matrix33} viewOrientation The view orientation.\n * @returns {Matrix33} The target orientation.\n */\nexport function getTargetOrientation(imageOrientation, viewOrientation) {\n  // i: image, v: view, t: target, O: orientation, P: point\n  // [Img] -- Oi --> [Real] <-- Ot -- [Target]\n  // Pi = (Oi)-1 * Ot * Pt = Ov * Pt\n  // -> Ot = Oi * Ov\n  // note: asOneAndZeros as in getViewOrientation...\n  let targetOrientation =\n    imageOrientation.asOneAndZeros().multiply(viewOrientation);\n\n  // TODO: why abs???\n  const simpleImageOrientation = imageOrientation.asOneAndZeros().getAbs();\n  if (simpleImageOrientation.equals(getCoronalMat33().getAbs())) {\n    targetOrientation = targetOrientation.getAbs();\n  }\n\n  return targetOrientation;\n}\n\n/**\n * Get a scaled offset to adapt to new scale and such as the input center\n * stays at the same position.\n *\n * @param {object} offset The previous offset as {x,y}.\n * @param {object} scale The previous scale as {x,y}.\n * @param {object} newScale The new scale as {x,y}.\n * @param {object} center The scale center as {x,y}.\n * @returns {object} The scaled offset as {x,y}.\n */\nexport function getScaledOffset(offset, scale, newScale, center) {\n  // worldPoint = indexPoint / scale + offset\n  //=> indexPoint = (worldPoint - offset ) * scale\n\n  // plane center should stay the same:\n  // indexCenter / newScale + newOffset =\n  //   indexCenter / oldScale + oldOffset\n  //=> newOffset = indexCenter / oldScale + oldOffset -\n  //     indexCenter / newScale\n  //=> newOffset = worldCenter - indexCenter / newScale\n  const indexCenter = {\n    x: (center.x - offset.x) * scale.x,\n    y: (center.y - offset.y) * scale.y\n  };\n  return {\n    x: center.x - (indexCenter.x / newScale.x),\n    y: center.y - (indexCenter.y / newScale.y)\n  };\n}\n\n/**\n * Layer group.\n *\n * Display position: {x,y}\n * Plane position: Index (access: get(i))\n * (world) Position: Point3D (access: getX, getY, getZ)\n *\n * Display -> World:\n * planePos = viewLayer.displayToPlanePos(displayPos)\n * -> compensate for layer scale and offset\n * pos = viewController.getPositionFromPlanePoint(planePos)\n *\n * World -> display\n * planePos = viewController.getOffset3DFromPlaneOffset(pos)\n * no need yet for a planePos to displayPos...\n */\nexport class LayerGroup {\n\n  /**\n   * The container div.\n   *\n   * @type {HTMLElement}\n   */\n  #containerDiv;\n\n  /**\n   * List of layers.\n   *\n   * @type {Array}\n   */\n  #layers = [];\n\n  /**\n   * The layer scale as {x,y}.\n   *\n   * @type {object}\n   */\n  #scale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The base scale as {x,y}: all posterior scale will be on top of this one.\n   *\n   * @type {object}\n   */\n  #baseScale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The layer offset as {x,y}.\n   *\n   * @type {object}\n   */\n  #offset = {x: 0, y: 0, z: 0};\n\n  /**\n   * Active view layer index.\n   *\n   * @type {number}\n   */\n  #activeViewLayerIndex = null;\n\n  /**\n   * Active draw layer index.\n   *\n   * @type {number}\n   */\n  #activeDrawLayerIndex = null;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * The target orientation matrix.\n   *\n   * @type {Matrix33}\n   */\n  #targetOrientation;\n\n  /**\n   * Flag to activate crosshair or not.\n   *\n   * @type {boolean}\n   */\n  #showCrosshair = false;\n\n  /**\n   * The current position used for the crosshair.\n   *\n   * @type {Point}\n   */\n  #currentPosition;\n\n  /**\n   * @param {HTMLElement} containerDiv The associated HTML div.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n  }\n\n  /**\n   * Get the target orientation.\n   *\n   * @returns {Matrix33} The orientation matrix.\n   */\n  getTargetOrientation() {\n    return this.#targetOrientation;\n  }\n\n  /**\n   * Set the target orientation.\n   *\n   * @param {Matrix33} orientation The orientation matrix.\n   */\n  setTargetOrientation(orientation) {\n    this.#targetOrientation = orientation;\n  }\n\n  /**\n   * Get the showCrosshair flag.\n   *\n   * @returns {boolean} True to display the crosshair.\n   */\n  getShowCrosshair() {\n    return this.#showCrosshair;\n  }\n\n  /**\n   * Set the showCrosshair flag.\n   *\n   * @param {boolean} flag True to display the crosshair.\n   */\n  setShowCrosshair(flag) {\n    this.#showCrosshair = flag;\n    if (flag) {\n      // listen to offset and zoom change\n      this.addEventListener('offsetchange', this.#updateCrosshairOnChange);\n      this.addEventListener('zoomchange', this.#updateCrosshairOnChange);\n      // show crosshair div\n      this.#showCrosshairDiv();\n    } else {\n      // listen to offset and zoom change\n      this.removeEventListener('offsetchange', this.#updateCrosshairOnChange);\n      this.removeEventListener('zoomchange', this.#updateCrosshairOnChange);\n      // remove crosshair div\n      this.#removeCrosshairDiv();\n    }\n  }\n\n  /**\n   * Update crosshair on offset or zoom change.\n   *\n   * @param {object} _event The change event.\n   */\n  #updateCrosshairOnChange = (_event) => {\n    this.#showCrosshairDiv();\n  };\n\n  /**\n   * Get the Id of the container div.\n   *\n   * @returns {string} The id of the div.\n   */\n  getDivId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Get the layer scale.\n   *\n   * @returns {object} The scale as {x,y,z}.\n   */\n  getScale() {\n    return this.#scale;\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {object} The scale as {x,y,z}.\n   */\n  getBaseScale() {\n    return this.#baseScale;\n  }\n\n  /**\n   * Get the added scale: the scale added to the base scale\n   *\n   * @returns {object} The scale as {x,y,z}.\n   */\n  getAddedScale() {\n    return {\n      x: this.#scale.x / this.#baseScale.x,\n      y: this.#scale.y / this.#baseScale.y,\n      z: this.#scale.z / this.#baseScale.z\n    };\n  }\n\n  /**\n   * Get the layer offset.\n   *\n   * @returns {object} The offset as {x,y,z}.\n   */\n  getOffset() {\n    return this.#offset;\n  }\n\n  /**\n   * Get the number of layers handled by this class.\n   *\n   * @returns {number} The number of layers.\n   */\n  getNumberOfLayers() {\n    return this.#layers.length;\n  }\n\n  /**\n   * Get the active image layer.\n   *\n   * @returns {ViewLayer} The layer.\n   */\n  getActiveViewLayer() {\n    return this.#layers[this.#activeViewLayerIndex];\n  }\n\n  /**\n   * Get the view layers associated to a data index.\n   *\n   * @param {number} index The data index.\n   * @returns {ViewLayer[]} The layers.\n   */\n  getViewLayersByDataIndex(index) {\n    const res = [];\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof ViewLayer &&\n        this.#layers[i].getDataIndex() === index) {\n        res.push(this.#layers[i]);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Search view layers for equal imae meta data.\n   *\n   * @param {object} meta The meta data to find.\n   * @returns {ViewLayer[]} The list of view layers that contain matched data.\n   */\n  searchViewLayers(meta) {\n    const res = [];\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof ViewLayer) {\n        if (this.#layers[i].getViewController().equalImageMeta(meta)) {\n          res.push(this.#layers[i]);\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the view layers data indices.\n   *\n   * @returns {Array} The list of indices.\n   */\n  getViewDataIndices() {\n    const res = [];\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof ViewLayer) {\n        res.push(this.#layers[i].getDataIndex());\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the active draw layer.\n   *\n   * @returns {DrawLayer} The layer.\n   */\n  getActiveDrawLayer() {\n    return this.#layers[this.#activeDrawLayerIndex];\n  }\n\n  /**\n   * Get the draw layers associated to a data index.\n   *\n   * @param {number} index The data index.\n   * @returns {DrawLayer[]} The layers.\n   */\n  getDrawLayersByDataIndex(index) {\n    const res = [];\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof DrawLayer &&\n        this.#layers[i].getDataIndex() === index) {\n        res.push(this.#layers[i]);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Set the active view layer.\n   *\n   * @param {number} index The index of the layer to set as active.\n   */\n  setActiveViewLayer(index) {\n    this.#activeViewLayerIndex = index;\n  }\n\n  /**\n   * Set the active view layer with a data index.\n   *\n   * @param {number} index The data index.\n   */\n  setActiveViewLayerByDataIndex(index) {\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof ViewLayer &&\n        this.#layers[i].getDataIndex() === index) {\n        this.setActiveViewLayer(i);\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the active draw layer.\n   *\n   * @param {number} index The index of the layer to set as active.\n   */\n  setActiveDrawLayer(index) {\n    this.#activeDrawLayerIndex = index;\n  }\n\n  /**\n   * Set the active draw layer with a data index.\n   *\n   * @param {number} index The data index.\n   */\n  setActiveDrawLayerByDataIndex(index) {\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof DrawLayer &&\n        this.#layers[i].getDataIndex() === index) {\n        this.setActiveDrawLayer(i);\n        break;\n      }\n    }\n  }\n\n  /**\n   * Add a view layer.\n   *\n   * @returns {ViewLayer} The created layer.\n   */\n  addViewLayer() {\n    // layer index\n    const viewLayerIndex = this.#layers.length;\n    // create div\n    const div = this.#getNextLayerDiv();\n    // prepend to container\n    this.#containerDiv.append(div);\n    // view layer\n    const layer = new ViewLayer(div);\n    // add layer\n    this.#layers.push(layer);\n    // mark it as active\n    this.setActiveViewLayer(viewLayerIndex);\n    // bind view layer events\n    this.#bindViewLayer(layer);\n    // return\n    return layer;\n  }\n\n  /**\n   * Add a draw layer.\n   *\n   * @returns {DrawLayer} The created layer.\n   */\n  addDrawLayer() {\n    // store active index\n    this.#activeDrawLayerIndex = this.#layers.length;\n    // create div\n    const div = this.#getNextLayerDiv();\n    // prepend to container\n    this.#containerDiv.append(div);\n    // draw layer\n    const layer = new DrawLayer(div);\n    // add layer\n    this.#layers.push(layer);\n    // bind draw layer events\n    this.#bindDrawLayer(layer);\n    // return\n    return layer;\n  }\n\n  /**\n   * Bind view layer events to this.\n   *\n   * @param {ViewLayer} viewLayer The view layer to bind.\n   */\n  #bindViewLayer(viewLayer) {\n    // listen to position change to update other group layers\n    viewLayer.addEventListener(\n      'positionchange', this.updateLayersToPositionChange);\n    // propagate view viewLayer-layer events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      viewLayer.addEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // propagate viewLayer events\n    viewLayer.addEventListener('renderstart', this.#fireEvent);\n    viewLayer.addEventListener('renderend', this.#fireEvent);\n  }\n\n  /**\n   * Bind draw layer events to this.\n   *\n   * @param {DrawLayer} drawLayer The draw layer to bind.\n   */\n  #bindDrawLayer(drawLayer) {\n    // propagate drawLayer events\n    drawLayer.addEventListener('drawcreate', this.#fireEvent);\n    drawLayer.addEventListener('drawdelete', this.#fireEvent);\n  }\n\n  /**\n   * Get the next layer DOM div.\n   *\n   * @returns {HTMLDivElement} A DOM div.\n   */\n  #getNextLayerDiv() {\n    const div = document.createElement('div');\n    div.id = getLayerDivId(this.getDivId(), this.#layers.length);\n    div.className = 'layer';\n    div.style.pointerEvents = 'none';\n    return div;\n  }\n\n  /**\n   * Empty the layer list.\n   */\n  empty() {\n    this.#layers = [];\n    // reset active indices\n    this.#activeViewLayerIndex = null;\n    this.#activeDrawLayerIndex = null;\n    // clean container div\n    const previous = this.#containerDiv.getElementsByClassName('layer');\n    if (previous) {\n      while (previous.length > 0) {\n        previous[0].remove();\n      }\n    }\n  }\n\n  /**\n   * Show a crosshair at a given position.\n   *\n   * @param {Point} [position] The position where to show the crosshair,\n   *   defaults to current position.\n   */\n  #showCrosshairDiv(position) {\n    if (typeof position === 'undefined') {\n      position = this.#currentPosition;\n    }\n\n    // remove previous\n    this.#removeCrosshairDiv();\n\n    // use first layer as base for calculating position and\n    // line sizes\n    const layer0 = this.#layers[0];\n    const vc = layer0.getViewController();\n    const p2D = vc.getPlanePositionFromPosition(position);\n    const displayPos = layer0.planePosToDisplay(p2D.x, p2D.y);\n\n    const lineH = document.createElement('hr');\n    lineH.id = this.getDivId() + '-scroll-crosshair-horizontal';\n    lineH.className = 'horizontal';\n    lineH.style.width = this.#containerDiv.offsetWidth + 'px';\n    lineH.style.left = '0px';\n    lineH.style.top = displayPos.y + 'px';\n\n    const lineV = document.createElement('hr');\n    lineV.id = this.getDivId() + '-scroll-crosshair-vertical';\n    lineV.className = 'vertical';\n    lineV.style.width = this.#containerDiv.offsetHeight + 'px';\n    lineV.style.left = (displayPos.x) + 'px';\n    lineV.style.top = '0px';\n\n    this.#containerDiv.appendChild(lineH);\n    this.#containerDiv.appendChild(lineV);\n  }\n\n  /**\n   * Remove crosshair divs.\n   */\n  #removeCrosshairDiv() {\n    let div = document.getElementById(\n      this.getDivId() + '-scroll-crosshair-horizontal');\n    if (div) {\n      div.remove();\n    }\n    div = document.getElementById(\n      this.getDivId() + '-scroll-crosshair-vertical');\n    if (div) {\n      div.remove();\n    }\n  }\n\n  /**\n   * Update layers (but not the active view layer) to a position change.\n   *\n   * @param {object} event The position change event.\n   */\n  updateLayersToPositionChange = (event) => {\n    // pause positionchange listeners\n    for (let j = 0; j < this.#layers.length; ++j) {\n      if (this.#layers[j] instanceof ViewLayer) {\n        this.#layers[j].removeEventListener(\n          'positionchange', this.updateLayersToPositionChange);\n        this.#layers[j].removeEventListener('positionchange', this.#fireEvent);\n      }\n    }\n\n    const index = new Index(event.value[0]);\n    const position = new Point(event.value[1]);\n\n    // store current position\n    this.#currentPosition = position;\n\n    if (this.#showCrosshair) {\n      this.#showCrosshairDiv(position);\n    }\n\n    // origin of the first view layer\n    let baseViewLayerOrigin0 = null;\n    let baseViewLayerOrigin = null;\n    // update position for all layers except the source one\n    for (let i = 0; i < this.#layers.length; ++i) {\n\n      // update base offset (does not trigger redraw)\n      // TODO check draw layers update\n      let hasSetOffset = false;\n      if (this.#layers[i] instanceof ViewLayer) {\n        const vc = this.#layers[i].getViewController();\n        // origin0 should always be there\n        const origin0 = vc.getOrigin();\n        // depending on position, origin could be undefined\n        const origin = vc.getOrigin(position);\n\n        if (!baseViewLayerOrigin) {\n          baseViewLayerOrigin0 = origin0;\n          baseViewLayerOrigin = origin;\n        } else {\n          if (vc.canSetPosition(position) &&\n            typeof origin !== 'undefined') {\n            // TODO: compensate for possible different orientation between views\n\n            const scrollDiff = baseViewLayerOrigin0.minus(origin0);\n            const scrollOffset = new Vector3D(\n              scrollDiff.getX(), scrollDiff.getY(), scrollDiff.getZ());\n\n            const planeDiff = baseViewLayerOrigin.minus(origin);\n            const planeOffset = new Vector3D(\n              planeDiff.getX(), planeDiff.getY(), planeDiff.getZ());\n\n            hasSetOffset =\n              this.#layers[i].setBaseOffset(scrollOffset, planeOffset);\n          }\n        }\n      }\n\n      // update position (triggers redraw)\n      let hasSetPos = false;\n      if (this.#layers[i].getId() !== event.srclayerid) {\n        hasSetPos = this.#layers[i].setCurrentPosition(position, index);\n      }\n\n      // force redraw if needed\n      if (!hasSetPos && hasSetOffset) {\n        this.#layers[i].draw();\n      }\n    }\n\n    // re-start positionchange listeners\n    for (let k = 0; k < this.#layers.length; ++k) {\n      if (this.#layers[k] instanceof ViewLayer) {\n        this.#layers[k].addEventListener(\n          'positionchange', this.updateLayersToPositionChange);\n        this.#layers[k].addEventListener('positionchange', this.#fireEvent);\n      }\n    }\n  };\n\n  /**\n   * Calculate the fit scale: the scale that fits the largest data.\n   *\n   * @returns {number|undefined} The fit scale.\n   */\n  calculateFitScale() {\n    // check container\n    if (this.#containerDiv.offsetWidth === 0 &&\n      this.#containerDiv.offsetHeight === 0) {\n      throw new Error('Cannot fit to zero sized container.');\n    }\n    // get max size\n    const maxSize = this.getMaxSize();\n    if (typeof maxSize === 'undefined') {\n      return undefined;\n    }\n    // return best fit\n    return Math.min(\n      this.#containerDiv.offsetWidth / maxSize.x,\n      this.#containerDiv.offsetHeight / maxSize.y\n    );\n  }\n\n  /**\n   * Set the layer group fit scale.\n   *\n   * @param {number} scaleIn The fit scale.\n   */\n  setFitScale(scaleIn) {\n    // get maximum size\n    const maxSize = this.getMaxSize();\n    // exit if none\n    if (typeof maxSize === 'undefined') {\n      return;\n    }\n\n    const containerSize = {\n      x: this.#containerDiv.offsetWidth,\n      y: this.#containerDiv.offsetHeight\n    };\n    // offset to keep data centered\n    const fitOffset = {\n      x: -0.5 * (containerSize.x - Math.floor(maxSize.x * scaleIn)),\n      y: -0.5 * (containerSize.y - Math.floor(maxSize.y * scaleIn))\n    };\n\n    // apply to layers\n    for (let j = 0; j < this.#layers.length; ++j) {\n      this.#layers[j].fitToContainer(scaleIn, containerSize, fitOffset);\n    }\n\n    // update crosshair\n    if (this.#showCrosshair) {\n      this.#showCrosshairDiv();\n    }\n  }\n\n  /**\n   * Get the largest data size.\n   *\n   * @returns {object|undefined} The largest size as {x,y}.\n   */\n  getMaxSize() {\n    let maxSize = {x: 0, y: 0};\n    for (let j = 0; j < this.#layers.length; ++j) {\n      if (this.#layers[j] instanceof ViewLayer) {\n        const size = this.#layers[j].getImageWorldSize();\n        if (size.x > maxSize.x) {\n          maxSize.x = size.x;\n        }\n        if (size.y > maxSize.y) {\n          maxSize.y = size.y;\n        }\n      }\n    }\n    if (maxSize.x === 0 && maxSize.y === 0) {\n      maxSize = undefined;\n    }\n    return maxSize;\n  }\n\n  /**\n   * Flip all layers along the Z axis without offset compensation.\n   */\n  flipScaleZ() {\n    this.#baseScale.z *= -1;\n    this.setScale(this.#baseScale);\n  }\n\n  /**\n   * Add scale to the layers. Scale cannot go lower than 0.1.\n   *\n   * @param {number} scaleStep The scale to add.\n   * @param {Point3D} center The scale center Point3D.\n   */\n  addScale(scaleStep, center) {\n    const newScale = {\n      x: this.#scale.x * (1 + scaleStep),\n      y: this.#scale.y * (1 + scaleStep),\n      z: this.#scale.z * (1 + scaleStep)\n    };\n    this.setScale(newScale, center);\n  }\n\n  /**\n   * Set the layers' scale.\n   *\n   * @param {object} newScale The scale to apply as {x,y,z}.\n   * @param {Point3D} [center] The scale center Point3D.\n   * @fires LayerGroup#zoomchange\n   */\n  setScale(newScale, center) {\n    this.#scale = newScale;\n    // apply to layers\n    for (let i = 0; i < this.#layers.length; ++i) {\n      this.#layers[i].setScale(this.#scale, center);\n    }\n\n    // event value\n    const value = [\n      newScale.x,\n      newScale.y,\n      newScale.z\n    ];\n    if (typeof center !== 'undefined') {\n      value.push(center.getX());\n      value.push(center.getY());\n      value.push(center.getZ());\n    }\n\n    /**\n     * Zoom change event.\n     *\n     * @event LayerGroup#zoomchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'zoomchange',\n      value: value\n    });\n  }\n\n  /**\n   * Add translation to the layers.\n   *\n   * @param {object} translation The translation as {x,y,z}.\n   */\n  addTranslation(translation) {\n    this.setOffset({\n      x: this.#offset.x - translation.x,\n      y: this.#offset.y - translation.y,\n      z: this.#offset.z - translation.z\n    });\n  }\n\n  /**\n   * Set the layers' offset.\n   *\n   * @param {object} newOffset The offset as {x,y,z}.\n   * @fires LayerGroup#offsetchange\n   */\n  setOffset(newOffset) {\n    // store\n    this.#offset = newOffset;\n    // apply to layers\n    for (let i = 0; i < this.#layers.length; ++i) {\n      this.#layers[i].setOffset(this.#offset);\n    }\n\n    /**\n     * Offset change event.\n     *\n     * @event LayerGroup#offsetchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'offsetchange',\n      value: [\n        this.#offset.x,\n        this.#offset.y,\n        this.#offset.z\n      ]\n    });\n  }\n\n  /**\n   * Reset the stage to its initial scale and no offset.\n   */\n  reset() {\n    this.setScale(this.#baseScale);\n    this.setOffset({x: 0, y: 0, z: 0});\n  }\n\n  /**\n   * Draw the layer.\n   */\n  draw() {\n    for (let i = 0; i < this.#layers.length; ++i) {\n      this.#layers[i].draw();\n    }\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    for (let i = 0; i < this.#layers.length; ++i) {\n      this.#layers[i].display(flag);\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // LayerGroup class\n","import {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mask segment helper.\n */\nexport class MaskSegmentHelper {\n\n  /**\n   * The associated mask.\n   *\n   * @type {Image}\n   */\n  #mask;\n\n  /**\n   * The segments: array of segment description.\n   *\n   * @type {Array}\n   */\n  #segments;\n\n  /**\n   * List of ids of hidden segments.\n   *\n   * @type {Array}\n   */\n  #hiddenSegments = [];\n\n  /**\n   * @param {Image} mask The associated mask image.\n   */\n  constructor(mask) {\n    this.#mask = mask;\n    this.#segments = mask.getMeta().custom.segments;\n  }\n\n  /**\n   * Check if a segment is part of the inner segment list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {boolean} True if the segment is included.\n   */\n  hasSegment(segmentNumber) {\n    return typeof this.getSegment(segmentNumber) !== 'undefined';\n  }\n\n  /**\n   * Check if a segment is present in a mask image.\n   *\n   * @param {Array} numbers Array of segment numbers.\n   * @returns {Array} Array of boolean set to true\n   *   if the segment is present in the mask.\n   */\n  maskHasSegments(numbers) {\n    // create values using displayValue\n    const values = [];\n    const unknowns = [];\n    for (let i = 0; i < numbers.length; ++i) {\n      const segment = this.getSegment(numbers[i]);\n      if (typeof segment !== 'undefined') {\n        values.push(segment.displayValue);\n      } else {\n        logger.warn('Unknown segment in maskHasSegments: ' + numbers[i]);\n        unknowns.push(i);\n      }\n    }\n    const res = this.#mask.hasValues(values);\n    // insert unknowns as false in result\n    for (let j = 0; j < unknowns.length; ++j) {\n      res.splice(unknowns[j], 0, false);\n    }\n    return res;\n  }\n\n  /**\n   * Get a segment from the inner segment list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {object} The segment.\n   */\n  getSegment(segmentNumber) {\n    return this.#segments.find(function (item) {\n      return item.number === segmentNumber;\n    });\n  }\n\n  /**\n   * Get the inner segment list.\n   *\n   * @returns {Array} The list of segments.\n   */\n  getSegments() {\n    return this.#segments;\n  }\n\n  /**\n   * Set the inner segment list.\n   *\n   * @param {Array} list The segment list.\n   */\n  setSegments(list) {\n    this.#segments = list;\n  }\n\n  /**\n   * Set the hidden segment list.\n   * TODO: not sure if needed...\n   *\n   * @param {Array} list The list of hidden segment numbers.\n   */\n  setHiddenSegments(list) {\n    this.#hiddenSegments = list;\n  }\n\n  /**\n   * Get the index of a segment in the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {number|undefined} The index in the array.\n   */\n  #getHiddenIndex(segmentNumber) {\n    return this.#hiddenSegments.findIndex(function (item) {\n      return item === segmentNumber;\n    });\n  }\n\n  /**\n   * Check if a segment is in the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {boolean} True if the segment is in the list.\n   */\n  isHidden(segmentNumber) {\n    return this.#getHiddenIndex(segmentNumber) !== -1;\n  }\n\n  /**\n   * Add a segment to the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   */\n  addToHidden(segmentNumber) {\n    if (!this.isHidden(segmentNumber)) {\n      this.#hiddenSegments.push(segmentNumber);\n    } else {\n      logger.warn(\n        'Segment is allready in the hidden list: ' + segmentNumber);\n    }\n  }\n\n  /**\n   * Remove a segment from the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   */\n  removeFromHidden(segmentNumber) {\n    const index = this.#getHiddenIndex(segmentNumber);\n    if (index !== -1) {\n      this.#hiddenSegments.splice(index, 1);\n    } else {\n      logger.warn('Segment is not in the hidden list: ' + segmentNumber);\n    }\n  }\n\n  /**\n   * @callback alphaFn\n   * @param {object} value The pixel value.\n   * @param {object} index The values' index.\n   * @returns {number} The value to display.\n   */\n\n  /**\n   * Get the alpha function to apply hidden colors.\n   *\n   * @returns {alphaFn} The corresponding alpha function.\n   */\n  getAlphaFunc() {\n    // get colours\n    const hiddenColours = [{r: 0, g: 0, b: 0}];\n    for (let i = 0; i < this.#hiddenSegments.length; ++i) {\n      const segment = this.getSegment(this.#hiddenSegments[i]);\n      if (typeof segment !== 'undefined') {\n        hiddenColours.push(segment.displayValue);\n      }\n    }\n\n    // create alpha function\n    return function (value/*, index*/) {\n      for (let i = 0; i < hiddenColours.length; ++i) {\n        if (value[0] === hiddenColours[i].r &&\n          value[1] === hiddenColours[i].g &&\n          value[2] === hiddenColours[i].b) {\n          return 0;\n        }\n      }\n      // default\n      return 255;\n    };\n  }\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Delete a segment.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @param {eventFn} cmdCallback The command event callback.\n   * @param {Function} exeCallback The post execution callback.\n   */\n  deleteSegment(segmentNumber, cmdCallback, exeCallback) {\n    const delcmd = new DeleteSegmentCommand(\n      this.#mask, this.getSegment(segmentNumber));\n    delcmd.onExecute = cmdCallback;\n    delcmd.onUndo = cmdCallback;\n    if (delcmd.isValid()) {\n      delcmd.execute();\n      // callback\n      exeCallback(delcmd);\n      // possibly hidden\n      if (this.isHidden(segmentNumber)) {\n        this.removeFromHidden(segmentNumber);\n      }\n    }\n  }\n\n} // class MaskSegmentHelper\n\n/**\n * Delete segment command.\n */\nexport class DeleteSegmentCommand {\n\n  /**\n   * The associated mask.\n   *\n   * @type {Image}\n   */\n  #mask;\n\n  /**\n   * The segment to remove.\n   *\n   * @type {object}\n   */\n  #segment;\n\n  /**\n   * Flag to send creation events.\n   *\n   * @type {boolean}\n   */\n  #isSilent;\n\n  /**\n   * List of offsets.\n   *\n   * @type {Array}\n   */\n  #offsets;\n\n  /**\n   * @param {Image} mask The mask image.\n   * @param {object} segment The segment to remove.\n   * @param {boolean} [silent] Whether to send a creation event or not.\n   */\n  constructor(mask, segment, silent) {\n    this.#mask = mask;\n    this.#segment = segment;\n\n    this.#isSilent = (typeof silent === 'undefined') ? false : silent;\n    // list of offsets with the colour to delete\n    this.#offsets = mask.getOffsets(segment.displayValue);\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Delete-segment';\n  }\n\n  /**\n   * Check if a command is valid and can be executed.\n   *\n   * @returns {boolean} True if the command is valid.\n   */\n  isValid() {\n    return this.#offsets.length !== 0;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DeleteSegmentCommand#masksegmentdelete\n   */\n  execute() {\n    // remove\n    this.#mask.setAtOffsets(this.#offsets, {r: 0, g: 0, b: 0});\n\n    // callback\n    if (!this.#isSilent) {\n      /**\n       * Segment delete event.\n       *\n       * @event DeleteSegmentCommand#masksegmentdelete\n       * @type {object}\n       * @property {number} segmentnumber The segment number.\n       */\n      this.onExecute({\n        type: 'masksegmentdelete',\n        segmentnumber: this.#segment.number\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DeleteSegmentCommand#masksegmentredraw\n   */\n  undo() {\n    // re-draw\n    this.#mask.setAtOffsets(this.#offsets, this.#segment.displayValue);\n\n    // callback\n    /**\n     * Segment redraw event.\n     *\n     * @event DeleteSegmentCommand#masksegmentredraw\n     * @type {object}\n     * @property {number} segmentnumber The segment number.\n     */\n    this.onUndo({\n      type: 'masksegmentredraw',\n      segmentnumber: this.#segment.number\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DeleteSegmentCommand class\n","import {Index} from '../math/index';\nimport {Vector3D} from '../math/vector';\nimport {Point3D} from '../math/point';\nimport {isIdentityMat33} from '../math/matrix';\nimport {Size} from '../image/size';\nimport {Spacing} from '../image/spacing';\nimport {Image} from '../image/image';\nimport {Geometry} from '../image/geometry';\nimport {PlaneHelper} from '../image/planeHelper';\nimport {MaskSegmentHelper} from '../image/maskSegmentHelper';\nimport {\n  getSliceIterator,\n  getIteratorValues,\n  getRegionSliceIterator,\n  getVariableRegionSliceIterator\n} from '../image/iterator';\nimport {lut} from '../image/luts';\nimport {ListenerHandler} from '../utils/listen';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {View} from '../image/view';\nimport {Point, Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * View controller.\n */\nexport class ViewController {\n\n  /**\n   * Associated View.\n   *\n   * @type {View}\n   */\n  #view;\n\n  /**\n   * Associated data index.\n   *\n   * @type {number}\n   */\n  #index;\n\n  /**\n   * Plane helper.\n   *\n   * @type {PlaneHelper}\n   */\n  #planeHelper;\n\n  /**\n   * Mask segment helper.\n   *\n   * @type {MaskSegmentHelper}\n   */\n  #maskSegmentHelper;\n\n  // third dimension player ID (created by setInterval)\n  #playerID = null;\n  // associated data index\n  #dataIndex;\n\n  /**\n   * @param {View} view The associated view.\n   * @param {number} index The associated data index.\n   */\n  constructor(view, index) {\n    // check view\n    if (typeof view.getImage() === 'undefined') {\n      throw new Error('View does not have an image, cannot setup controller');\n    }\n\n    this.#view = view;\n    this.#index = index;\n\n    // setup the plane helper\n    this.#planeHelper = new PlaneHelper(\n      view.getImage().getGeometry().getRealSpacing(),\n      view.getImage().getGeometry().getOrientation(),\n      view.getOrientation()\n    );\n\n    // mask segment helper\n    if (view.getImage().getMeta().Modality === 'SEG') {\n      this.#maskSegmentHelper =\n        new MaskSegmentHelper(view.getImage());\n    }\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the plane helper.\n   *\n   * @returns {object} The helper.\n   */\n  getPlaneHelper() {\n    return this.#planeHelper;\n  }\n\n  /**\n   * Check is the associated image is a mask.\n   *\n   * @returns {boolean} True if the associated image is a mask.\n   */\n  isMask() {\n    return typeof this.#maskSegmentHelper !== 'undefined';\n  }\n\n  /**\n   * Get the mask segment helper.\n   *\n   * @returns {object} The helper.\n   */\n  getMaskSegmentHelper() {\n    return this.#maskSegmentHelper;\n  }\n\n  /**\n   * Apply the hidden segments list by setting\n   * the corresponding alpha function.\n   */\n  applyHiddenSegments() {\n    if (this.isMask) {\n      this.setViewAlphaFunction(this.#maskSegmentHelper.getAlphaFunc());\n    }\n  }\n\n  /**\n   * Delete a segment.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @param {Function} exeCallback The post execution callback.\n   */\n  deleteSegment(segmentNumber, exeCallback) {\n    if (this.isMask) {\n      this.#maskSegmentHelper.deleteSegment(\n        segmentNumber, this.#fireEvent, exeCallback);\n    }\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  initialise() {\n    // set window/level to first preset\n    this.setWindowLevelPresetById(0);\n    // default position\n    this.setCurrentPosition(this.getPositionFromPlanePoint(0, 0));\n  }\n\n  /**\n   * Get the window/level presets names.\n   *\n   * @returns {Array} The presets names.\n   */\n  getWindowLevelPresetsNames() {\n    return this.#view.getWindowPresetsNames();\n  }\n\n  /**\n   * Add window/level presets to the view.\n   *\n   * @param {object} presets A preset object.\n   * @returns {object} The list of presets.\n   */\n  addWindowLevelPresets(presets) {\n    return this.#view.addWindowPresets(presets);\n  }\n\n  /**\n   * Set the window level to the preset with the input name.\n   *\n   * @param {string} name The name of the preset to activate.\n   */\n  setWindowLevelPreset(name) {\n    this.#view.setWindowLevelPreset(name);\n  }\n\n  /**\n   * Set the window level to the preset with the input id.\n   *\n   * @param {number} id The id of the preset to activate.\n   */\n  setWindowLevelPresetById(id) {\n    this.#view.setWindowLevelPresetById(id);\n  }\n\n  /**\n   * Check if the controller is playing.\n   *\n   * @returns {boolean} True if the controler is playing.\n   */\n  isPlaying() {\n    return (this.#playerID !== null);\n  }\n\n  /**\n   * Get the current position.\n   *\n   * @returns {Point} The position.\n   */\n  getCurrentPosition() {\n    return this.#view.getCurrentPosition();\n  }\n\n  /**\n   * Get the current index.\n   *\n   * @returns {Index} The current index.\n   */\n  getCurrentIndex() {\n    return this.#view.getCurrentIndex();\n  }\n\n  /**\n   * Get the current oriented index.\n   *\n   * @returns {Index} The index.\n   */\n  getCurrentOrientedIndex() {\n    let res = this.#view.getCurrentIndex();\n    if (typeof this.#view.getOrientation() !== 'undefined') {\n      // view oriented => image de-oriented\n      const vector = this.#planeHelper.getImageDeOrientedVector3D(\n        new Vector3D(res.get(0), res.get(1), res.get(2))\n      );\n      res = new Index([\n        vector.getX(), vector.getY(), vector.getZ()\n      ]);\n    }\n    return res;\n  }\n\n  /**\n   * Get the scroll index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    return this.#view.getScrollIndex();\n  }\n\n  /**\n   * Get the current scroll index value.\n   *\n   * @returns {object} The value.\n   */\n  getCurrentScrollIndexValue() {\n    return this.#view.getCurrentIndex().get(this.#view.getScrollIndex());\n  }\n\n  /**\n   * Get the origin at a given posittion.\n   *\n   * @param {Point} position The input position.\n   * @returns {Point} The origin.\n   */\n  getOrigin(position) {\n    return this.#view.getOrigin(position);\n  }\n\n  /**\n   * Get the current scroll position value.\n   *\n   * @returns {object} The value.\n   */\n  getCurrentScrollPosition() {\n    const scrollIndex = this.#view.getScrollIndex();\n    return this.#view.getCurrentPosition().get(scrollIndex);\n  }\n\n  /**\n   * Generate display image data to be given to a canvas.\n   *\n   * @param {ImageData} array The array to fill in.\n   * @param {Index} index Optional index at which to generate,\n   *   otherwise generates at current index.\n   */\n  generateImageData(array, index) {\n    this.#view.generateImageData(array, index);\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {Image} img The associated image.\n   * @param {number} index The data index of the image.\n   */\n  setImage(img, index) {\n    this.#view.setImage(img);\n    this.#dataIndex = index;\n  }\n\n  /**\n   * Get the current spacing.\n   *\n   * @returns {Array} The 2D spacing.\n   */\n  get2DSpacing() {\n    const spacing = this.#view.getImage().getGeometry().getSpacing();\n    return [spacing.get(0), spacing.get(1)];\n  }\n\n  /**\n   * Get the image rescaled value at the input position.\n   *\n   * @param {Point} position the input position.\n   * @returns {number|undefined} The image value or undefined if out of bounds\n   *   or no quantifiable (for ex RGB).\n   */\n  getRescaledImageValue(position) {\n    const image = this.#view.getImage();\n    if (!image.canQuantify()) {\n      return;\n    }\n    const geometry = image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    let value;\n    if (geometry.isIndexInBounds(index)) {\n      value = image.getRescaledValueAtIndex(index);\n    }\n    return value;\n  }\n\n  /**\n   * Get the image pixel unit.\n   *\n   * @returns {string} The unit\n   */\n  getPixelUnit() {\n    return this.#view.getImage().getMeta().pixelUnit;\n  }\n\n  /**\n   * Get some values from the associated image in a region.\n   *\n   * @param {Point2D} min Minimum point.\n   * @param {Point2D} max Maximum point.\n   * @returns {Array} A list of values.\n   */\n  getImageRegionValues(min, max) {\n    let image = this.#view.getImage();\n    const orientation = this.#view.getOrientation();\n    let position = this.getCurrentIndex();\n    let rescaled = true;\n\n    // created oriented slice if needed\n    if (!isIdentityMat33(orientation)) {\n      // generate slice values\n      const sliceIter = getSliceIterator(\n        image,\n        position,\n        rescaled,\n        orientation\n      );\n      const sliceValues = getIteratorValues(sliceIter);\n      // oriented geometry\n      const orientedSize = image.getGeometry().getSize(orientation);\n      const sizeValues = orientedSize.getValues();\n      sizeValues[2] = 1;\n      const sliceSize = new Size(sizeValues);\n      const orientedSpacing = image.getGeometry().getSpacing(orientation);\n      const spacingValues = orientedSpacing.getValues();\n      spacingValues[2] = 1;\n      const sliceSpacing = new Spacing(spacingValues);\n      const sliceOrigin = new Point3D(0, 0, 0);\n      const sliceGeometry =\n        new Geometry(sliceOrigin, sliceSize, sliceSpacing);\n      // slice image\n      // @ts-ignore\n      image = new Image(sliceGeometry, sliceValues);\n      // update position\n      position = new Index([0, 0, 0]);\n      rescaled = false;\n    }\n\n    // get region values\n    const iter = getRegionSliceIterator(\n      image, position, rescaled, min, max);\n    let values = [];\n    if (iter) {\n      values = getIteratorValues(iter);\n    }\n    return values;\n  }\n\n  /**\n   * Get some values from the associated image in variable regions.\n   *\n   * @param {Array} regions A list of regions.\n   * @returns {Array} A list of values.\n   */\n  getImageVariableRegionValues(regions) {\n    const iter = getVariableRegionSliceIterator(\n      this.#view.getImage(),\n      this.getCurrentIndex(),\n      true, regions\n    );\n    let values = [];\n    if (iter) {\n      values = getIteratorValues(iter);\n    }\n    return values;\n  }\n\n  /**\n   * Can the image values be quantified?\n   *\n   * @returns {boolean} True if possible.\n   */\n  canQuantifyImage() {\n    return this.#view.getImage().canQuantify();\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if possible.\n   */\n  canWindowLevel() {\n    return this.#view.getImage().canWindowLevel();\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @returns {boolean} True if the data has either the third dimension\n   * or above greater than one.\n   */\n  canScroll() {\n    return this.#view.getImage().canScroll(this.#view.getOrientation());\n  }\n\n  /**\n   * Get the image size.\n   *\n   * @returns {Size} The size.\n   */\n  getImageSize() {\n    return this.#view.getImage().getGeometry().getSize(\n      this.#view.getOrientation());\n  }\n\n  /**\n   * Get the image world (mm) 2D size.\n   *\n   * @returns {object} The 2D size as {x,y}.\n   */\n  getImageWorldSize() {\n    const geometry = this.#view.getImage().getGeometry();\n    const size = geometry.getSize(this.#view.getOrientation()).get2D();\n    const spacing = geometry.getSpacing(this.#view.getOrientation()).get2D();\n    return {\n      x: size.x * spacing.x,\n      y: size.y * spacing.y\n    };\n  }\n\n  /**\n   * Get the image rescaled data range.\n   *\n   * @returns {object} The range as {min, max}.\n   */\n  getImageRescaledDataRange() {\n    return this.#view.getImage().getRescaledDataRange();\n  }\n\n  /**\n   * Compare the input meta data to the associated image one.\n   *\n   * @param {object} meta The meta data.\n   * @returns {boolean} True if the associated image has equal meta data.\n   */\n  equalImageMeta(meta) {\n    const imageMeta = this.#view.getImage().getMeta();\n    // loop through input meta keys\n    const metaKeys = Object.keys(meta);\n    for (let i = 0; i < metaKeys.length; ++i) {\n      const metaKey = metaKeys[i];\n      if (typeof imageMeta[metaKey] === 'undefined') {\n        return false;\n      }\n      if (imageMeta[metaKey] !== meta[metaKey]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Check is the provided position can be set.\n   *\n   * @param {Point} position The position.\n   * @returns {boolean} True is the position is in bounds.\n   */\n  canSetPosition(position) {\n    return this.#view.canSetPosition(position);\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} pos The position.\n   * @param {boolean} [silent] If true, does not fire a\n   *   positionchange event.\n   * @returns {boolean} False if not in bounds.\n   */\n  setCurrentPosition(pos, silent) {\n    return this.#view.setCurrentPosition(pos, silent);\n  }\n\n  /**\n   * Get a position from a 2D (x,y) position.\n   *\n   * @param {number} x The column position.\n   * @param {number} y The row position.\n   * @returns {Point} The associated position.\n   */\n  getPositionFromPlanePoint(x, y) {\n    // keep third direction\n    const k = this.getCurrentScrollIndexValue();\n    const planePoint = new Point3D(x, y, k);\n    // de-orient\n    const point = this.#planeHelper.getImageOrientedPoint3D(planePoint);\n    // ~indexToWorld to not loose precision\n    const geometry = this.#view.getImage().getGeometry();\n    const point3D = geometry.pointToWorld(point);\n    // merge with current position to keep extra dimensions\n    return this.getCurrentPosition().mergeWith3D(point3D);\n  }\n\n  /**\n   * Get a 2D (x,y) position from a position.\n   *\n   * @param {Point} point The 3D position.\n   * @returns {object} The 2D position.\n   */\n  getPlanePositionFromPosition(point) {\n    // orient\n    const geometry = this.#view.getImage().getGeometry();\n    // ~worldToIndex to not loose precision\n    const point3D = geometry.worldToPoint(point);\n    const planePoint = this.#planeHelper.getImageDeOrientedPoint3D(point3D);\n    // return\n    return {\n      x: planePoint.getX(),\n      y: planePoint.getY(),\n    };\n  }\n\n  /**\n   * Set the current index.\n   *\n   * @param {Index} index The index.\n   * @param {boolean} silent If true, does not fire a positionchange event.\n   * @returns {boolean} False if not in bounds.\n   */\n  setCurrentIndex(index, silent) {\n    return this.#view.setCurrentIndex(index, silent);\n  }\n\n  /**\n   * Get a plane 3D position from a plane 2D position: does not compensate\n   *   for the image origin. Needed for setting the scale center...\n   *\n   * @param {object} point2D The 2D position as {x,y}.\n   * @returns {Point3D} The 3D point.\n   */\n  getPlanePositionFromPlanePoint(point2D) {\n    // keep third direction\n    const k = this.getCurrentScrollIndexValue();\n    const planePoint = new Point3D(point2D.x, point2D.y, k);\n    // de-orient\n    const point = this.#planeHelper.getTargetDeOrientedPoint3D(planePoint);\n    // ~indexToWorld to not loose precision\n    const geometry = this.#view.getImage().getGeometry();\n    const spacing = geometry.getRealSpacing();\n    return new Point3D(\n      point.getX() * spacing.get(0),\n      point.getY() * spacing.get(1),\n      point.getZ() * spacing.get(2));\n  }\n\n  /**\n   * Get a 3D offset from a plane one.\n   *\n   * @param {object} offset2D The plane offset as {x,y}.\n   * @returns {Vector3D} The 3D world offset.\n   */\n  getOffset3DFromPlaneOffset(offset2D) {\n    return this.#planeHelper.getOffset3DFromPlaneOffset(offset2D);\n  }\n\n  /**\n   * Increment the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementIndex(dim, silent) {\n    return this.#view.incrementIndex(dim, silent);\n  }\n\n  /**\n   * Decrement the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementIndex(dim, silent) {\n    return this.#view.decrementIndex(dim, silent);\n  }\n\n  /**\n   * Decrement the scroll dimension index.\n   *\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementScrollIndex(silent) {\n    return this.#view.decrementScrollIndex(silent);\n  }\n\n  /**\n   * Increment the scroll dimension index.\n   *\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementScrollIndex(silent) {\n    return this.#view.incrementScrollIndex(silent);\n  }\n\n  /**\n   * Scroll play: loop through all slices.\n   */\n  play() {\n    // ensure data is scrollable: dim >= 3\n    if (!this.canScroll()) {\n      return;\n    }\n    if (this.#playerID === null) {\n      const image = this.#view.getImage();\n      const recommendedDisplayFrameRate =\n        image.getMeta().RecommendedDisplayFrameRate;\n      const milliseconds = this.#view.getPlaybackMilliseconds(\n        recommendedDisplayFrameRate);\n      const size = image.getGeometry().getSize();\n      const canScroll3D = size.canScroll3D();\n\n      this.#playerID = setInterval(() => {\n        let canDoMore = false;\n        if (canScroll3D) {\n          canDoMore = this.incrementScrollIndex();\n        } else {\n          canDoMore = this.incrementIndex(3);\n        }\n        // end of scroll, loop back\n        if (!canDoMore) {\n          const pos1 = this.getCurrentIndex();\n          const values = pos1.getValues();\n          const orientation = this.#view.getOrientation();\n          if (canScroll3D) {\n            values[orientation.getThirdColMajorDirection()] = 0;\n          } else {\n            values[3] = 0;\n          }\n          const index = new Index(values);\n          const geometry = this.#view.getImage().getGeometry();\n          this.setCurrentPosition(geometry.indexToWorld(index));\n        }\n      }, milliseconds);\n    } else {\n      this.stop();\n    }\n  }\n\n  /**\n   * Stop scroll playing.\n   */\n  stop() {\n    if (this.#playerID !== null) {\n      clearInterval(this.#playerID);\n      this.#playerID = null;\n    }\n  }\n\n  /**\n   * Get the window/level.\n   *\n   * @returns {object} The window center and width.\n   */\n  getWindowLevel() {\n    return {\n      width: this.#view.getCurrentWindowLut().getWindowLevel().getWidth(),\n      center: this.#view.getCurrentWindowLut().getWindowLevel().getCenter()\n    };\n  }\n\n  /**\n   * Set the window/level.\n   *\n   * @param {number} wc The window center.\n   * @param {number} ww The window width.\n   */\n  setWindowLevel(wc, ww) {\n    this.#view.setWindowLevel(wc, ww);\n  }\n\n  /**\n   * Get the colour map.\n   *\n   * @returns {object} The colour map.\n   */\n  getColourMap() {\n    return this.#view.getColourMap();\n  }\n\n  /**\n   * Set the colour map.\n   *\n   * @param {object} colourMap The colour map.\n   */\n  setColourMap(colourMap) {\n    this.#view.setColourMap(colourMap);\n  }\n\n  /**\n   * @callback alphaFn\n   * @param {object} value The pixel value.\n   * @param {object} index The values' index.\n   * @returns {number} The value to display.\n   */\n\n  /**\n   * Set the view per value alpha function.\n   *\n   * @param {alphaFn} func The function.\n   */\n  setViewAlphaFunction(func) {\n    this.#view.setAlphaFunction(func);\n  }\n\n  /**\n   * Set the colour map from a name.\n   *\n   * @param {string} name The name of the colour map to set.\n   */\n  setColourMapFromName(name) {\n    // check if we have it\n    if (!lut[name]) {\n      throw new Error('Unknown colour map: \\'' + name + '\\'');\n    }\n    // enable it\n    this.setColourMap(lut[name]);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    event.dataid = this.#dataIndex;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class ViewController\n","import {logger} from '../utils/logger';\n\n/**\n * List of interaction event names.\n */\nexport const InteractionEventNames = [\n  'mousedown',\n  'mousemove',\n  'mouseup',\n  'mouseout',\n  'wheel',\n  'dblclick',\n  'touchstart',\n  'touchmove',\n  'touchend'\n];\n\n/**\n * Get a HTML element associated to a container div.\n *\n * @param {string} containerDivId The id of the container div.\n * @param {string} name The name or id to find.\n * @returns {object} The found element or null.\n * @deprecated\n */\nexport function getElement(containerDivId, name) {\n  // get by class in the container div\n  const parent = document.getElementById(containerDivId);\n  if (!parent) {\n    return null;\n  }\n  const elements = parent.getElementsByClassName(name);\n  // getting the last element since some libraries (ie jquery-mobile) create\n  // span in front of regular tags (such as select)...\n  let element = elements[elements.length - 1];\n  // if not found get by id with 'containerDivId-className'\n  if (typeof element === 'undefined') {\n    element = document.getElementById(containerDivId + '-' + name);\n  }\n  return element;\n}\n\n/**\n * Prompt the user for some text. Uses window.prompt.\n *\n * @param {string} message The message in front of the input field.\n * @param {string} value The input default value.\n * @returns {string} The new value.\n */\nexport function prompt(message, value) {\n  return prompt(message, value);\n}\n\n/**\n * Custom UI object for client defined UI.\n */\nexport const customUI = {};\n\n/**\n * Get the positions (without the parent offset) of a list of touch events.\n *\n * @param {Array} touches The list of touch events.\n * @returns {Array} The list of positions of the touch events.\n */\nfunction getTouchesPositions(touches) {\n  // get the touch offset from all its parents\n  let offsetLeft = 0;\n  let offsetTop = 0;\n  if (touches.length !== 0 &&\n    typeof touches[0].target !== 'undefined') {\n    let offsetParent = touches[0].target.offsetParent;\n    while (offsetParent) {\n      if (!isNaN(offsetParent.offsetLeft)) {\n        offsetLeft += offsetParent.offsetLeft;\n      }\n      if (!isNaN(offsetParent.offsetTop)) {\n        offsetTop += offsetParent.offsetTop;\n      }\n      offsetParent = offsetParent.offsetParent;\n    }\n  } else {\n    logger.debug('No touch target offset parent.');\n  }\n  // set its position\n  const positions = [];\n  for (let i = 0; i < touches.length; ++i) {\n    positions.push({\n      x: touches[i].pageX - offsetLeft,\n      y: touches[i].pageY - offsetTop\n    });\n  }\n  return positions;\n}\n\n/**\n * Get the offset of an input event.\n *\n * @param {object} event The event to get the offset from.\n * @returns {Array} The array of offsets.\n */\nexport function getEventOffset(event) {\n  let positions = [];\n  if (typeof event.targetTouches !== 'undefined' &&\n    event.targetTouches.length !== 0) {\n    // see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/targetTouches\n    positions = getTouchesPositions(event.targetTouches);\n  } else if (typeof event.changedTouches !== 'undefined' &&\n    event.changedTouches.length !== 0) {\n    // see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/changedTouches\n    positions = getTouchesPositions(event.changedTouches);\n  } else {\n    // offsetX/Y: the offset in the X coordinate of the mouse pointer\n    // between that event and the padding edge of the target node\n    // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/offsetX\n    // https://caniuse.com/mdn-api_mouseevent_offsetx\n    positions.push({\n      x: event.offsetX,\n      y: event.offsetY\n    });\n  }\n  return positions;\n}\n\n/**\n * Test if a canvas with the input size can be created.\n *\n * @see https://github.com/ivmartel/dwv/issues/902\n * @see https://github.com/jhildenbiddle/canvas-size/blob/v1.2.4/src/canvas-test.js\n * @param {number} width The canvas width.\n * @param {number} height The canvas height.\n * @returns {boolean} True is the canvas can be created.\n */\nexport function canCreateCanvas(width, height) {\n  // test canvas with input size\n  const testCvs = document.createElement('canvas');\n  testCvs.width = width;\n  testCvs.height = height;\n  // crop canvas to speed up test\n  const cropCvs = document.createElement('canvas');\n  cropCvs.width = 1;\n  cropCvs.height = 1;\n  // contexts\n  const testCtx = testCvs.getContext('2d');\n  const cropCtx = cropCvs.getContext('2d');\n  // set data\n  if (testCtx) {\n    testCtx.fillRect(width - 1, height - 1, 1, 1);\n    // Render the test pixel in the bottom-right corner of the\n    // test canvas in the top-left of the 1x1 crop canvas. This\n    // dramatically reducing the time for getImageData to complete.\n    cropCtx.drawImage(testCvs, width - 1, height - 1, 1, 1, 0, 0, 1, 1);\n  }\n  // Verify image data (alpha component, Pass = 255, Fail = 0)\n  return cropCtx && cropCtx.getImageData(0, 0, 1, 1).data[3] !== 0;\n}\n","import {Index} from '../math/index';\nimport {ListenerHandler} from '../utils/listen';\nimport {viewEventNames} from '../image/view';\nimport {ViewController} from '../app/viewController';\nimport {\n  canCreateCanvas,\n  InteractionEventNames\n} from './generic';\nimport {getScaledOffset} from './layerGroup';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Vector3D} from '../math/vector';\nimport {Point, Point3D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * View layer.\n */\nexport class ViewLayer {\n\n  /**\n   * Container div.\n   *\n   * @type {HTMLElement}\n   */\n  #containerDiv;\n\n  /**\n   * The view controller.\n   *\n   * @type {object}\n   */\n  #viewController = null;\n\n  /**\n   * The main display canvas.\n   *\n   * @type {object}\n   */\n  #canvas = null;\n\n  /**\n   * The offscreen canvas: used to store the raw, unscaled pixel data.\n   *\n   * @type {object}\n   */\n  #offscreenCanvas = null;\n\n  /**\n   * The associated CanvasRenderingContext2D.\n   *\n   * @type {object}\n   */\n  #context = null;\n\n  /**\n   * Flag to know if the current position is valid.\n   *\n   * @type {boolean}\n   */\n  #isValidPosition = true;\n\n  /**\n   * The image data array.\n   *\n   * @type {ImageData}\n   */\n  #imageData = null;\n\n  /**\n   * The layer base size as {x,y}.\n   *\n   * @type {object}\n   */\n  #baseSize;\n\n  /**\n   * The layer base spacing as {x,y}.\n   *\n   * @type {object}\n   */\n  #baseSpacing;\n\n  /**\n   * The layer opacity.\n   *\n   * @type {number}\n   */\n  #opacity = 1;\n\n  /**\n   * The layer scale.\n   *\n   * @type {object}\n   */\n  #scale = {x: 1, y: 1};\n\n  /**\n   * The layer fit scale.\n   *\n   * @type {object}\n   */\n  #fitScale = {x: 1, y: 1};\n\n  /**\n   * The layer offset.\n   *\n   * @type {object}\n   */\n  #offset = {x: 0, y: 0};\n\n  /**\n   * The base layer offset.\n   *\n   * @type {object}\n   */\n  #baseOffset = {x: 0, y: 0};\n\n  /**\n   * The view offset.\n   *\n   * @type {object}\n   */\n  #viewOffset = {x: 0, y: 0};\n\n  /**\n   * The zoom offset.\n   *\n   * @type {object}\n   */\n  #zoomOffset = {x: 0, y: 0};\n\n  /**\n   * The flip offset.\n   *\n   * @type {object}\n   */\n  #flipOffset = {x: 0, y: 0};\n\n  /**\n   * Data update flag.\n   *\n   * @type {boolean}\n   */\n  #needsDataUpdate = null;\n\n  /**\n   * The associated data index.\n   *\n   * @type {number}\n   */\n  #dataIndex = null;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Image smoothing flag.\n   * see: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled\n   *\n   * @type {boolean}\n   */\n  #imageSmoothingEnabled = false;\n\n  /**\n   * @param {HTMLElement} containerDiv The layer div, its id will be used\n   *   as this layer id.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n    // specific css class name\n    this.#containerDiv.className += ' viewLayer';\n  }\n\n  /**\n   * Get the associated data index.\n   *\n   * @returns {number} The index.\n   */\n  getDataIndex() {\n    return this.#dataIndex;\n  }\n\n  /**\n   * Set the imageSmoothingEnabled flag value.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  enableImageSmoothing(flag) {\n    this.#imageSmoothingEnabled = flag;\n  }\n\n  /**\n   * Set the associated view.\n   *\n   * @param {object} view The view.\n   * @param {number} index The associated data index.\n   */\n  setView(view, index) {\n    this.#dataIndex = index;\n    // local listeners\n    view.addEventListener('wlchange', this.#onWLChange);\n    view.addEventListener('colourchange', this.#onColourChange);\n    view.addEventListener('positionchange', this.#onPositionChange);\n    view.addEventListener('alphafuncchange', this.#onAlphaFuncChange);\n    // view events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      view.addEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // create view controller\n    this.#viewController = new ViewController(view, index);\n  }\n\n  /**\n   * Get the view controller.\n   *\n   * @returns {ViewController} The controller.\n   */\n  getViewController() {\n    return this.#viewController;\n  }\n\n  /**\n   * Get the canvas image data.\n   *\n   * @returns {object} The image data.\n   */\n  getImageData() {\n    return this.#imageData;\n  }\n\n  /**\n   * Handle an image set event.\n   *\n   * @param {object} event The event.\n   */\n  onimageset = (event) => {\n    // event.value = [index, image]\n    if (this.#dataIndex === event.dataid) {\n      this.#viewController.setImage(event.value[0], this.#dataIndex);\n      this.#setBaseSize(this.#viewController.getImageSize().get2D());\n      this.#needsDataUpdate = true;\n    }\n  };\n\n  /**\n   * Handle an image change event.\n   *\n   * @param {object} event The event.\n   */\n  onimagechange = (event) => {\n    // event.value = [index]\n    if (this.#dataIndex === event.dataid) {\n      this.#needsDataUpdate = true;\n    }\n  };\n\n  // common layer methods [start] ---------------\n\n  /**\n   * Get the id of the layer.\n   *\n   * @returns {string} The string id.\n   */\n  getId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Get the layer base size (without scale).\n   *\n   * @returns {object} The size as {x,y}.\n   */\n  getBaseSize() {\n    return this.#baseSize;\n  }\n\n  /**\n   * Get the image world (mm) 2D size.\n   *\n   * @returns {object} The 2D size as {x,y}.\n   */\n  getImageWorldSize() {\n    return this.#viewController.getImageWorldSize();\n  }\n\n  /**\n   * Get the layer opacity.\n   *\n   * @returns {number} The opacity ([0:1] range).\n   */\n  getOpacity() {\n    return this.#opacity;\n  }\n\n  /**\n   * Set the layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    if (alpha === this.#opacity) {\n      return;\n    }\n\n    this.#opacity = Math.min(Math.max(alpha, 0), 1);\n\n    /**\n     * Opacity change event.\n     *\n     * @event App#opacitychange\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    const event = {\n      type: 'opacitychange',\n      value: [this.#opacity]\n    };\n    this.#fireEvent(event);\n  }\n\n  /**\n   * Add a flip offset along the layer X axis.\n   */\n  addFlipOffsetX() {\n    // flip scale is handled by layer group\n    // flip offset\n    this.#flipOffset.x += this.#canvas.width / this.#scale.x;\n    this.#offset.x += this.#flipOffset.x;\n  }\n\n  /**\n   * Add a flip offset along the layer Y axis.\n   */\n  addFlipOffsetY() {\n    // flip scale is handled by layer group\n    // flip offset\n    this.#flipOffset.y += this.#canvas.height / this.#scale.y;\n    this.#offset.y += this.#flipOffset.y;\n  }\n\n  /**\n   * Set the layer scale.\n   *\n   * @param {object} newScale The scale as {x,y}.\n   * @param {Point3D} center The scale center.\n   */\n  setScale(newScale, center) {\n    const helper = this.#viewController.getPlaneHelper();\n    const orientedNewScale = helper.getTargetOrientedPositiveXYZ(newScale);\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n\n    if (Math.abs(newScale.x) === 1 &&\n      Math.abs(newScale.y) === 1 &&\n      Math.abs(newScale.z) === 1) {\n      // reset zoom offset for scale=1\n      const resetOffset = {\n        x: this.#offset.x - this.#zoomOffset.x,\n        y: this.#offset.y - this.#zoomOffset.y\n      };\n      // store new offset\n      this.#zoomOffset = {x: 0, y: 0};\n      this.#offset = resetOffset;\n    } else {\n      if (typeof center !== 'undefined') {\n        let worldCenter = helper.getPlaneOffsetFromOffset3D({\n          x: center.getX(),\n          y: center.getY(),\n          z: center.getZ()\n        });\n        // center was obtained with viewLayer.displayToMainPlanePos\n        // compensated for baseOffset\n        // TODO: justify...\n        worldCenter = {\n          x: worldCenter.x + this.#baseOffset.x,\n          y: worldCenter.y + this.#baseOffset.y\n        };\n\n        const newOffset = getScaledOffset(\n          this.#offset, this.#scale, finalNewScale, worldCenter);\n\n        const newZoomOffset = {\n          x: this.#zoomOffset.x + newOffset.x - this.#offset.x,\n          y: this.#zoomOffset.y + newOffset.y - this.#offset.y\n        };\n        // store new offset\n        this.#zoomOffset = newZoomOffset;\n        this.#offset = newOffset;\n      }\n    }\n\n    // store new scale\n    this.#scale = finalNewScale;\n  }\n\n  /**\n   * Set the base layer offset. Updates the layer offset.\n   *\n   * @param {Vector3D} scrollOffset The scroll offset vector.\n   * @param {Vector3D} planeOffset The plane offset vector.\n   * @returns {boolean} True if the offset was updated.\n   */\n  setBaseOffset(scrollOffset, planeOffset) {\n    const helper = this.#viewController.getPlaneHelper();\n    const scrollIndex = helper.getNativeScrollIndex();\n    const newOffset = helper.getPlaneOffsetFromOffset3D({\n      x: scrollIndex === 0 ? scrollOffset.getX() : planeOffset.getX(),\n      y: scrollIndex === 1 ? scrollOffset.getY() : planeOffset.getY(),\n      z: scrollIndex === 2 ? scrollOffset.getZ() : planeOffset.getZ(),\n    });\n    const needsUpdate = this.#baseOffset.x !== newOffset.x ||\n    this.#baseOffset.y !== newOffset.y;\n    // reset offset if needed\n    if (needsUpdate) {\n      this.#offset = {\n        x: this.#offset.x - this.#baseOffset.x + newOffset.x,\n        y: this.#offset.y - this.#baseOffset.y + newOffset.y\n      };\n      this.#baseOffset = newOffset;\n    }\n    return needsUpdate;\n  }\n\n  /**\n   * Set the layer offset.\n   *\n   * @param {object} newOffset The offset as {x,y}.\n   */\n  setOffset(newOffset) {\n    const helper = this.#viewController.getPlaneHelper();\n    const planeNewOffset = helper.getPlaneOffsetFromOffset3D(newOffset);\n    this.#offset = {\n      x: planeNewOffset.x +\n        this.#viewOffset.x +\n        this.#baseOffset.x +\n        this.#zoomOffset.x +\n        this.#flipOffset.x,\n      y: planeNewOffset.y +\n        this.#viewOffset.y +\n        this.#baseOffset.y +\n        this.#zoomOffset.y +\n        this.#flipOffset.y\n    };\n  }\n\n  /**\n   * Transform a display position to an index.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {Index} The equivalent index.\n   */\n  displayToPlaneIndex(x, y) {\n    const planePos = this.displayToPlanePos(x, y);\n    return new Index([\n      Math.floor(planePos.x),\n      Math.floor(planePos.y)\n    ]);\n  }\n\n  /**\n   * Remove scale from a display position.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {object} The de-scaled position as {x,y}.\n   */\n  displayToPlaneScale(x, y) {\n    return {\n      x: x / this.#scale.x,\n      y: y / this.#scale.y\n    };\n  }\n\n  /**\n   * Get a plane position from a display position.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {object} The plane position as {x,y}.\n   */\n  displayToPlanePos(x, y) {\n    const deScaled = this.displayToPlaneScale(x, y);\n    return {\n      x: deScaled.x + this.#offset.x,\n      y: deScaled.y + this.#offset.y\n    };\n  }\n\n  /**\n   * Get a display position from a plane position.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {object} The display position as {x,y}.\n   */\n  planePosToDisplay(x, y) {\n    return {\n      x: (x - this.#offset.x + this.#baseOffset.x) * this.#scale.x,\n      y: (y - this.#offset.y + this.#baseOffset.y) * this.#scale.y\n    };\n  }\n\n  /**\n   * Get a main plane position from a display position.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {object} The main plane position as {x,y}.\n   */\n  displayToMainPlanePos(x, y) {\n    const planePos = this.displayToPlanePos(x, y);\n    return {\n      x: planePos.x - this.#baseOffset.x,\n      y: planePos.y - this.#baseOffset.y\n    };\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    this.#containerDiv.style.display = flag ? '' : 'none';\n  }\n\n  /**\n   * Check if the layer is visible.\n   *\n   * @returns {boolean} True if the layer is visible.\n   */\n  isVisible() {\n    return this.#containerDiv.style.display === '';\n  }\n\n  /**\n   * Draw the content (imageData) of the layer.\n   * The imageData variable needs to be set\n   *\n   * @fires App#renderstart\n   * @fires App#renderend\n   */\n  draw() {\n    // skip for non valid position\n    if (!this.#isValidPosition) {\n      return;\n    }\n\n    /**\n     * Render start event.\n     *\n     * @event App#renderstart\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    let event = {\n      type: 'renderstart',\n      layerid: this.getId(),\n      dataid: this.getDataIndex()\n    };\n    this.#fireEvent(event);\n\n    // update data if needed\n    if (this.#needsDataUpdate) {\n      this.#updateImageData();\n    }\n\n    // context opacity\n    this.#context.globalAlpha = this.#opacity;\n\n    // clear context\n    this.clear();\n\n    // draw the cached canvas on the context\n    // transform takes as input a, b, c, d, e, f to create\n    // the transform matrix (column-major order):\n    // [ a c e ]\n    // [ b d f ]\n    // [ 0 0 1 ]\n    this.#context.setTransform(\n      this.#scale.x,\n      0,\n      0,\n      this.#scale.y,\n      -1 * this.#offset.x * this.#scale.x,\n      -1 * this.#offset.y * this.#scale.y\n    );\n\n    // disable smoothing (set just before draw, could be reset by resize)\n    this.#context.imageSmoothingEnabled = this.#imageSmoothingEnabled;\n    // draw image\n    this.#context.drawImage(this.#offscreenCanvas, 0, 0);\n\n    /**\n     * Render end event.\n     *\n     * @event App#renderend\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    event = {\n      type: 'renderend',\n      layerid: this.getId(),\n      dataid: this.getDataIndex()\n    };\n    this.#fireEvent(event);\n  }\n\n  /**\n   * Initialise the layer: set the canvas and context\n   *\n   * @param {object} size The image size as {x,y}.\n   * @param {object} spacing The image spacing as {x,y}.\n   * @param {number} alpha The initial data opacity.\n   */\n  initialise(size, spacing, alpha) {\n    // set locals\n    this.#baseSpacing = spacing;\n    this.#opacity = Math.min(Math.max(alpha, 0), 1);\n\n    // create canvas\n    // (canvas size is set in fitToContainer)\n    this.#canvas = document.createElement('canvas');\n    this.#containerDiv.appendChild(this.#canvas);\n\n    // check that the getContext method exists\n    if (!this.#canvas.getContext) {\n      alert('Error: no canvas.getContext method.');\n      return;\n    }\n    // get the 2D context\n    this.#context = this.#canvas.getContext('2d');\n    if (!this.#context) {\n      alert('Error: failed to get the 2D context.');\n      return;\n    }\n\n    // off screen canvas\n    this.#offscreenCanvas = document.createElement('canvas');\n\n    // set base size: needs an existing context and off screen canvas\n    this.#setBaseSize(size);\n\n    // update data on first draw\n    this.#needsDataUpdate = true;\n  }\n\n  /**\n   * Set the base size of the layer.\n   *\n   * @param {object} size The size as {x,y}.\n   */\n  #setBaseSize(size) {\n    // check canvas creation\n    if (!canCreateCanvas(size.x, size.y)) {\n      throw new Error('Cannot create canvas with size ' +\n        size.x + ', ' + size.y);\n    }\n\n    // set local\n    this.#baseSize = size;\n\n    // off screen canvas\n    this.#offscreenCanvas.width = this.#baseSize.x;\n    this.#offscreenCanvas.height = this.#baseSize.y;\n    // original empty image data array\n    this.#context.clearRect(0, 0, this.#baseSize.x, this.#baseSize.y);\n    this.#imageData = this.#context.createImageData(\n      this.#baseSize.x, this.#baseSize.y);\n  }\n\n  /**\n   * Fit the layer to its parent container.\n   *\n   * @param {number} fitScale1D The 1D fit scale.\n   * @param {object} fitSize The fit size as {x,y}.\n   * @param {object} fitOffset The fit offset as {x,y}.\n   */\n  fitToContainer(fitScale1D, fitSize, fitOffset) {\n    let needsDraw = false;\n\n    // update canvas size if needed (triggers canvas reset)\n    if (this.#canvas.width !== fitSize.x || this.#canvas.height !== fitSize.y) {\n      if (!canCreateCanvas(fitSize.x, fitSize.y)) {\n        throw new Error('Cannot resize canvas ' + fitSize.x + ', ' + fitSize.y);\n      }\n      // canvas size  change triggers canvas reset\n      this.#canvas.width = fitSize.x;\n      this.#canvas.height = fitSize.y;\n      // update draw flag\n      needsDraw = true;\n    }\n    // previous fit scale\n    const previousFitScale = this.#fitScale;\n    // previous scale without fit\n    const previousScale = {\n      x: this.#scale.x / this.#fitScale.x,\n      y: this.#scale.y / this.#fitScale.y\n    };\n    // fit scale\n    const newFitScale = {\n      x: fitScale1D * this.#baseSpacing.x,\n      y: fitScale1D * this.#baseSpacing.y\n    };\n    // scale\n    const newScale = {\n      x: previousScale.x * newFitScale.x,\n      y: previousScale.y * newFitScale.y\n    };\n    // check if different\n    if (previousScale.x !== newScale.x || previousScale.y !== newScale.y) {\n      this.#fitScale = newFitScale;\n      this.#scale = newScale;\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // view offset\n    const newViewOffset = {\n      x: fitOffset.x / newFitScale.x,\n      y: fitOffset.y / newFitScale.y\n    };\n    const newFlipOffset = {\n      x: this.#flipOffset.x * previousFitScale.x / newFitScale.x,\n      y: this.#flipOffset.y * previousFitScale.y / newFitScale.y\n    };\n    // check if different\n    if (this.#viewOffset.x !== newViewOffset.x ||\n      this.#viewOffset.y !== newViewOffset.y ||\n      this.#flipOffset.x !== newFlipOffset.x ||\n      this.#flipOffset.y !== newFlipOffset.y) {\n      // update private local offsets\n      this.#flipOffset = newFlipOffset;\n      this.#viewOffset = newViewOffset;\n      // update global offset\n      this.#offset = {\n        x: this.#viewOffset.x +\n          this.#baseOffset.x +\n          this.#zoomOffset.x +\n          this.#flipOffset.x,\n        y: this.#viewOffset.y +\n          this.#baseOffset.y +\n          this.#zoomOffset.y +\n          this.#flipOffset.y\n      };\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // draw if needed\n    if (needsDraw) {\n      this.draw();\n    }\n  }\n\n  /**\n   * Enable and listen to container interaction events.\n   */\n  bindInteraction() {\n    // allow pointer events\n    this.#containerDiv.style.pointerEvents = 'auto';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.addEventListener(\n        names[i], this.#fireEvent, {passive: true});\n    }\n  }\n\n  /**\n   * Disable and stop listening to container interaction events.\n   */\n  unbindInteraction() {\n    // disable pointer events\n    this.#containerDiv.style.pointerEvents = 'none';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.removeEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    event.srclayerid = this.getId();\n    event.dataid = this.#dataIndex;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // common layer methods [end] ---------------\n\n  /**\n   * Update the canvas image data.\n   */\n  #updateImageData() {\n    // generate image data\n    this.#viewController.generateImageData(this.#imageData);\n    // pass the data to the off screen canvas\n    this.#offscreenCanvas.getContext('2d').putImageData(this.#imageData, 0, 0);\n    // update data flag\n    this.#needsDataUpdate = false;\n  }\n\n  /**\n   * Handle window/level change.\n   *\n   * @param {object} event The event fired when changing the window/level.\n   */\n  #onWLChange = (event) => {\n    // generate and draw if no skip flag\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle colour map change.\n   *\n   * @param {object} event The event fired when changing the colour map.\n   */\n  #onColourChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle position change.\n   *\n   * @param {object} event The event fired when changing the position.\n   */\n  #onPositionChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      let valid = true;\n      if (typeof event.valid !== 'undefined') {\n        valid = event.valid;\n      }\n      // clear for non valid events\n      if (!valid) {\n        // clear only once\n        if (this.#isValidPosition) {\n          this.#isValidPosition = false;\n          this.clear();\n        }\n      } else {\n        // 3D dimensions\n        const dims3D = [0, 1, 2];\n        // remove scroll index\n        const indexScrollIndex =\n          dims3D.indexOf(this.#viewController.getScrollIndex());\n        dims3D.splice(indexScrollIndex, 1);\n        // remove non scroll index from diff dims\n        const diffDims = event.diffDims.filter(function (item) {\n          return dims3D.indexOf(item) === -1;\n        });\n        // update if we have something left\n        if (diffDims.length !== 0 || !this.#isValidPosition) {\n          // reset valid flag\n          this.#isValidPosition = true;\n          // reset update flag\n          this.#needsDataUpdate = true;\n          this.draw();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle alpha function change.\n   *\n   * @param {object} event The event fired when changing the function.\n   */\n  #onAlphaFuncChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {Index} _index The new index.\n   * @returns {boolean} True if the position was updated.\n   */\n  setCurrentPosition(position, _index) {\n    return this.#viewController.setCurrentPosition(position);\n  }\n\n  /**\n   * Clear the context.\n   */\n  clear() {\n    // clear the context: reset the transform first\n    // store the current transformation matrix\n    this.#context.save();\n    // use the identity matrix while clearing the canvas\n    this.#context.setTransform(1, 0, 0, 1, 0, 0);\n    this.#context.clearRect(0, 0, this.#canvas.width, this.#canvas.height);\n    // restore the transform\n    this.#context.restore();\n  }\n\n} // ViewLayer class\n","import {getShadowColour} from '../utils/colour';\n\n/**\n * Style class.\n */\nexport class Style {\n  /**\n   * Font size.\n   *\n   * @type {number}\n   */\n  #fontSize = 10;\n\n  /**\n   * Font family.\n   *\n   * @type {string}\n   */\n  #fontFamily = 'Verdana';\n\n  /**\n   * Text colour.\n   *\n   * @type {string}\n   */\n  #textColour = '#fff';\n\n  /**\n   * Line colour.\n   *\n   * @type {string}\n   */\n  #lineColour = '#ffff80';\n\n  /**\n   * Base scale.\n   *\n   * @type {object}\n   */\n  #baseScale = {x: 1, y: 1};\n\n  /**\n   * Zoom scale.\n   *\n   * @type {object}\n   */\n  #zoomScale = {x: 1, y: 1};\n\n  /**\n   * Stroke width.\n   *\n   * @type {number}\n   */\n  #strokeWidth = 2;\n\n  /**\n   * Shadow offset.\n   *\n   * @type {object}\n   */\n  #shadowOffset = {x: 0.25, y: 0.25};\n\n  /**\n   * Tag opacity.\n   *\n   * @type {number}\n   */\n  #tagOpacity = 0.2;\n\n  /**\n   * Text padding.\n   *\n   * @type {number}\n   */\n  #textPadding = 3;\n\n  /**\n   * Get the font family.\n   *\n   * @returns {string} The font family.\n   */\n  getFontFamily() {\n    return this.#fontFamily;\n  }\n\n  /**\n   * Get the font size.\n   *\n   * @returns {number} The font size.\n   */\n  getFontSize() {\n    return this.#fontSize;\n  }\n\n  /**\n   * Get the stroke width.\n   *\n   * @returns {number} The stroke width.\n   */\n  getStrokeWidth() {\n    return this.#strokeWidth;\n  }\n\n  /**\n   * Get the text colour.\n   *\n   * @returns {string} The text colour.\n   */\n  getTextColour() {\n    return this.#textColour;\n  }\n\n  /**\n   * Get the line colour.\n   *\n   * @returns {string} The line colour.\n   */\n  getLineColour() {\n    return this.#lineColour;\n  }\n\n  /**\n   * Set the line colour.\n   *\n   * @param {string} colour The line colour.\n   */\n  setLineColour(colour) {\n    this.#lineColour = colour;\n  }\n\n  /**\n   * Set the base scale.\n   *\n   * @param {number} scale The scale as {x,y}.\n   */\n  setBaseScale(scale) {\n    this.#baseScale = scale;\n  }\n\n  /**\n   * Set the zoom scale.\n   *\n   * @param {object} scale The scale as {x,y}.\n   */\n  setZoomScale(scale) {\n    this.#zoomScale = scale;\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {number} The scale as {x,y}.\n   */\n  getBaseScale() {\n    return this.#baseScale;\n  }\n\n  /**\n   * Get the zoom scale.\n   *\n   * @returns {object} The scale as {x,y}.\n   */\n  getZoomScale() {\n    return this.#zoomScale;\n  }\n\n  /**\n   * Scale an input value using the base scale.\n   *\n   * @param {number} value The value to scale.\n   * @returns {number} The scaled value.\n   */\n  scale(value) {\n    // TODO: 2D?\n    return value / this.#baseScale.x;\n  }\n\n  /**\n   * Apply zoom scale on an input value.\n   *\n   * @param {number} value The value to scale.\n   * @returns {object} The scaled value as {x,y}.\n   */\n  applyZoomScale(value) {\n    // times 2 so that the font size 10 looks like a 10...\n    // (same logic as in the DrawController::updateLabelScale)\n    return {\n      x: 2 * value / this.#zoomScale.x,\n      y: 2 * value / this.#zoomScale.y\n    };\n  }\n\n  /**\n   * Get the shadow offset.\n   *\n   * @returns {object} The offset as {x,y}.\n   */\n  getShadowOffset() {\n    return this.#shadowOffset;\n  }\n\n  /**\n   * Get the tag opacity.\n   *\n   * @returns {number} The opacity.\n   */\n  getTagOpacity() {\n    return this.#tagOpacity;\n  }\n\n  /**\n   * Get the text padding.\n   *\n   * @returns {number} The padding.\n   */\n  getTextPadding() {\n    return this.#textPadding;\n  }\n\n  /**\n   * Get the font definition string.\n   *\n   * @returns {string} The font definition string.\n   */\n  getFontStr() {\n    return ('normal ' + this.getFontSize() + 'px sans-serif');\n  }\n\n  /**\n   * Get the line height.\n   *\n   * @returns {number} The line height.\n   */\n  getLineHeight() {\n    return (this.getFontSize() + this.getFontSize() / 5);\n  }\n\n  /**\n   * Get the font size scaled to the display.\n   *\n   * @returns {number} The scaled font size.\n   */\n  getScaledFontSize() {\n    return this.scale(this.getFontSize());\n  }\n\n  /**\n   * Get the stroke width scaled to the display.\n   *\n   * @returns {number} The scaled stroke width.\n   */\n  getScaledStrokeWidth() {\n    return this.scale(this.getStrokeWidth());\n  }\n\n  /**\n   * Get the shadow line colour.\n   *\n   * @returns {string} The shadow line colour.\n   */\n  getShadowLineColour() {\n    return getShadowColour(this.getLineColour());\n  }\n\n} // class Style\n","// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Style} from '../gui/style';\nimport {ViewController} from '../app/viewController';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the display name of the input shape.\n *\n * @param {object} shape The Konva shape.\n * @returns {string} The display name.\n */\nexport function getShapeDisplayName(shape) {\n  let displayName = 'shape';\n  if (shape instanceof Konva.Line) {\n    if (shape.points().length === 4) {\n      displayName = 'line';\n    } else if (shape.points().length === 6) {\n      displayName = 'protractor';\n    } else {\n      displayName = 'roi';\n    }\n  } else if (shape instanceof Konva.Rect) {\n    displayName = 'rectangle';\n  } else if (shape instanceof Konva.Ellipse) {\n    displayName = 'ellipse';\n  }\n  // return\n  return displayName;\n}\n\n/**\n * Draw group command.\n */\nexport class DrawGroupCommand {\n\n  /**\n   * The group to draw.\n   *\n   * @type {Konva.Group}\n   */\n  #group;\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The Konva layer.\n   *\n   * @type {Konva.Layer}\n   */\n  #layer;\n\n  /**\n   * Flag to send events.\n   *\n   * @type {boolean}\n   */\n  #isSilent;\n\n  /**\n   * The group parent.\n   *\n   * @type {object}\n   */\n  #parent;\n\n  /**\n   * @param {Konva.Group} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {Konva.Layer} layer The layer where to draw the group.\n   * @param {boolean} [silent] Whether to send a creation event or not.\n   */\n  constructor(group, name, layer, silent) {\n    this.#group = group;\n    this.#name = name;\n    this.#layer = layer;\n    this.#isSilent = (typeof silent === 'undefined') ? false : silent;\n    this.#parent = group.getParent();\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Draw-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DrawGroupCommand#drawcreate\n   */\n  execute() {\n    // add the group to the parent (in case of undo/redo)\n    this.#parent.add(this.#group);\n    // draw\n    this.#layer.draw();\n    // callback\n    if (!this.#isSilent) {\n      /**\n       * Draw create event.\n       *\n       * @event DrawGroupCommand#drawcreate\n       * @type {object}\n       * @property {number} id The id of the create draw.\n       */\n      this.onExecute({\n        type: 'drawcreate',\n        id: this.#group.id()\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DeleteGroupCommand#drawdelete\n   */\n  undo() {\n    // remove the group from the parent layer\n    this.#group.remove();\n    // draw\n    this.#layer.draw();\n    // callback\n    this.onUndo({\n      type: 'drawdelete',\n      id: this.#group.id()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DrawGroupCommand class\n\n\n/**\n * Move group command.\n */\nexport class MoveGroupCommand {\n\n  /**\n   * The group to move.\n   *\n   * @type {Konva.Group}\n   */\n  #group;\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The 2D translation as {x,y}.\n   *\n   * @type {object}\n   */\n  #translation;\n\n  /**\n   * The Konva layer.\n   *\n   * @type {Konva.Layer}\n   */\n  #layer;\n\n  /**\n   * @param {Konva.Group} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {object} translation A 2D translation to move the group by.\n   * @param {Konva.Layer} layer The layer where to move the group.\n   */\n  constructor(group, name, translation, layer) {\n    this.#group = group;\n    this.#name = name;\n    this.#translation = translation;\n    this.#layer = layer;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Move-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires MoveGroupCommand#drawmove\n   */\n  execute() {\n    // translate group\n    this.#group.move(this.#translation);\n    // draw\n    this.#layer.draw();\n    // callback\n    /**\n     * Draw move event.\n     *\n     * @event MoveGroupCommand#drawmove\n     * @type {object}\n     * @property {number} id The id of the create draw.\n     */\n    this.onExecute({\n      type: 'drawmove',\n      id: this.#group.id()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires MoveGroupCommand#drawmove\n   */\n  undo() {\n    // invert translate group\n    const minusTrans = {\n      x: -this.#translation.x,\n      y: -this.#translation.y\n    };\n    this.#group.move(minusTrans);\n    // draw\n    this.#layer.draw();\n    // callback\n    this.onUndo({\n      type: 'drawmove',\n      id: this.#group.id()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // MoveGroupCommand class\n\n\n/**\n * Change group command.\n */\nexport class ChangeGroupCommand {\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The shape factory.\n   *\n   * @type {object}\n   */\n  #factory;\n\n  /**\n   * The start anchor.\n   *\n   * @type {object}\n   */\n  #startAnchor;\n\n  /**\n   * The end anchor.\n   *\n   * @type {object}\n   */\n  #endAnchor;\n\n  /**\n   * The Konva layer.\n   *\n   * @type {Konva.Layer}\n   */\n  #layer;\n\n  /**\n   * The associated view controller.\n   *\n   * @type {ViewController}\n   */\n  #viewController;\n\n  /**\n   * The app style.\n   *\n   * @type {Style}\n   */\n  #style;\n\n  /**\n   * @param {string} name The shape display name.\n   * @param {object} factory The shape factory.\n   * @param {object} startAnchor The anchor that starts the change.\n   * @param {object} endAnchor The anchor that ends the change.\n   * @param {Konva.Layer} layer The layer where to change the group.\n   * @param {ViewController} viewController The associated viewController.\n   * @param {Style} style The app style.\n   */\n  constructor(\n    name, factory, startAnchor, endAnchor, layer, viewController, style) {\n    this.#name = name;\n    this.#factory = factory;\n    this.#startAnchor = startAnchor;\n    this.#endAnchor = endAnchor;\n    this.#layer = layer;\n    this.#viewController = viewController;\n    this.#style = style;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Change-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires ChangeGroupCommand#drawchange\n   */\n  execute() {\n    // change shape\n    this.#factory.update(\n      this.#endAnchor,\n      this.#style,\n      this.#viewController\n    );\n    // draw\n    this.#layer.draw();\n    // callback\n    /**\n     * Draw change event.\n     *\n     * @event ChangeGroupCommand#drawchange\n     * @type {object}\n     */\n    this.onExecute({\n      type: 'drawchange',\n      id: this.#endAnchor.getParent().id()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires ChangeGroupCommand#drawchange\n   */\n  undo() {\n    // invert change shape\n    this.#factory.update(\n      this.#startAnchor,\n      this.#style,\n      this.#viewController\n    );\n    // draw\n    this.#layer.draw();\n    // callback\n    this.onUndo({\n      type: 'drawchange',\n      id: this.#startAnchor.getParent().id()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // ChangeGroupCommand class\n\n/**\n * Delete group command.\n */\nexport class DeleteGroupCommand {\n\n  /**\n   * The group to draw.\n   *\n   * @type {Konva.Group}\n   */\n  #group;\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The Konva layer.\n   *\n   * @type {Konva.Layer}\n   */\n  #layer;\n\n  /**\n   * The group parent.\n   *\n   * @type {object}\n   */\n  #parent;\n\n  /**\n   * @param {object} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {object} layer The layer where to delete the group.\n   */\n  constructor(group, name, layer) {\n    this.#group = group;\n    this.#name = name;\n    this.#layer = layer;\n    this.#parent = group.getParent();\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Delete-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DeleteGroupCommand#drawdelete\n   */\n  execute() {\n    // remove the group from its parent\n    this.#group.remove();\n    // draw\n    this.#layer.draw();\n    // callback\n    /**\n     * Draw delete event.\n     *\n     * @event DeleteGroupCommand#drawdelete\n     * @type {object}\n     * @property {number} id The id of the create draw.\n     */\n    this.onExecute({\n      type: 'drawdelete',\n      id: this.#group.id()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DrawGroupCommand#drawcreate\n   */\n  undo() {\n    // add the group to its parent\n    this.#parent.add(this.#group);\n    // draw\n    this.#layer.draw();\n    // callback\n    this.onUndo({\n      type: 'drawcreate',\n      id: this.#group.id()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DeleteGroupCommand class\n","import {getIndexFromStringId} from '../math/index';\nimport {logger} from '../utils/logger';\nimport {replaceFlags} from '../utils/string';\nimport {getShadowColour} from '../utils/colour';\nimport {\n  getShapeDisplayName,\n  DrawGroupCommand,\n  DeleteGroupCommand\n} from '../tools/drawCommands';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Index} from '../math/index';\n/* eslint-enable no-unused-vars */\n\n/**\n * Konva.\n *\n * @external Konva\n * @see https://konvajs.org/\n */\nimport Konva from 'konva';\n\n/**\n * Is an input node's name 'shape'.\n *\n * @param {object} node A Konva node.\n * @returns {boolean} True if the node's name is 'shape'.\n */\nexport function isNodeNameShape(node) {\n  return node.name() === 'shape';\n}\n\n/**\n * Is a node an extra shape associated with a main one.\n *\n * @param {object} node A Konva node.\n * @returns {boolean} True if the node's name starts with 'shape-'.\n */\nexport function isNodeNameShapeExtra(node) {\n  return node.name().startsWith('shape-');\n}\n\n/**\n * Is an input node's name 'label'.\n *\n * @param {object} node A Konva node.\n * @returns {boolean} True if the node's name is 'label'.\n */\nexport function isNodeNameLabel(node) {\n  return node.name() === 'label';\n}\n\n/**\n * Is an input node a position node.\n *\n * @param {object} node A Konva node.\n * @returns {boolean} True if the node's name is 'position-group'.\n */\nexport function isPositionNode(node) {\n  return node.name() === 'position-group';\n}\n\n/**\n * @callback testFn\n * @param {object} node The node.\n * @returns {boolean} True if the node passes the test.\n */\n\n/**\n * Get a lambda to check a node's id.\n *\n * @param {string} id The id to check.\n * @returns {testFn} A function to check a node's id.\n */\nexport function isNodeWithId(id) {\n  return function (node) {\n    return node.id() === id;\n  };\n}\n\n/**\n * Is the input node a node that has the 'stroke' method.\n *\n * @param {object} node A Konva node.\n * @returns {boolean} True if the node's name is 'anchor' and 'label'.\n */\nexport function canNodeChangeColour(node) {\n  return node.name() !== 'anchor' && node.name() !== 'label';\n}\n\n/**\n * Debug function to output the layer hierarchy as text.\n *\n * @param {object} layer The Konva layer.\n * @param {string} prefix A display prefix (used in recursion).\n * @returns {string} A text representation of the hierarchy.\n */\nexport function getHierarchyLog(layer, prefix) {\n  if (typeof prefix === 'undefined') {\n    prefix = '';\n  }\n  const kids = layer.getChildren();\n  let log = prefix + '|__ ' + layer.name() + ': ' + layer.id() + '\\n';\n  for (let i = 0; i < kids.length; ++i) {\n    log += getHierarchyLog(kids[i], prefix + '    ');\n  }\n  return log;\n}\n\n/**\n * Draw controller.\n */\nexport class DrawController {\n\n  /**\n   * The Konva layer.\n   *\n   * @type {Konva.Layer}\n   */\n  #konvaLayer;\n\n  /**\n   * Current position group id.\n   *\n   * @type {string}\n   */\n  #currentPosGroupId = null;\n\n  /**\n   * @param {Konva.Layer} konvaLayer The draw layer.\n   */\n  constructor(konvaLayer) {\n    this.#konvaLayer = konvaLayer;\n  }\n\n  /**\n   * Get the current position group.\n   *\n   * @returns {object} The Konva.Group.\n   */\n  getCurrentPosGroup() {\n    // get position groups\n    const posGroups = this.#konvaLayer.getChildren((node) => {\n      return node.id() === this.#currentPosGroupId;\n    });\n    // if one group, use it\n    // if no group, create one\n    let posGroup = null;\n    if (posGroups.length === 1) {\n      posGroup = posGroups[0];\n    } else if (posGroups.length === 0) {\n      posGroup = new Konva.Group();\n      posGroup.name('position-group');\n      posGroup.id(this.#currentPosGroupId);\n      posGroup.visible(true); // dont inherit\n      // add new group to layer\n      this.#konvaLayer.add(posGroup);\n    } else {\n      logger.warn('Unexpected number of draw position groups.');\n    }\n    // return\n    return posGroup;\n  }\n\n  /**\n   * Reset: clear the layers array.\n   */\n  reset() {\n    this.#konvaLayer = null;\n  }\n\n  /**\n   * Get a Konva group using its id.\n   *\n   * @param {string} id The group id.\n   * @returns {object|undefined} The Konva group.\n   */\n  getGroup(id) {\n    const group = this.#konvaLayer.findOne('#' + id);\n    if (typeof group === 'undefined') {\n      logger.warn('Cannot find node with id: ' + id\n      );\n    }\n    return group;\n  }\n\n  /**\n   * Activate the current draw layer.\n   *\n   * @param {Index} index The current position.\n   * @param {number} scrollIndex The scroll index.\n   */\n  activateDrawLayer(index, scrollIndex) {\n    // TODO: add layer info\n    // get and store the position group id\n    const dims = [scrollIndex];\n    for (let j = 3; j < index.length(); ++j) {\n      dims.push(j);\n    }\n    this.#currentPosGroupId = index.toStringId(dims);\n\n    // get all position groups\n    const posGroups = this.#konvaLayer.getChildren(isPositionNode);\n    // reset or set the visible property\n    let visible;\n    for (let i = 0, leni = posGroups.length; i < leni; ++i) {\n      visible = false;\n      if (posGroups[i].id() === this.#currentPosGroupId) {\n        visible = true;\n      }\n      // group members inherit the visible property\n      posGroups[i].visible(visible);\n    }\n\n    // show current draw layer\n    this.#konvaLayer.draw();\n  }\n\n  /**\n   * Get a list of drawing display details.\n   *\n   * @returns {Array} A list of draw details as\n   *   {id, position, type, color, meta}\n   */\n  getDrawDisplayDetails() {\n    const list = [];\n    const groups = this.#konvaLayer.getChildren();\n    for (let j = 0, lenj = groups.length; j < lenj; ++j) {\n      const position = getIndexFromStringId(groups[j].id());\n      // @ts-ignore\n      const collec = groups[j].getChildren();\n      for (let i = 0, leni = collec.length; i < leni; ++i) {\n        const shape = collec[i].getChildren(isNodeNameShape)[0];\n        const label = collec[i].getChildren(isNodeNameLabel)[0];\n        const text = label.getChildren()[0];\n        let type = shape.className;\n        if (type === 'Line') {\n          const shapeExtrakids = collec[i].getChildren(\n            isNodeNameShapeExtra);\n          if (shape.closed()) {\n            type = 'Roi';\n          } else if (shapeExtrakids.length !== 0) {\n            const extraName0 = shapeExtrakids[0].name();\n            if (extraName0.indexOf('triangle') !== -1) {\n              type = 'Arrow';\n            } else if (extraName0.indexOf('arc') !== -1) {\n              type = 'Protractor';\n            } else {\n              type = 'Ruler';\n            }\n          }\n        }\n        if (type === 'Rect') {\n          type = 'Rectangle';\n        }\n        list.push({\n          id: collec[i].id(),\n          position: position.toString(),\n          type: type,\n          color: shape.stroke(),\n          meta: text.meta\n        });\n      }\n    }\n    return list;\n  }\n\n  /**\n   * Get a list of drawing store details. Used in state.\n   *\n   * @returns {object} A list of draw details including id, text, quant...\n   * TODO Unify with getDrawDisplayDetails?\n   */\n  getDrawStoreDetails() {\n    const drawingsDetails = {};\n\n    // get all position groups\n    const posGroups = this.#konvaLayer.getChildren(isPositionNode);\n\n    let posKids;\n    let group;\n    for (let i = 0, leni = posGroups.length; i < leni; ++i) {\n      // @ts-ignore\n      posKids = posGroups[i].getChildren();\n      for (let j = 0, lenj = posKids.length; j < lenj; ++j) {\n        group = posKids[j];\n        // remove anchors\n        const anchors = group.find('.anchor');\n        for (let a = 0; a < anchors.length; ++a) {\n          anchors[a].remove();\n        }\n        // get text\n        const texts = group.find('.text');\n        if (texts.length !== 1) {\n          logger.warn('There should not be more than one text per shape.');\n        }\n        // get meta (non konva vars)\n        drawingsDetails[group.id()] = {\n          meta: texts[0].meta\n        };\n      }\n    }\n    return drawingsDetails;\n  }\n\n  /**\n   * Set the drawings on the current stage.\n   *\n   * @param {Array} drawings An array of drawings.\n   * @param {Array} drawingsDetails An array of drawings details.\n   * @param {object} cmdCallback The DrawCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *   DrawCommand has been executed.\n   */\n  setDrawings(\n    drawings, drawingsDetails, cmdCallback, exeCallback) {\n    // regular Konva deserialize\n    const stateLayer = Konva.Node.create(drawings);\n\n    // get all position groups\n    const statePosGroups = stateLayer.getChildren(isPositionNode);\n\n    for (let i = 0, leni = statePosGroups.length; i < leni; ++i) {\n      const statePosGroup = statePosGroups[i];\n\n      // Get or create position-group if it does not exist and\n      // append it to konvaLayer\n      let posGroup = this.#konvaLayer.getChildren(\n        isNodeWithId(statePosGroup.id()))[0];\n      if (typeof posGroup === 'undefined') {\n        posGroup = new Konva.Group({\n          id: statePosGroup.id(),\n          name: 'position-group',\n          visible: false\n        });\n        this.#konvaLayer.add(posGroup);\n      }\n\n      const statePosKids = statePosGroup.getChildren();\n      for (let j = 0, lenj = statePosKids.length; j < lenj; ++j) {\n        // shape group (use first one since it will be removed from\n        // the group when we change it)\n        const stateGroup = statePosKids[0];\n        // add group to posGroup (switches its parent)\n        // @ts-ignore\n        posGroup.add(stateGroup);\n        // shape\n        const shape = stateGroup.getChildren(isNodeNameShape)[0];\n        // create the draw command\n        const cmd = new DrawGroupCommand(\n          stateGroup, shape.className, this.#konvaLayer);\n        // draw command callbacks\n        cmd.onExecute = cmdCallback;\n        cmd.onUndo = cmdCallback;\n        // details\n        if (drawingsDetails) {\n          const details = drawingsDetails[stateGroup.id()];\n          const label = stateGroup.getChildren(isNodeNameLabel)[0];\n          const text = label.getText();\n          // store details\n          text.meta = details.meta;\n          // reset text (it was not encoded)\n          text.setText(replaceFlags(\n            text.meta.textExpr, text.meta.quantification\n          ));\n        }\n        // execute\n        cmd.execute();\n        exeCallback(cmd);\n      }\n    }\n  }\n\n  /**\n   * Update a drawing from its details.\n   *\n   * @param {object} drawDetails Details of the drawing to update.\n   */\n  updateDraw(drawDetails) {\n    // get the group\n    const group = this.#konvaLayer.findOne('#' + drawDetails.id);\n    if (typeof group === 'undefined') {\n      logger.warn(\n        '[updateDraw] Cannot find group with id: ' + drawDetails.id\n      );\n      return;\n    }\n    // shape\n    // @ts-ignore\n    const shapes = group.getChildren(isNodeNameShape);\n    for (let i = 0; i < shapes.length; ++i) {\n      shapes[i].stroke(drawDetails.color);\n    }\n    // shape extra\n    // @ts-ignore\n    const shapesExtra = group.getChildren(isNodeNameShapeExtra);\n    for (let j = 0; j < shapesExtra.length; ++j) {\n      if (typeof shapesExtra[j].stroke() !== 'undefined') {\n        shapesExtra[j].stroke(drawDetails.color);\n      } else if (typeof shapesExtra[j].fill() !== 'undefined') {\n        // for example text\n        shapesExtra[j].fill(drawDetails.color);\n      }\n    }\n    // label\n    // @ts-ignore\n    const label = group.getChildren(isNodeNameLabel)[0];\n    const shadowColor = getShadowColour(drawDetails.color);\n    const kids = label.getChildren();\n    for (let k = 0; k < kids.length; ++k) {\n      const kid = kids[k];\n      kid.fill(drawDetails.color);\n      if (kids[k].className === 'Text') {\n        const text = kids[k];\n        text.shadowColor(shadowColor);\n        if (typeof drawDetails.meta !== 'undefined') {\n          text.meta = drawDetails.meta;\n          text.setText(replaceFlags(\n            text.meta.textExpr, text.meta.quantification\n          ));\n          label.setVisible(text.meta.textExpr.length !== 0);\n        }\n      }\n    }\n\n    // udpate current layer\n    this.#konvaLayer.draw();\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {object} group The group to delete.\n   * @param {object} cmdCallback The DeleteCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDrawGroup(group, cmdCallback, exeCallback) {\n    const shape = group.getChildren(isNodeNameShape)[0];\n    const shapeDisplayName = getShapeDisplayName(shape);\n    const delcmd = new DeleteGroupCommand(\n      group, shapeDisplayName, this.#konvaLayer);\n    delcmd.onExecute = cmdCallback;\n    delcmd.onUndo = cmdCallback;\n    delcmd.execute();\n    // callback\n    exeCallback(delcmd);\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {string} id The id of the group to delete.\n   * @param {object} cmdCallback The DeleteCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   * @returns {boolean} False if the group cannot be found.\n   */\n  deleteDraw(id, cmdCallback, exeCallback) {\n    // get the group\n    const group = this.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // delete\n    this.deleteDrawGroup(group, cmdCallback, exeCallback);\n\n    return true;\n  }\n\n  /**\n   * Delete all Draws from the stage.\n   *\n   * @param {object} cmdCallback The DeleteCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraws(cmdCallback, exeCallback) {\n    const groups = this.#konvaLayer.getChildren();\n    while (groups.length) {\n      this.deleteDrawGroup(groups[0], cmdCallback, exeCallback);\n    }\n  }\n\n} // class DrawController\n","import {ListenerHandler} from '../utils/listen';\nimport {DrawController} from '../app/drawController';\nimport {getScaledOffset} from './layerGroup';\nimport {InteractionEventNames} from './generic';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point, Point3D} from '../math/point';\nimport {Index} from '../math/index';\nimport {Vector3D} from '../math/vector';\n/* eslint-enable no-unused-vars */\n\n/**\n * Draw layer.\n */\nexport class DrawLayer {\n\n  /**\n   * The container div.\n   *\n   * @type {HTMLDivElement}\n   */\n  #containerDiv;\n\n  /**\n   * Konva stage.\n   *\n   * @type {Konva.Stage}\n   */\n  #konvaStage = null;\n\n  /**\n   * The layer base size as {x,y}.\n   *\n   * @type {object}\n   */\n  #baseSize;\n\n  /**\n   * The layer base spacing as {x,y}.\n   *\n   * @type {object}\n   */\n  #baseSpacing;\n\n  /**\n   * The layer fit scale.\n   *\n   * @type {object}\n   */\n  #fitScale = {x: 1, y: 1};\n\n  /**\n   * The base layer offset.\n   *\n   * @type {object}\n   */\n  #baseOffset = {x: 0, y: 0};\n\n  /**\n   * The view offset.\n   *\n   * @type {object}\n   */\n  #viewOffset = {x: 0, y: 0};\n\n  /**\n   * The zoom offset.\n   *\n   * @type {object}\n   */\n  #zoomOffset = {x: 0, y: 0};\n\n  /**\n   * The flip offset.\n   *\n   * @type {object}\n   */\n  #flipOffset = {x: 0, y: 0};\n\n  /**\n   * The draw controller.\n   *\n   * @type {object}\n   */\n  #drawController = null;\n\n  /**\n   * The plane helper.\n   *\n   * @type {object}\n   */\n  #planeHelper;\n\n  /**\n   * The associated data index.\n   *\n   * @type {number}\n   */\n  #dataIndex = null;\n\n  /**\n   * @param {HTMLDivElement} containerDiv The layer div, its id will be used\n   *   as this layer id.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n    // specific css class name\n    this.#containerDiv.className += ' drawLayer';\n  }\n\n  /**\n   * Get the associated data index.\n   *\n   * @returns {number} The index.\n   */\n  getDataIndex() {\n    return this.#dataIndex;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the Konva stage.\n   *\n   * @returns {object} The stage.\n   */\n  getKonvaStage() {\n    return this.#konvaStage;\n  }\n\n  /**\n   * Get the Konva layer.\n   *\n   * @returns {object} The layer.\n   */\n  getKonvaLayer() {\n    // there should only be one layer\n    return this.#konvaStage.getLayers()[0];\n  }\n\n  /**\n   * Get the draw controller.\n   *\n   * @returns {object} The controller.\n   */\n  getDrawController() {\n    return this.#drawController;\n  }\n\n  /**\n   * Set the plane helper.\n   *\n   * @param {object} helper The helper.\n   */\n  setPlaneHelper(helper) {\n    this.#planeHelper = helper;\n  }\n\n  // common layer methods [start] ---------------\n\n  /**\n   * Get the id of the layer.\n   *\n   * @returns {string} The string id.\n   */\n  getId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Get the layer base size (without scale).\n   *\n   * @returns {object} The size as {x,y}.\n   */\n  getBaseSize() {\n    return this.#baseSize;\n  }\n\n  /**\n   * Get the layer opacity.\n   *\n   * @returns {number} The opacity ([0:1] range).\n   */\n  getOpacity() {\n    return this.#konvaStage.opacity();\n  }\n\n  /**\n   * Set the layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    this.#konvaStage.opacity(Math.min(Math.max(alpha, 0), 1));\n  }\n\n  /**\n   * Add a flip offset along the layer X axis.\n   */\n  addFlipOffsetX() {\n    // flip scale is handled by layer group\n    // flip offset\n    const scale = this.#konvaStage.scale();\n    const size = this.#konvaStage.size();\n    this.#flipOffset.x += size.width / scale.x;\n    // apply\n    const offset = this.#konvaStage.offset();\n    offset.x += this.#flipOffset.x;\n    this.#konvaStage.offset(offset);\n  }\n\n  /**\n   * Add a flip offset along the layer Y axis.\n   */\n  addFlipOffsetY() {\n    // flip scale is handled by layer group\n    // flip offset\n    const scale = this.#konvaStage.scale();\n    const size = this.#konvaStage.size();\n    this.#flipOffset.y += size.height / scale.y;\n    // apply\n    const offset = this.#konvaStage.offset();\n    offset.y += this.#flipOffset.y;\n    this.#konvaStage.offset(offset);\n  }\n\n  /**\n   * Set the layer scale.\n   *\n   * @param {object} newScale The scale as {x,y}.\n   * @param {Point3D} center The scale center.\n   */\n  setScale(newScale, center) {\n    const orientedNewScale =\n      this.#planeHelper.getTargetOrientedPositiveXYZ(newScale);\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n\n    const offset = this.#konvaStage.offset();\n\n    if (Math.abs(newScale.x) === 1 &&\n      Math.abs(newScale.y) === 1 &&\n      Math.abs(newScale.z) === 1) {\n      // reset zoom offset for scale=1\n      const resetOffset = {\n        x: offset.x - this.#zoomOffset.x,\n        y: offset.y - this.#zoomOffset.y\n      };\n      // store new offset\n      this.#zoomOffset = {x: 0, y: 0};\n      this.#konvaStage.offset(resetOffset);\n    } else {\n      if (typeof center !== 'undefined') {\n        let worldCenter = this.#planeHelper.getPlaneOffsetFromOffset3D({\n          x: center.getX(),\n          y: center.getY(),\n          z: center.getZ()\n        });\n        // center was obtained with viewLayer.displayToMainPlanePos\n        // compensated for baseOffset\n        // TODO: justify...\n        worldCenter = {\n          x: worldCenter.x + this.#baseOffset.x,\n          y: worldCenter.y + this.#baseOffset.y\n        };\n\n        const newOffset = getScaledOffset(\n          offset, this.#konvaStage.scale(), finalNewScale, worldCenter);\n\n        const newZoomOffset = {\n          x: this.#zoomOffset.x + newOffset.x - offset.x,\n          y: this.#zoomOffset.y + newOffset.y - offset.y\n        };\n        // store new offset\n        this.#zoomOffset = newZoomOffset;\n        this.#konvaStage.offset(newOffset);\n      }\n    }\n\n    this.#konvaStage.scale(finalNewScale);\n    // update labels\n    this.#updateLabelScale(finalNewScale);\n  }\n\n  /**\n   * Set the layer offset.\n   *\n   * @param {object} newOffset The offset as {x,y}.\n   */\n  setOffset(newOffset) {\n    const planeNewOffset =\n      this.#planeHelper.getPlaneOffsetFromOffset3D(newOffset);\n    this.#konvaStage.offset({\n      x: planeNewOffset.x +\n        this.#viewOffset.x +\n        this.#baseOffset.x +\n        this.#zoomOffset.x +\n        this.#flipOffset.x,\n      y: planeNewOffset.y +\n        this.#viewOffset.y +\n        this.#baseOffset.y +\n        this.#zoomOffset.y +\n        this.#flipOffset.y\n    });\n  }\n\n  /**\n   * Set the base layer offset. Updates the layer offset.\n   *\n   * @param {Vector3D} scrollOffset The scroll offset vector.\n   * @param {Vector3D} planeOffset The plane offset vector.\n   * @returns {boolean} True if the offset was updated.\n   */\n  setBaseOffset(scrollOffset, planeOffset) {\n    const scrollIndex = this.#planeHelper.getNativeScrollIndex();\n    const newOffset = this.#planeHelper.getPlaneOffsetFromOffset3D({\n      x: scrollIndex === 0 ? scrollOffset.getX() : planeOffset.getX(),\n      y: scrollIndex === 1 ? scrollOffset.getY() : planeOffset.getY(),\n      z: scrollIndex === 2 ? scrollOffset.getZ() : planeOffset.getZ(),\n    });\n    const needsUpdate = this.#baseOffset.x !== newOffset.x ||\n      this.#baseOffset.y !== newOffset.y;\n    // reset offset if needed\n    if (needsUpdate) {\n      const offset = this.#konvaStage.offset();\n      this.#konvaStage.offset({\n        x: offset.x - this.#baseOffset.x + newOffset.x,\n        y: offset.y - this.#baseOffset.y + newOffset.y\n      });\n      this.#baseOffset = newOffset;\n    }\n    return needsUpdate;\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    this.#containerDiv.style.display = flag ? '' : 'none';\n  }\n\n  /**\n   * Check if the layer is visible.\n   *\n   * @returns {boolean} True if the layer is visible.\n   */\n  isVisible() {\n    return this.#containerDiv.style.display === '';\n  }\n\n  /**\n   * Draw the content (imageData) of the layer.\n   * The imageData variable needs to be set\n   */\n  draw() {\n    this.#konvaStage.draw();\n  }\n\n  /**\n   * Initialise the layer: set the canvas and context\n   *\n   * @param {object} size The image size as {x,y}.\n   * @param {object} spacing The image spacing as {x,y}.\n   * @param {number} index The associated data index.\n   */\n  initialise(size, spacing, index) {\n    // set locals\n    this.#baseSize = size;\n    this.#baseSpacing = spacing;\n    this.#dataIndex = index;\n\n    // create stage\n    this.#konvaStage = new Konva.Stage({\n      container: this.#containerDiv,\n      width: this.#baseSize.x,\n      height: this.#baseSize.y,\n      listening: false\n    });\n    // reset style\n    // (avoids a not needed vertical scrollbar)\n    this.#konvaStage.getContent().setAttribute('style', '');\n\n    // create layer\n    const konvaLayer = new Konva.Layer({\n      listening: false,\n      visible: true\n    });\n    this.#konvaStage.add(konvaLayer);\n\n    // create draw controller\n    this.#drawController = new DrawController(konvaLayer);\n  }\n\n  /**\n   * Fit the layer to its parent container.\n   *\n   * @param {number} fitScale1D The 1D fit scale.\n   * @param {object} fitSize The fit size as {x,y}.\n   * @param {object} fitOffset The fit offset as {x,y}.\n   */\n  fitToContainer(fitScale1D, fitSize, fitOffset) {\n    // update konva\n    this.#konvaStage.width(fitSize.x);\n    this.#konvaStage.height(fitSize.y);\n\n    // previous scale without fit\n    const previousScale = {\n      x: this.#konvaStage.scale().x / this.#fitScale.x,\n      y: this.#konvaStage.scale().y / this.#fitScale.y\n    };\n    // update fit scale\n    this.#fitScale = {\n      x: fitScale1D * this.#baseSpacing.x,\n      y: fitScale1D * this.#baseSpacing.y\n    };\n    // update scale\n    this.#konvaStage.scale({\n      x: previousScale.x * this.#fitScale.x,\n      y: previousScale.y * this.#fitScale.y\n    });\n\n    // update offsets\n    this.#viewOffset = {\n      x: fitOffset.x / this.#fitScale.x,\n      y: fitOffset.y / this.#fitScale.y\n    };\n    this.#konvaStage.offset({\n      x: this.#viewOffset.x +\n        this.#baseOffset.x +\n        this.#zoomOffset.x +\n        this.#flipOffset.x,\n      y: this.#viewOffset.y +\n        this.#baseOffset.y +\n        this.#zoomOffset.y +\n        this.#flipOffset.y\n    });\n  }\n\n  /**\n   * Check the visibility of a given group.\n   *\n   * @param {string} id The id of the group.\n   * @returns {boolean} True if the group is visible.\n   */\n  isGroupVisible(id) {\n    // get the group\n    const group = this.#drawController.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // get visibility\n    return group.isVisible();\n  }\n\n  /**\n   * Toggle the visibility of a given group.\n   *\n   * @param {string} id The id of the group.\n   * @returns {boolean} False if the group cannot be found.\n   */\n  toogleGroupVisibility(id) {\n    // get the group\n    const group = this.#drawController.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // toggle visible\n    group.visible(!group.isVisible());\n\n    // udpate\n    this.draw();\n\n    return true;\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {string} id The id of the group to delete.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraw(id, exeCallback) {\n    this.#drawController.deleteDraw(id, this.#fireEvent, exeCallback);\n  }\n\n  /**\n   * Delete all Draws from the stage.\n   *\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraws(exeCallback) {\n    this.#drawController.deleteDraws(this.#fireEvent, exeCallback);\n  }\n\n  /**\n   * Enable and listen to container interaction events.\n   */\n  bindInteraction() {\n    this.#konvaStage.listening(true);\n    // allow pointer events\n    this.#containerDiv.style.pointerEvents = 'auto';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.addEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Disable and stop listening to container interaction events.\n   */\n  unbindInteraction() {\n    this.#konvaStage.listening(false);\n    // disable pointer events\n    this.#containerDiv.style.pointerEvents = 'none';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.removeEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {Index} index The new index.\n   * @returns {boolean} True if the position was updated.\n   */\n  setCurrentPosition(position, index) {\n    this.getDrawController().activateDrawLayer(\n      index, this.#planeHelper.getScrollIndex());\n    // TODO: add check\n    return true;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    event.srclayerid = this.getId();\n    event.dataid = this.#dataIndex;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // common layer methods [end] ---------------\n\n  /**\n   * Update label scale: compensate for it so\n   *   that label size stays visually the same.\n   *\n   * @param {object} scale The scale to compensate for as {x,y}.\n   */\n  #updateLabelScale(scale) {\n    // same formula as in style::applyZoomScale:\n    // compensate for scale and times 2 so that font 10 looks like a 10\n    const ratioX = 2 / scale.x;\n    const ratioY = 2 / scale.y;\n    // compensate scale for labels\n    const labels = this.#konvaStage.find('Label');\n    for (let i = 0; i < labels.length; ++i) {\n      labels[i].scale({x: ratioX, y: ratioY});\n    }\n  }\n\n} // DrawLayer class\n","import {Point, Point3D} from '../math/point';\nimport {LayerGroup} from './layerGroup';\n\n/**\n * Window/level binder.\n */\nexport class WindowLevelBinder {\n  getEventType = function () {\n    return 'wlchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const viewLayers = layerGroup.getViewLayersByDataIndex(event.dataid);\n      if (viewLayers.length !== 0) {\n        const vc = viewLayers[0].getViewController();\n        vc.setWindowLevel(event.value[0], event.value[1]);\n      }\n    };\n  };\n}\n\n/**\n * Position binder.\n */\nexport class PositionBinder {\n  getEventType = function () {\n    return 'positionchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const pointValues = event.value[1];\n      const vc = layerGroup.getActiveViewLayer().getViewController();\n      // handle different number of dimensions\n      const currentPos = vc.getCurrentPosition();\n      const currentDims = currentPos.length();\n      const inputDims = pointValues.length;\n      if (inputDims !== currentDims) {\n        if (inputDims === currentDims - 1) {\n          // add missing dim, for ex: input 3D -> current 4D\n          pointValues.push(currentPos.get(currentDims - 1));\n        } else if (inputDims === currentDims + 1) {\n          // remove extra dim, for ex: input 4D -> current 3D\n          pointValues.pop();\n        }\n      }\n      vc.setCurrentPosition(new Point(pointValues));\n    };\n  };\n}\n\n/**\n * Zoom binder.\n */\nexport class ZoomBinder {\n  getEventType = function () {\n    return 'zoomchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const scale = {\n        x: event.value[0],\n        y: event.value[1],\n        z: event.value[2]\n      };\n      let center;\n      if (event.value.length === 6) {\n        center = new Point3D(\n          event.value[3],\n          event.value[4],\n          event.value[5]\n        );\n      }\n      layerGroup.setScale(scale, center);\n      layerGroup.draw();\n    };\n  };\n}\n\n/**\n * Offset binder.\n */\nexport class OffsetBinder {\n  getEventType = function () {\n    return 'offsetchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      layerGroup.setOffset({\n        x: event.value[0],\n        y: event.value[1],\n        z: event.value[2]\n      });\n      layerGroup.draw();\n    };\n  };\n}\n\n/**\n * Opacity binder. Only propagates to view layers of the same data.\n */\nexport class OpacityBinder {\n  getEventType = function () {\n    return 'opacitychange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      // exit if no data index\n      if (typeof event.dataid === 'undefined') {\n        return;\n      }\n      // propagate to first view layer\n      const viewLayers = layerGroup.getViewLayersByDataIndex(event.dataid);\n      if (viewLayers.length !== 0) {\n        viewLayers[0].setOpacity(event.value);\n        viewLayers[0].draw();\n      }\n    };\n  };\n}\n\n/**\n * List of binders.\n */\nexport const binderList = {\n  WindowLevelBinder,\n  PositionBinder,\n  ZoomBinder,\n  OffsetBinder,\n  OpacityBinder\n};\n\n/**\n * Stage: controls a list of layer groups and their\n * synchronisation.\n */\nexport class Stage {\n\n  // associated layer groups\n  #layerGroups = [];\n  // active layer group index\n  #activeLayerGroupIndex = null;\n\n  // layer group binders\n  #binders = [];\n  // binder callbacks\n  #callbackStore = null;\n\n  /**\n   * Get the layer group at the given index.\n   *\n   * @param {number} index The index.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroup(index) {\n    return this.#layerGroups[index];\n  }\n\n  /**\n   * Get the number of layer groups that form the stage.\n   *\n   * @returns {number} The number of layer groups.\n   */\n  getNumberOfLayerGroups() {\n    return this.#layerGroups.length;\n  }\n\n  /**\n   * Get the active layer group.\n   *\n   * @returns {LayerGroup} The layer group.\n   */\n  getActiveLayerGroup() {\n    return this.getLayerGroup(this.#activeLayerGroupIndex);\n  }\n\n  /**\n   * Get the view layers associated to a data index.\n   *\n   * @param {number} index The data index.\n   * @returns {Array} The layers.\n   */\n  getViewLayersByDataIndex(index) {\n    let res = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      res = res.concat(this.#layerGroups[i].getViewLayersByDataIndex(index));\n    }\n    return res;\n  }\n\n  /**\n   * Get the draw layers associated to a data index.\n   *\n   * @param {number} index The data index.\n   * @returns {Array} The layers.\n   */\n  getDrawLayersByDataIndex(index) {\n    let res = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      res = res.concat(this.#layerGroups[i].getDrawLayersByDataIndex(index));\n    }\n    return res;\n  }\n\n  /**\n   * Add a layer group to the list.\n   *\n   * @param {object} htmlElement The HTML element of the layer group.\n   * @returns {LayerGroup} The newly created layer group.\n   */\n  addLayerGroup(htmlElement) {\n    this.#activeLayerGroupIndex = this.#layerGroups.length;\n    const layerGroup = new LayerGroup(htmlElement);\n    // add to storage\n    const isBound = this.#callbackStore && this.#callbackStore.length !== 0;\n    if (isBound) {\n      this.unbindLayerGroups();\n    }\n    this.#layerGroups.push(layerGroup);\n    if (isBound) {\n      this.bindLayerGroups();\n    }\n    // return created group\n    return layerGroup;\n  }\n\n  /**\n   * Get a layer group from an HTML element id.\n   *\n   * @param {string} id The element id to find.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroupByDivId(id) {\n    return this.#layerGroups.find(function (item) {\n      return item.getDivId() === id;\n    });\n  }\n\n  /**\n   * Set the layer groups binders.\n   *\n   * @param {Array} list The list of binder objects.\n   */\n  setBinders(list) {\n    if (typeof list === 'undefined' || list === null) {\n      throw new Error('Cannot set null or undefined binders');\n    }\n    if (this.#binders.length !== 0) {\n      this.unbindLayerGroups();\n    }\n    this.#binders = list.slice();\n    this.bindLayerGroups();\n  }\n\n  /**\n   * Empty the layer group list.\n   */\n  empty() {\n    this.unbindLayerGroups();\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].empty();\n    }\n    this.#layerGroups = [];\n    this.#activeLayerGroupIndex = null;\n  }\n\n  /**\n   * Reset the stage: calls reset on all layer groups.\n   */\n  reset() {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].reset();\n    }\n  }\n\n  /**\n   * Draw the stage: calls draw on all layer groups.\n   */\n  draw() {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].draw();\n    }\n  }\n\n  /**\n   * Synchronise the fit scale of the group layers.\n   */\n  syncLayerGroupScale() {\n    let minScale;\n    const hasScale = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      const scale = this.#layerGroups[i].calculateFitScale();\n      if (typeof scale !== 'undefined') {\n        hasScale.push(i);\n        if (typeof minScale === 'undefined' || scale < minScale) {\n          minScale = scale;\n        }\n      }\n    }\n    // exit if no scale\n    if (typeof minScale === 'undefined') {\n      return;\n    }\n    // apply min scale to layers\n    for (let j = 0; j < this.#layerGroups.length; ++j) {\n      if (hasScale.includes(j)) {\n        this.#layerGroups[j].setFitScale(minScale);\n      }\n    }\n  }\n\n  /**\n   * Bind the layer groups of the stage.\n   */\n  bindLayerGroups() {\n    if (this.#layerGroups.length === 0 ||\n      this.#layerGroups.length === 1 ||\n      this.#binders.length === 0) {\n      return;\n    }\n    // create callback store\n    this.#callbackStore = new Array(this.#layerGroups.length);\n    // add listeners\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      for (let j = 0; j < this.#binders.length; ++j) {\n        this.#addEventListeners(i, this.#binders[j]);\n      }\n    }\n  }\n\n  /**\n   * Unbind the layer groups of the stage.\n   */\n  unbindLayerGroups() {\n    if (this.#layerGroups.length === 0 ||\n      this.#layerGroups.length === 1 ||\n      this.#binders.length === 0 ||\n      !this.#callbackStore) {\n      return;\n    }\n    // remove listeners\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      for (let j = 0; j < this.#binders.length; ++j) {\n        this.#removeEventListeners(i, this.#binders[j]);\n      }\n    }\n    // clear callback store\n    this.#callbackStore = null;\n  }\n\n  /**\n   * Get the binder callback function for a given layer group index.\n   * The function is created if not yet stored.\n   *\n   * @param {object} binder The layer binder.\n   * @param {number} index The index of the associated layer group.\n   * @returns {Function} The binder function.\n   */\n  #getBinderCallback(binder, index) {\n    if (typeof this.#callbackStore[index] === 'undefined') {\n      this.#callbackStore[index] = [];\n    }\n    const store = this.#callbackStore[index];\n    let binderObj = store.find(function (elem) {\n      return elem.binder === binder;\n    });\n    if (typeof binderObj === 'undefined') {\n      // create new callback object\n      binderObj = {\n        binder: binder,\n        callback: (event) => {\n          // stop listeners\n          this.#removeEventListeners(index, binder);\n          // apply binder\n          binder.getCallback(this.#layerGroups[index])(event);\n          // re-start listeners\n          this.#addEventListeners(index, binder);\n        }\n      };\n      this.#callbackStore[index].push(binderObj);\n    }\n    return binderObj.callback;\n  }\n\n  /**\n   * Add event listeners for a given layer group index and binder.\n   *\n   * @param {number} index The index of the associated layer group.\n   * @param {object} binder The layer binder.\n   */\n  #addEventListeners(index, binder) {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      if (i !== index) {\n        this.#layerGroups[index].addEventListener(\n          binder.getEventType(),\n          this.#getBinderCallback(binder, i)\n        );\n      }\n    }\n  }\n\n  /**\n   * Remove event listeners for a given layer group index and binder.\n   *\n   * @param {number} index The index of the associated layer group.\n   * @param {object} binder The layer binder.\n   */\n  #removeEventListeners(index, binder) {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      if (i !== index) {\n        this.#layerGroups[index].removeEventListener(\n          binder.getEventType(),\n          this.#getBinderCallback(binder, i)\n        );\n      }\n    }\n  }\n\n} // class Stage\n","import {Index} from '../math/index';\nimport {colourNameToHex} from '../utils/colour';\n\n// external\nimport Konva from 'konva';\n\n/**\n * State class.\n * Saves: data url/path, display info.\n *\n * History:\n * - v0.5 (dwv 0.30.0, 12/2021)\n *   - store position as array\n *   - new draw position group key\n * - v0.4 (dwv 0.29.0, 06/2021)\n *   - move drawing details into meta property\n *   - remove scale center and translation, add offset\n * - v0.3 (dwv v0.23.0, 03/2018)\n *   - new drawing structure, drawings are now the full layer object and\n *     using toObject to avoid saving a string representation\n *   - new details structure: simple array of objects referenced by draw ids\n * - v0.2 (dwv v0.17.0, 12/2016)\n *   - adds draw details: array [nslices][nframes] of detail objects\n * - v0.1 (dwv v0.15.0, 07/2016)\n *   - adds version\n *   - drawings: array [nslices][nframes] with all groups\n * - initial release (dwv v0.10.0, 05/2015), no version number...\n *   - content: window-center, window-width, position, scale,\n *       scaleCenter, translation, drawings\n *   - drawings: array [nslices] with all groups\n */\nexport class State {\n  /**\n   * Save the application state as JSON.\n   *\n   * @param {object} app The associated application.\n   * @returns {string} The state as a JSON string.\n   */\n  toJSON(app) {\n    const layerGroup = app.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const position = viewController.getCurrentIndex();\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const drawController = drawLayer.getDrawController();\n    // return a JSON string\n    return JSON.stringify({\n      version: '0.5',\n      'window-center': viewController.getWindowLevel().center,\n      'window-width': viewController.getWindowLevel().width,\n      position: position.getValues(),\n      scale: app.getAddedScale(),\n      offset: app.getOffset(),\n      drawings: drawLayer.getKonvaLayer().toObject(),\n      drawingsDetails: drawController.getDrawStoreDetails()\n    });\n  }\n\n  /**\n   * Load an application state from JSON.\n   *\n   * @param {string} json The JSON representation of the state.\n   * @returns {object} The state object.\n   */\n  fromJSON(json) {\n    const data = JSON.parse(json);\n    let res = null;\n    if (data.version === '0.1') {\n      res = this.#readV01(data);\n    } else if (data.version === '0.2') {\n      res = this.#readV02(data);\n    } else if (data.version === '0.3') {\n      res = this.#readV03(data);\n    } else if (data.version === '0.4') {\n      res = this.#readV04(data);\n    } else if (data.version === '0.5') {\n      res = this.#readV05(data);\n    } else {\n      throw new Error('Unknown state file format version: \\'' +\n        data.version + '\\'.');\n    }\n    return res;\n  }\n\n  /**\n   * Load an application state from JSON.\n   *\n   * @param {object} app The app to apply the state to.\n   * @param {object} data The state data.\n   */\n  apply(app, data) {\n    const layerGroup = app.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    // display\n    viewController.setWindowLevel(\n      data['window-center'], data['window-width']);\n    // position is index...\n    viewController.setCurrentIndex(new Index(data.position));\n    // apply saved scale on top of current base one\n    const baseScale = app.getActiveLayerGroup().getBaseScale();\n    let scale = null;\n    let offset = null;\n    if (typeof data.scaleCenter !== 'undefined') {\n      scale = {\n        x: data.scale * baseScale.x,\n        y: data.scale * baseScale.y,\n        z: 1\n      };\n      // ---- transform translation (now) ----\n      // Tx = -offset.x * scale.x\n      // => offset.x = -Tx / scale.x\n      // ---- transform translation (before) ----\n      // origin.x = centerX - (centerX - origin.x) * (newZoomX / zoom.x);\n      // (zoom.x -> initial zoom = base scale, origin.x = 0)\n      // Tx = origin.x + (trans.x * zoom.x)\n      const originX = data.scaleCenter.x - data.scaleCenter.x * data.scale;\n      const originY = data.scaleCenter.y - data.scaleCenter.y * data.scale;\n      const oldTx = originX + data.translation.x * scale.x;\n      const oldTy = originY + data.translation.y * scale.y;\n      offset = {\n        x: -oldTx / scale.x,\n        y: -oldTy / scale.y,\n        z: 0\n      };\n    } else {\n      scale = {\n        x: data.scale.x * baseScale.x,\n        y: data.scale.y * baseScale.y,\n        z: baseScale.z\n      };\n      offset = {\n        x: data.offset.x,\n        y: data.offset.y,\n        z: 0\n      };\n    }\n    app.getActiveLayerGroup().setScale(scale);\n    app.getActiveLayerGroup().setOffset(offset);\n    // render to draw the view layer\n    app.render(0); //todo: fix\n    // drawings (will draw the draw layer)\n    app.setDrawings(data.drawings, data.drawingsDetails);\n  }\n\n  /**\n   * Read an application state from an Object in v0.1 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV01(data) {\n    // v0.1 -> v0.2\n    const v02DAndD = v01Tov02DrawingsAndDetails(data.drawings);\n    // v0.2 -> v0.3, v0.4\n    data.drawings = v02Tov03Drawings(v02DAndD.drawings).toObject();\n    data.drawingsDetails = v03Tov04DrawingsDetails(\n      v02DAndD.drawingsDetails);\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.2 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV02(data) {\n    // v0.2 -> v0.3, v0.4\n    data.drawings = v02Tov03Drawings(data.drawings).toObject();\n    data.drawingsDetails = v03Tov04DrawingsDetails(\n      v02Tov03DrawingsDetails(data.drawingsDetails));\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.3 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV03(data) {\n    // v0.3 -> v0.4\n    data.drawingsDetails = v03Tov04DrawingsDetails(data.drawingsDetails);\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.4 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV04(data) {\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n  /**\n   * Read an application state from an Object in v0.5 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV05(data) {\n    return data;\n  }\n\n} // State class\n\n/**\n * Convert drawings from v0.2 to v0.3.\n * v0.2: one layer per slice/frame\n * v0.3: one layer, one group per slice. setDrawing expects the full stage\n *\n * @param {Array} drawings An array of drawings.\n * @returns {object} The layer with the converted drawings.\n */\nfunction v02Tov03Drawings(drawings) {\n  // Auxiliar variables\n  let group, groupShapes, parentGroup;\n  // Avoid errors when dropping multiple states\n  //drawLayer.getChildren().each(function(node){\n  //    node.visible(false);\n  //});\n\n  /**\n   * Get the draw group id for a given position.\n   *\n   * @param {Index} currentPosition The current position.\n   * @returns {string} The group id.\n   */\n  function getDrawPositionGroupId(currentPosition) {\n    const sliceNumber = currentPosition.get(2);\n    const frameNumber = currentPosition.length() === 4\n      ? currentPosition.get(3) : 0;\n    return 'slice-' + sliceNumber + '_frame-' + frameNumber;\n  }\n\n  const drawLayer = new Konva.Layer({\n    listening: false,\n    visible: true\n  });\n\n  // Get the positions-groups data\n  const groupDrawings = typeof drawings === 'string'\n    ? JSON.parse(drawings) : drawings;\n  // Iterate over each position-groups\n  for (let k = 0, lenk = groupDrawings.length; k < lenk; ++k) {\n    // Iterate over each frame\n    for (let f = 0, lenf = groupDrawings[k].length; f < lenf; ++f) {\n      groupShapes = groupDrawings[k][f];\n      if (groupShapes.length !== 0) {\n        // Create position-group set as visible and append it to drawLayer\n        parentGroup = new Konva.Group({\n          id: getDrawPositionGroupId(new Index([1, 1, k, f])),\n          name: 'position-group',\n          visible: false\n        });\n\n        // Iterate over shapes-group\n        for (let g = 0, leng = groupShapes.length; g < leng; ++g) {\n          // create the konva group\n          group = Konva.Node.create(groupShapes[g]);\n          // enforce draggable: only the shape was draggable in v0.2,\n          // now the whole group is.\n          group.draggable(true);\n          group.getChildren().forEach(function (gnode) {\n            gnode.draggable(false);\n          });\n          // add to position group\n          parentGroup.add(group);\n        }\n        // add to layer\n        drawLayer.add(parentGroup);\n      }\n    }\n  }\n\n  return drawLayer;\n}\n\n/**\n * Convert drawings from v0.1 to v0.2.\n * v0.1: text on its own\n * v0.2: text as part of label\n *\n * @param {Array} inputDrawings An array of drawings.\n * @returns {object} The converted drawings.\n */\nfunction v01Tov02DrawingsAndDetails(inputDrawings) {\n  const newDrawings = [];\n  const drawingsDetails = {};\n\n  let drawGroups;\n  let drawGroup;\n  // loop over each slice\n  for (let k = 0, lenk = inputDrawings.length; k < lenk; ++k) {\n    // loop over each frame\n    newDrawings[k] = [];\n    for (let f = 0, lenf = inputDrawings[k].length; f < lenf; ++f) {\n      // draw group\n      drawGroups = inputDrawings[k][f];\n      const newFrameDrawings = [];\n      // Iterate over shapes-group\n      for (let g = 0, leng = drawGroups.length; g < leng; ++g) {\n        // create konva group from input\n        drawGroup = Konva.Node.create(drawGroups[g]);\n        // force visible (not set in state)\n        drawGroup.visible(true);\n        // label position\n        let pos = {x: 0, y: 0};\n        // update shape colour\n        const kshape = drawGroup.getChildren(function (node) {\n          return node.name() === 'shape';\n        })[0];\n        kshape.stroke(colourNameToHex(kshape.stroke()));\n        // special line case\n        if (drawGroup.name() === 'line-group') {\n          // update name\n          drawGroup.name('ruler-group');\n          // add ticks\n          const ktick0 = new Konva.Line({\n            points: [kshape.points()[0],\n              kshape.points()[1],\n              kshape.points()[0],\n              kshape.points()[1]],\n            name: 'shape-tick0'\n          });\n          drawGroup.add(ktick0);\n          const ktick1 = new Konva.Line({\n            points: [kshape.points()[2],\n              kshape.points()[3],\n              kshape.points()[2],\n              kshape.points()[3]],\n            name: 'shape-tick1'\n          });\n          drawGroup.add(ktick1);\n        }\n        // special protractor case: update arc name\n        const karcs = drawGroup.getChildren(function (node) {\n          return node.name() === 'arc';\n        });\n        if (karcs.length === 1) {\n          karcs[0].name('shape-arc');\n        }\n        // get its text\n        const ktexts = drawGroup.getChildren(function (node) {\n          return node.name() === 'text';\n        });\n        // update text: move it into a label\n        let ktext = new Konva.Text({\n          name: 'text',\n          text: ''\n        });\n        if (ktexts.length === 1) {\n          pos.x = ktexts[0].x();\n          pos.y = ktexts[0].y();\n          // remove it from the group\n          ktexts[0].remove();\n          // use it\n          ktext = ktexts[0];\n        } else {\n          // use shape position if no text\n          if (kshape.points().length !== 0) {\n            pos = {x: kshape.points()[0],\n              y: kshape.points()[1]};\n          }\n        }\n        // create new label with text and tag\n        const klabel = new Konva.Label({\n          x: pos.x,\n          y: pos.y,\n          name: 'label'\n        });\n        klabel.add(ktext);\n        klabel.add(new Konva.Tag());\n        // add label to group\n        drawGroup.add(klabel);\n        // add group to list\n        newFrameDrawings.push(JSON.stringify(drawGroup.toObject()));\n\n        // create details (v0.3 format)\n        let textExpr = ktext.text();\n        const txtLen = textExpr.length;\n        let quant = null;\n        // adapt to text with flag\n        if (drawGroup.name() === 'ruler-group') {\n          quant = {\n            length: {\n              value: parseFloat(textExpr.substring(0, txtLen - 2)),\n              unit: textExpr.substring(-2)\n            }\n          };\n          textExpr = '{length}';\n        } else if (drawGroup.name() === 'ellipse-group' ||\n                    drawGroup.name() === 'rectangle-group') {\n          quant = {\n            surface: {\n              value: parseFloat(textExpr.substring(0, txtLen - 3)),\n              unit: textExpr.substring(-3)\n            }\n          };\n          textExpr = '{surface}';\n        } else if (drawGroup.name() === 'protractor-group' ||\n                    drawGroup.name() === 'rectangle-group') {\n          quant = {\n            angle: {\n              value: parseFloat(textExpr.substring(0, txtLen - 1)),\n              unit: textExpr.substring(-1)\n            }\n          };\n          textExpr = '{angle}';\n        }\n        // set details\n        drawingsDetails[drawGroup.id()] = {\n          textExpr: textExpr,\n          longText: '',\n          quant: quant\n        };\n\n      }\n      newDrawings[k].push(newFrameDrawings);\n    }\n  }\n\n  return {drawings: newDrawings, drawingsDetails: drawingsDetails};\n}\n\n/**\n * Convert drawing details from v0.2 to v0.3.\n * - v0.2: array [nslices][nframes] with all\n * - v0.3: simple array of objects referenced by draw ids\n *\n * @param {Array} details An array of drawing details.\n * @returns {object} The converted drawings.\n */\nfunction v02Tov03DrawingsDetails(details) {\n  const res = {};\n  // Get the positions-groups data\n  const groupDetails = typeof details === 'string'\n    ? JSON.parse(details) : details;\n  // Iterate over each position-groups\n  for (let k = 0, lenk = groupDetails.length; k < lenk; ++k) {\n    // Iterate over each frame\n    for (let f = 0, lenf = groupDetails[k].length; f < lenf; ++f) {\n      // Iterate over shapes-group\n      for (let g = 0, leng = groupDetails[k][f].length; g < leng; ++g) {\n        const group = groupDetails[k][f][g];\n        res[group.id] = {\n          textExpr: group.textExpr,\n          longText: group.longText,\n          quant: group.quant\n        };\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Convert drawing details from v0.3 to v0.4.\n * - v0.3: properties at group root\n * - v0.4: properties in group meta object\n *\n * @param {Array} details An array of drawing details.\n * @returns {object} The converted drawings.\n */\nfunction v03Tov04DrawingsDetails(details) {\n  const res = {};\n  const keys = Object.keys(details);\n  // Iterate over each position-groups\n  for (let k = 0, lenk = keys.length; k < lenk; ++k) {\n    const detail = details[keys[k]];\n    res[keys[k]] = {\n      meta: {\n        textExpr: detail.textExpr,\n        longText: detail.longText,\n        quantification: detail.quant\n      }\n    };\n  }\n  return res;\n}\n\n/**\n * Convert drawing from v0.4 to v0.5.\n * - v0.4: position as object\n * - v0.5: position as array\n *\n * @param {object} data An array of drawing.\n * @returns {object} The converted drawings.\n */\nfunction v04Tov05Data(data) {\n  const pos = data.position;\n  data.position = [pos.i, pos.j, pos.k];\n  return data;\n}\n\n/**\n * Convert drawing from v0.4 to v0.5.\n * - v0.4: draw id as 'slice-0_frame-1'\n * - v0.5: draw id as '#2-0_#3-1''\n *\n * @param {object} inputDrawings An array of drawing.\n * @returns {object} The converted drawings.\n */\nfunction v04Tov05Drawings(inputDrawings) {\n  // Iterate over each position-groups\n  const posGroups = inputDrawings.children;\n  for (let k = 0, lenk = posGroups.length; k < lenk; ++k) {\n    const posGroup = posGroups[k];\n    const id = posGroup.attrs.id;\n    const ids = id.split('_');\n    const sliceNumber = parseInt(ids[0].substring(6), 10); // 'slice-0'\n    const frameNumber = parseInt(ids[1].substring(6), 10); // 'frame-0'\n    let newId = '#2-';\n    if (sliceNumber === 0 && frameNumber !== 0) {\n      newId += frameNumber;\n    } else {\n      newId += sliceNumber;\n    }\n    posGroup.attrs.id = newId;\n  }\n  return inputDrawings;\n}\n","import {logger} from './logger';\nimport {splitKeyValueString} from './string';\n\n/**\n * Get an full object URL from a string uri.\n *\n * @param {string} uri A string representing the url.\n * @returns {URL} A URL object.\n */\nexport function getUrlFromUri(uri) {\n  // add base to allow for relative urls\n  // (base is not used for absolute urls)\n  return new URL(uri, window.location.origin);\n}\n\n/**\n * Split an input URI:\n * 'root?key0=val00&key0=val01&key1=val10' returns\n * { base : root, query : [ key0 : [val00, val01], key1 : val1 ] }\n * Returns an empty object if the input string is not correct (null, empty...)\n * or if it is not a query string (no question mark).\n *\n * @param {string} uri The string to split.\n * @returns {object} The split string.\n */\nexport function splitUri(uri) {\n  // result\n  const result = {};\n  // check if query string\n  let sepIndex = null;\n  if (uri && (sepIndex = uri.indexOf('?')) !== -1) {\n    // base: before the '?'\n    result.base = uri.substring(0, sepIndex);\n    // query : after the '?' and until possible '#'\n    let hashIndex = uri.indexOf('#');\n    if (hashIndex === -1) {\n      hashIndex = uri.length;\n    }\n    const query = uri.substring(sepIndex + 1, hashIndex);\n    // split key/value pairs of the query\n    result.query = splitKeyValueString(query);\n  }\n  // return\n  return result;\n}\n\n/**\n * Get the query part, split into an array, of an input URI.\n * The URI scheme is: 'base?query#fragment'\n *\n * @param {string} uri The input URI.\n * @returns {object} The query part, split into an array, of the input URI.\n */\nexport function getUriQuery(uri) {\n  // split\n  const parts = splitUri(uri);\n  // check not empty\n  if (Object.keys(parts).length === 0) {\n    return null;\n  }\n  // return query\n  return parts.query;\n}\n\n/**\n * Generic URI query decoder.\n * Supports manifest:\n *   [dwv root]?input=encodeURIComponent('[manifest file]')&type=manifest\n * or encoded URI with base and key value/pairs:\n *   [dwv root]?input=encodeURIComponent([root]?key0=value0&key1=value1)\n *\n * @param {object} query The query part to the input URI.\n * @param {Function} callback The function to call with the decoded file urls.\n * @param {object} options Optional url request options.\n */\nexport function decodeQuery(query, callback, options) {\n  // manifest\n  if (query.type && query.type === 'manifest') {\n    decodeManifestQuery(query, callback);\n  } else {\n    // default case: encoded URI with base and key/value pairs\n    callback(\n      decodeKeyValueUri(query.input, query.dwvReplaceMode),\n      options);\n  }\n}\n\n/**\n * Decode a Key/Value pair URI. If a key is repeated, the result\n * be an array of base + each key.\n *\n * @param {string} uri The URI to decode.\n * @param {string} replaceMode The key replace mode.\n *   replaceMode can be:\n *   - key (default): keep the key\n *   - other than key: do not use the key\n *   'file' is a special case where the '?' of the query is not kept.\n * @returns {Array} The list of input file urls.\n */\nexport function decodeKeyValueUri(uri, replaceMode) {\n  const result = [];\n\n  // repeat key replace mode (default to keep key)\n  let repeatKeyReplaceMode = 'key';\n  if (replaceMode) {\n    repeatKeyReplaceMode = replaceMode;\n  }\n\n  // decode input URI\n  const queryUri = decodeURIComponent(uri);\n  // get key/value pairs from input URI\n  const inputQueryPairs = splitUri(queryUri);\n  if (Object.keys(inputQueryPairs).length === 0) {\n    result.push(queryUri);\n  } else {\n    const keys = Object.keys(inputQueryPairs.query);\n    // find repeat key\n    let repeatKey = null;\n    for (let i = 0; i < keys.length; ++i) {\n      if (inputQueryPairs.query[keys[i]] instanceof Array) {\n        repeatKey = keys[i];\n        break;\n      }\n    }\n\n    if (!repeatKey) {\n      result.push(queryUri);\n    } else {\n      const repeatList = inputQueryPairs.query[repeatKey];\n      // build base uri\n      let baseUrl = inputQueryPairs.base;\n      // add '?' when:\n      // - base is not empty\n      // - the repeatKey is not 'file'\n      // root/path/to/?file=0.jpg&file=1.jpg\n      if (baseUrl !== '' && repeatKey !== 'file') {\n        baseUrl += '?';\n      }\n      let gotOneArg = false;\n      for (let j = 0; j < keys.length; ++j) {\n        if (keys[j] !== repeatKey) {\n          if (gotOneArg) {\n            baseUrl += '&';\n          }\n          baseUrl += keys[j] + '=' + inputQueryPairs.query[keys[j]];\n          gotOneArg = true;\n        }\n      }\n      // append built urls to result\n      let url;\n      for (let k = 0; k < repeatList.length; ++k) {\n        url = baseUrl;\n        if (gotOneArg) {\n          url += '&';\n        }\n        if (repeatKeyReplaceMode === 'key') {\n          url += repeatKey + '=';\n        }\n        // other than 'key' mode: do nothing\n        url += repeatList[k];\n        result.push(url);\n      }\n    }\n  }\n  // return\n  return result;\n}\n\n/**\n * Decode a manifest query.\n *\n * @external XMLHttpRequest\n * @param {object} query The manifest query: {input, nslices},\n * with input the input URI and nslices the number of slices.\n * @param {Function} callback The function to call with the decoded urls.\n */\nfunction decodeManifestQuery(query, callback) {\n  let uri = '';\n  if (query.input[0] === '/') {\n    uri = window.location.protocol + '//' + window.location.host;\n  }\n  // TODO: needs to be decoded (decodeURIComponent?\n  uri += query.input;\n\n  /**\n   * Handle error.\n   *\n   * @param {object} event The error event.\n   */\n  function onError(event) {\n    logger.warn('RequestError while receiving manifest: ' +\n      event.target.status);\n  }\n\n  /**\n   * Handle load.\n   *\n   * @param {object} event The load event.\n   */\n  function onLoad(event) {\n    callback(decodeManifest(event.target.responseXML, query.nslices));\n  }\n\n  const request = new XMLHttpRequest();\n  request.open('GET', decodeURIComponent(uri), true);\n  request.responseType = 'document';\n  request.onload = onLoad;\n  request.onerror = onError;\n  request.send(null);\n}\n\n/**\n * Decode an XML manifest.\n *\n * @param {object} manifest The manifest to decode.\n * @param {number} nslices The number of slices to load.\n * @returns {Array} The decoded manifest.\n */\nexport function decodeManifest(manifest, nslices) {\n  const result = [];\n  // wado url\n  const wadoElement = manifest.getElementsByTagName('wado_query');\n  const wadoURL = wadoElement[0].getAttribute('wadoURL');\n  const rootURL = wadoURL + '?requestType=WADO&contentType=application/dicom&';\n  // patient list\n  const patientList = manifest.getElementsByTagName('Patient');\n  if (patientList.length > 1) {\n    logger.warn('More than one patient, loading first one.');\n  }\n  // study list\n  const studyList = patientList[0].getElementsByTagName('Study');\n  if (studyList.length > 1) {\n    logger.warn('More than one study, loading first one.');\n  }\n  const studyUID = studyList[0].getAttribute('StudyInstanceUID');\n  // series list\n  const seriesList = studyList[0].getElementsByTagName('Series');\n  if (seriesList.length > 1) {\n    logger.warn('More than one series, loading first one.');\n  }\n  const seriesUID = seriesList[0].getAttribute('SeriesInstanceUID');\n  // instance list\n  const instanceList = seriesList[0].getElementsByTagName('Instance');\n  // loop on instances and push links\n  let max = instanceList.length;\n  if (nslices < max) {\n    max = nslices;\n  }\n  for (let i = 0; i < max; ++i) {\n    const sopInstanceUID = instanceList[i].getAttribute('SOPInstanceUID');\n    const link = rootURL +\n        '&studyUID=' + studyUID +\n        '&seriesUID=' + seriesUID +\n        '&objectUID=' + sopInstanceUID;\n    result.push(link);\n  }\n  // return\n  return result;\n}\n","import {ListenerHandler} from '../utils/listen';\n\n/**\n * UndoStack class.\n */\nexport class UndoStack {\n  /**\n   * Array of commands.\n   *\n   * @type {Array}\n   */\n  #stack = [];\n\n  /**\n   * Current command index.\n   *\n   * @type {number}\n   */\n  #curCmdIndex = 0;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the stack size.\n   *\n   * @returns {number} The size of the stack.\n   */\n  getStackSize() {\n    return this.#stack.length;\n  }\n\n  /**\n   * Get the current stack index.\n   *\n   * @returns {number} The stack index.\n   */\n  getCurrentStackIndex() {\n    return this.#curCmdIndex;\n  }\n\n  /**\n   * Add a command to the stack.\n   *\n   * @param {object} cmd The command to add.\n   * @fires UndoStack#undoadd\n   */\n  add(cmd) {\n    // clear commands after current index\n    this.#stack = this.#stack.slice(0, this.#curCmdIndex);\n    // store command\n    this.#stack.push(cmd);\n    // increment index\n    ++this.#curCmdIndex;\n    /**\n     * Command add to undo stack event.\n     *\n     * @event UndoStack#undoadd\n     * @type {object}\n     * @property {string} command The name of the command added to the\n     *   undo stack.\n     */\n    this.#fireEvent({\n      type: 'undoadd',\n      command: cmd.getName()\n    });\n  }\n\n  /**\n   * Undo the last command.\n   *\n   * @fires UndoStack#undo\n   */\n  undo() {\n    // a bit inefficient...\n    if (this.#curCmdIndex > 0) {\n      // decrement command index\n      --this.#curCmdIndex;\n      // undo last command\n      this.#stack[this.#curCmdIndex].undo();\n      /**\n       * Command undo event.\n       *\n       * @event UndoStack#undo\n       * @type {object}\n       * @property {string} command The name of the undone command.\n       */\n      this.#fireEvent({\n        type: 'undo',\n        command: this.#stack[this.#curCmdIndex].getName()\n      });\n    }\n  }\n\n  /**\n   * Redo the last command.\n   *\n   * @fires UndoStack#redo\n   */\n  redo() {\n    if (this.#curCmdIndex < this.#stack.length) {\n      // run last command\n      this.#stack[this.#curCmdIndex].execute();\n      /**\n       * Command redo event.\n       *\n       * @event UndoStack#redo\n       * @type {object}\n       * @property {string} command The name of the redone command.\n       */\n      this.#fireEvent({\n        type: 'redo',\n        command: this.#stack[this.#curCmdIndex].getName()\n      });\n      // increment command index\n      ++this.#curCmdIndex;\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // UndoStack class\n","import {InteractionEventNames, getEventOffset} from '../gui/generic';\n\n/**\n * Toolbox controller.\n */\nexport class ToolboxController {\n\n  /**\n   * List of tools to control.\n   *\n   * @type {object}\n   */\n  #toolList;\n\n  /**\n   * Selected tool.\n   *\n   * @type {object}\n   */\n  #selectedTool = null;\n\n  /**\n   * Callback store to allow attach/detach.\n   *\n   * @type {Array}\n   */\n  #callbackStore = [];\n\n  /**\n   * Current layers bound to tool.\n   *\n   * @type {object}\n   */\n  #boundLayers = {};\n\n  /**\n   * @param {object} toolList The list of tool objects.\n   */\n  constructor(toolList) {\n    this.#toolList = toolList;\n  }\n\n  /**\n   * Initialise.\n   */\n  init() {\n    for (const key in this.#toolList) {\n      this.#toolList[key].init();\n    }\n    // keydown listener\n    window.addEventListener('keydown',\n      this.#getOnMouch('window', 'keydown'), true);\n  }\n\n  /**\n   * Get the tool list.\n   *\n   * @returns {Array} The list of tool objects.\n   */\n  getToolList() {\n    return this.#toolList;\n  }\n\n  /**\n   * Check if a tool is in the tool list.\n   *\n   * @param {string} name The name to check.\n   * @returns {boolean} The tool list element for the given name.\n   */\n  hasTool(name) {\n    return typeof this.getToolList()[name] !== 'undefined';\n  }\n\n  /**\n   * Get the selected tool.\n   *\n   * @returns {object} The selected tool.\n   */\n  getSelectedTool() {\n    return this.#selectedTool;\n  }\n\n  /**\n   * Get the selected tool event handler.\n   *\n   * @param {string} eventType The event type, for example\n   *   mousedown, touchstart...\n   * @returns {Function} The event handler.\n   */\n  getSelectedToolEventHandler(eventType) {\n    return this.getSelectedTool()[eventType];\n  }\n\n  /**\n   * Set the selected tool.\n   *\n   * @param {string} name The name of the tool.\n   */\n  setSelectedTool(name) {\n    // check if we have it\n    if (!this.hasTool(name)) {\n      throw new Error('Unknown tool: \\'' + name + '\\'');\n    }\n    // de-activate previous\n    if (this.#selectedTool) {\n      this.#selectedTool.activate(false);\n    }\n    // set internal var\n    this.#selectedTool = this.#toolList[name];\n    // activate new tool\n    this.#selectedTool.activate(true);\n  }\n\n  /**\n   * Set the selected tool live features.\n   *\n   * @param {object} list The list of features.\n   */\n  setToolFeatures(list) {\n    if (this.getSelectedTool()) {\n      this.getSelectedTool().setFeatures(list);\n    }\n  }\n\n  /**\n   * Listen to layer interaction events.\n   *\n   * @param {object} layer The layer to listen to.\n   * @param {string} layerGroupDivId The associated layer group div id.\n   */\n  bindLayer(layer, layerGroupDivId) {\n    if (typeof this.#boundLayers[layerGroupDivId] !== 'undefined') {\n      this.#unbindLayer(this.#boundLayers[layerGroupDivId]);\n    }\n    layer.bindInteraction();\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      layer.addEventListener(names[i],\n        this.#getOnMouch(layer.getId(), names[i]));\n    }\n    // update class var\n    this.#boundLayers[layerGroupDivId] = layer;\n  }\n\n  /**\n   * Remove canvas mouse and touch listeners.\n   *\n   * @param {object} layer The layer to stop listening to.\n   */\n  #unbindLayer(layer) {\n    layer.unbindInteraction();\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      layer.removeEventListener(names[i],\n        this.#getOnMouch(layer.getId(), names[i]));\n    }\n  }\n\n  /**\n   * Mou(se) and (T)ouch event handler. This function just determines\n   * the mouse/touch position relative to the canvas element.\n   * It then passes it to the current tool.\n   *\n   * @param {string} layerId The layer id.\n   * @param {string} eventType The event type.\n   * @returns {object} A callback for the provided layer and event.\n   */\n  #getOnMouch(layerId, eventType) {\n    // augment event with converted offsets\n    const augmentEventOffsets = function (event) {\n      // event offset(s)\n      const offsets = getEventOffset(event);\n      // should have at least one offset\n      event._x = offsets[0].x;\n      event._y = offsets[0].y;\n      // possible second\n      if (offsets.length === 2) {\n        event._x1 = offsets[1].x;\n        event._y1 = offsets[1].y;\n      }\n    };\n\n    const applySelectedTool = (event) => {\n      // make sure we have a tool\n      if (this.#selectedTool) {\n        const func = this.#selectedTool[event.type];\n        if (func) {\n          func(event);\n        }\n      }\n    };\n\n    if (typeof this.#callbackStore[layerId] === 'undefined') {\n      this.#callbackStore[layerId] = [];\n    }\n\n    if (typeof this.#callbackStore[layerId][eventType] === 'undefined') {\n      let callback = null;\n      if (eventType === 'keydown') {\n        callback = function (event) {\n          applySelectedTool(event);\n        };\n      } else if (eventType === 'touchend') {\n        callback = function (event) {\n          applySelectedTool(event);\n        };\n      } else {\n        // mouse or touch events\n        callback = function (event) {\n          augmentEventOffsets(event);\n          applySelectedTool(event);\n        };\n      }\n      // store callback\n      this.#callbackStore[layerId][eventType] = callback;\n    }\n\n    return this.#callbackStore[layerId][eventType];\n  }\n\n} // class ToolboxController\n","/**\n * Multiple progresses handler.\n * Stores a multi dimensional list of progresses to allow to\n * calculate a global progress.\n *\n */\nexport class MultiProgressHandler {\n\n  /**\n   * List of progresses.\n   * First dimension is a list of item for which the progress is recorded,\n   *   for example file names.\n   * Second dimension is a list of possible progresses, for example\n   *   the progress of the download and the progress of the decoding.\n   *\n   * @type {Array}\n   */\n  #progresses = [];\n\n  /**\n   * Number of dimensions.\n   *\n   * @type {number}\n   */\n  #numberOfDimensions = 2;\n\n  /**\n   * Progress callback.\n   *\n   * @type {Function}\n   */\n  #callback;\n\n  /**\n   * @param {Function} callback The function to pass the global progress to.\n   */\n  constructor(callback) {\n    this.#callback = callback;\n  }\n\n  /**\n   * Set the number of dimensions.\n   *\n   * @param {number} num The number.\n   */\n  setNumberOfDimensions(num) {\n    this.#numberOfDimensions = num;\n  }\n\n  /**\n   * Set the number of data to load.\n   *\n   * @param {number} n The number of data to load.\n   */\n  setNToLoad(n) {\n    for (let i = 0; i < n; ++i) {\n      this.#progresses[i] = [];\n      for (let j = 0; j < this.#numberOfDimensions; ++j) {\n        this.#progresses[i][j] = 0;\n      }\n    }\n  }\n\n  /**\n   * Handle a load progress.\n   * Call the member callback with a global event.\n   *\n   * @param {object} event The progress event.\n   */\n  onprogress = (event) => {\n    // check event\n    if (!event.lengthComputable) {\n      return;\n    }\n    if (typeof event.subindex === 'undefined') {\n      return;\n    }\n    if (typeof event.index === 'undefined') {\n      return;\n    }\n    // calculate percent\n    const percent = (event.loaded * 100) / event.total;\n    // set percent for index\n    this.#progresses[event.index][event.subindex] = percent;\n\n    // item progress\n    let item = null;\n    if (typeof event.item !== 'undefined') {\n      item = event.item;\n    } else {\n      item = {\n        loaded: this.#getItemProgress(event.index),\n        total: 100,\n        source: event.source\n      };\n    }\n\n    // call callback with a global event\n    this.#callback({\n      lengthComputable: true,\n      loaded: this.#getGlobalPercent(),\n      total: 100,\n      item: item\n    });\n  };\n\n  /**\n   * Get the item load percent.\n   *\n   * @param {number} index The index of the item.\n   * @returns {number} The load percentage.\n   */\n  #getItemProgress(index) {\n    let sum = 0;\n    for (let j = 0; j < this.#numberOfDimensions; ++j) {\n      sum += this.#progresses[index][j];\n    }\n    return sum / this.#numberOfDimensions;\n  }\n\n  /**\n   * Get the global load percent including the provided one.\n   *\n   * @returns {number} The accumulated percentage.\n   */\n  #getGlobalPercent() {\n    let sum = 0;\n    const lenprog = this.#progresses.length;\n    for (let i = 0; i < lenprog; ++i) {\n      sum += this.#getItemProgress(i);\n    }\n    return Math.round(sum / lenprog);\n  }\n\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Create a mono progress event handler.\n   *\n   * @param {number} index The index of the data.\n   * @param {number} subindex The sub-index of the data.\n   * @returns {eventFn} A progress handler function.\n   */\n  getMonoProgressHandler(index, subindex) {\n    return (event) => {\n      event.index = index;\n      event.subindex = subindex;\n      this.onprogress(event);\n    };\n  }\n\n  /**\n   * Create a mono progress event handler with an undefined index.\n   * Warning: The caller handles the progress index.\n   *\n   * @param {number} subindex The sub-index of the data.\n   * @returns {eventFn} A progress handler function.\n   */\n  getUndefinedMonoProgressHandler(subindex) {\n    return (event) => {\n      event.subindex = subindex;\n      this.onprogress(event);\n    };\n  }\n}\n","import {\n  DicomParser,\n  getTransferSyntaxName\n} from './dicomParser';\nimport {\n  isPixelDataTag,\n  isItemDelimitationItemTag,\n  isSequenceDelimitationItemTag,\n  getItemTag,\n  getItemDelimitationItemTag,\n  getSequenceDelimitationItemTag,\n  getPixelDataTag,\n  getTagFromDictionary,\n  getTagFromKey\n} from './dicomTag';\nimport {isNativeLittleEndian} from './dataReader';\nimport {Spacing} from '../image/spacing';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Tag} from './dicomTag';\n/* eslint-enable no-unused-vars */\n\n/**\n * DicomElements wrapper.\n *\n * Warning: limited support for merged meta data.\n */\nexport class DicomElementsWrapper {\n\n  /**\n   * Wrapped elements.\n   *\n   * @type {Array}\n   */\n  #dicomElements;\n\n  /**\n   * @param {Array} dicomElements The elements to wrap.\n   */\n  constructor(dicomElements) {\n    this.#dicomElements = dicomElements;\n  }\n\n  /**\n   * Get a DICOM Element value from a group/element key.\n   *\n   * @param {string} groupElementKey The key to retrieve.\n   * @param {boolean} [asArray] Get the value as an Array.\n   * @returns {object} The DICOM element value.\n   */\n  getFromKey(groupElementKey, asArray) {\n    // default\n    if (typeof asArray === 'undefined') {\n      asArray = false;\n    }\n    let value = null;\n    const dElement = this.#dicomElements[groupElementKey];\n    if (typeof dElement !== 'undefined') {\n      // raw value if only one\n      if (dElement.value.length === 1 && asArray === false) {\n        value = dElement.value[0];\n      } else {\n        value = dElement.value;\n      }\n    }\n    return value;\n  }\n\n  /**\n   * Dump the DICOM tags to an object.\n   *\n   * @returns {object} The DICOM tags as an object.\n   */\n  dumpToObject() {\n    const keys = Object.keys(this.#dicomElements);\n    const obj = {};\n    let dicomElement = null;\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\n      dicomElement = this.#dicomElements[keys[i]];\n      const tag = getTagFromKey(keys[i]);\n      obj[this.#getTagName(tag)] =\n        this.#getElementAsObject(tag, dicomElement);\n    }\n    return obj;\n  }\n\n  /**\n   * Get a tag string name from the dictionary.\n   *\n   * @param {object} tag The DICOM tag object.\n   * @returns {string} The tag name.\n   */\n  #getTagName(tag) {\n    let name = tag.getNameFromDictionary();\n    if (name === null) {\n      name = tag.getKey();\n    }\n    return name;\n  }\n\n  /**\n   * Get a DICOM element as a simple object.\n   *\n   * @param {Tag} tag The DICOM tag.\n   * @param {object} dicomElement The DICOM element.\n   * @returns {object} The element as a simple object.\n   */\n  #getElementAsObject(tag, dicomElement) {\n    // element value\n    let value = null;\n\n    const isPixel = isPixelDataTag(tag);\n\n    const vr = dicomElement.vr;\n    if (vr === 'SQ' &&\n      typeof dicomElement.value !== 'undefined' &&\n      !isPixel) {\n      value = [];\n      const items = dicomElement.value;\n      let itemValues = null;\n      for (let i = 0; i < items.length; ++i) {\n        itemValues = {};\n        const keys = Object.keys(items[i]);\n        for (let k = 0; k < keys.length; ++k) {\n          const itemElement = items[i][keys[k]];\n          const tag = getTagFromKey(keys[k]);\n          const key = this.#getTagName(tag);\n          // do not inclure Item elements\n          if (key !== 'Item') {\n            itemValues[key] = this.#getElementAsObject(tag, itemElement);\n          }\n        }\n        value.push(itemValues);\n      }\n    } else {\n      value = this.#getElementValueAsString(tag, dicomElement);\n    }\n\n    // return\n    return {\n      value: value,\n      vr: vr\n    };\n  }\n\n  /**\n   * Dump the DICOM tags to a string.\n   *\n   * @returns {string} The dumped file.\n   */\n  dump() {\n    const keys = Object.keys(this.#dicomElements);\n    let result = '\\n';\n    result += '# Dicom-File-Format\\n';\n    result += '\\n';\n    result += '# Dicom-Meta-Information-Header\\n';\n    result += '# Used TransferSyntax: ';\n    if (isNativeLittleEndian()) {\n      result += 'Little Endian Explicit\\n';\n    } else {\n      result += 'NOT Little Endian Explicit\\n';\n    }\n    let dicomElement = null;\n    let tag = null;\n    let checkHeader = true;\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\n      dicomElement = this.#dicomElements[keys[i]];\n      tag = getTagFromKey(keys[i]);\n      if (checkHeader && tag.getGroup() !== '0002') {\n        result += '\\n';\n        result += '# Dicom-Data-Set\\n';\n        result += '# Used TransferSyntax: ';\n        const syntax = this.#dicomElements['00020010'].value[0];\n        result += getTransferSyntaxName(syntax);\n        result += '\\n';\n        checkHeader = false;\n      }\n      result += this.#getElementAsString(tag, dicomElement) + '\\n';\n    }\n    return result;\n  }\n\n  /**\n   * Get a data element value as a string.\n   *\n   * @param {Tag} tag The DICOM tag.\n   * @param {object} dicomElement The DICOM element.\n   * @param {boolean} [pretty] When set to true, returns a 'pretified' content.\n   * @returns {string} A string representation of the DICOM element.\n   */\n  #getElementValueAsString(tag, dicomElement, pretty) {\n    let str = '';\n    const strLenLimit = 65;\n\n    // dafault to pretty output\n    if (typeof pretty === 'undefined') {\n      pretty = true;\n    }\n    // check dicom element input\n    if (typeof dicomElement === 'undefined' || dicomElement === null) {\n      return str;\n    }\n\n    // Polyfill for Number.isInteger.\n    const isInteger = Number.isInteger || function (value) {\n      return typeof value === 'number' &&\n        isFinite(value) &&\n        Math.floor(value) === value;\n    };\n\n    // TODO Support sequences.\n\n    if (dicomElement.vr !== 'SQ' &&\n      dicomElement.value.length === 1 && dicomElement.value[0] === '') {\n      str += '(no value available)';\n    } else if (isPixelDataTag(tag) &&\n      dicomElement.undefinedLength) {\n      str = '(PixelSequence)';\n    } else if (dicomElement.vr === 'DA' && pretty) {\n      const daObj = getDate(dicomElement);\n      const da = new Date(daObj.year, daObj.monthIndex, daObj.day);\n      str = da.toLocaleDateString();\n    } else if (dicomElement.vr === 'TM' && pretty) {\n      const tmObj = getTime(dicomElement);\n      str = tmObj.hours + ':' + tmObj.minutes + ':' + tmObj.seconds;\n    } else {\n      let isOtherVR = false;\n      if (dicomElement.vr.length !== 0) {\n        isOtherVR = (dicomElement.vr[0].toUpperCase() === 'O');\n      }\n      const isFloatNumberVR = (dicomElement.vr === 'FL' ||\n        dicomElement.vr === 'FD' ||\n        dicomElement.vr === 'DS');\n      let valueStr = '';\n      for (let k = 0, lenk = dicomElement.value.length; k < lenk; ++k) {\n        valueStr = '';\n        if (k !== 0) {\n          valueStr += '\\\\';\n        }\n        if (isFloatNumberVR) {\n          const num = Number(dicomElement.value[k]);\n          if (!isInteger(num) && pretty) {\n            valueStr += num.toPrecision(4);\n          } else {\n            valueStr += num.toString();\n          }\n        } else if (isOtherVR) {\n          let tmp = dicomElement.value[k].toString(16);\n          if (dicomElement.vr === 'OB') {\n            tmp = '00'.substring(0, 2 - tmp.length) + tmp;\n          } else {\n            tmp = '0000'.substring(0, 4 - tmp.length) + tmp;\n          }\n          valueStr += tmp;\n        } else {\n          valueStr += dicomElement.value[k];\n        }\n        // check length\n        if (str.length + valueStr.length <= strLenLimit) {\n          str += valueStr;\n        } else {\n          str += '...';\n          break;\n        }\n      }\n    }\n    return str;\n  }\n\n  /**\n   * Get a data element as a string.\n   *\n   * @param {Tag} tag The DICOM tag.\n   * @param {object} dicomElement The DICOM element.\n   * @param {string} [prefix] A string to prepend this one.\n   * @returns {string} The element as a string.\n   */\n  #getElementAsString(tag, dicomElement, prefix) {\n    // default prefix\n    prefix = prefix || '';\n\n    // get tag anme from dictionary\n    const tagName = tag.getNameFromDictionary();\n\n    let deSize = dicomElement.value.length;\n    let isOtherVR = false;\n    if (dicomElement.vr.length !== 0) {\n      isOtherVR = (dicomElement.vr[0].toUpperCase() === 'O');\n    }\n\n    // no size for delimitations\n    if (isItemDelimitationItemTag(tag) ||\n      isSequenceDelimitationItemTag(tag)) {\n      deSize = 0;\n    } else if (isOtherVR) {\n      deSize = 1;\n    }\n\n    const isPixSequence = (isPixelDataTag(tag) &&\n      dicomElement.undefinedLength);\n\n    let line = null;\n\n    // (group,element)\n    line = '(';\n    line += tag.getGroup().toLowerCase();\n    line += ',';\n    line += tag.getElement().toLowerCase();\n    line += ') ';\n    // value representation\n    line += dicomElement.vr;\n    // value\n    if (dicomElement.vr !== 'SQ' &&\n      dicomElement.value.length === 1 &&\n      dicomElement.value[0] === '') {\n      line += ' (no value available)';\n      deSize = 0;\n    } else {\n      // simple number display\n      if (dicomElement.vr === 'na') {\n        line += ' ';\n        line += dicomElement.value[0];\n      } else if (isPixSequence) {\n        // pixel sequence\n        line += ' (PixelSequence #=' + deSize + ')';\n      } else if (dicomElement.vr === 'SQ') {\n        line += ' (Sequence with';\n        if (dicomElement.undefinedLength) {\n          line += ' undefined';\n        } else {\n          line += ' explicit';\n        }\n        line += ' length #=';\n        line += dicomElement.value.length;\n        line += ')';\n      } else if (isOtherVR ||\n          dicomElement.vr === 'pi' ||\n          dicomElement.vr === 'UL' ||\n          dicomElement.vr === 'US' ||\n          dicomElement.vr === 'SL' ||\n          dicomElement.vr === 'SS' ||\n          dicomElement.vr === 'FL' ||\n          dicomElement.vr === 'FD' ||\n          dicomElement.vr === 'AT') {\n        // 'O'ther array, limited display length\n        line += ' ';\n        line += this.#getElementValueAsString(tag, dicomElement, false);\n      } else {\n        // default\n        line += ' [';\n        line += this.#getElementValueAsString(tag, dicomElement, false);\n        line += ']';\n      }\n    }\n\n    // align #\n    const nSpaces = 55 - line.length;\n    if (nSpaces > 0) {\n      for (let s = 0; s < nSpaces; ++s) {\n        line += ' ';\n      }\n    }\n    line += ' # ';\n    if (dicomElement.vl < 100) {\n      line += ' ';\n    }\n    if (dicomElement.vl < 10) {\n      line += ' ';\n    }\n    line += dicomElement.vl;\n    line += ', ';\n    line += deSize; //dictElement[1];\n    line += ' ';\n    if (tagName !== null) {\n      line += tagName;\n    } else {\n      line += 'Unknown Tag & Data';\n    }\n\n    let message = null;\n\n    // continue for sequence\n    if (dicomElement.vr === 'SQ') {\n      let item = null;\n      for (let l = 0, lenl = dicomElement.value.length; l < lenl; ++l) {\n        item = dicomElement.value[l];\n        const itemKeys = Object.keys(item);\n        if (itemKeys.length === 0) {\n          continue;\n        }\n\n        // get the item element\n        const itemTag = getItemTag();\n        const itemElement = item['FFFEE000'];\n        message = '(Item with';\n        if (itemElement.undefinedLength) {\n          message += ' undefined';\n        } else {\n          message += ' explicit';\n        }\n        message += ' length #=' + (itemKeys.length - 1) + ')';\n        itemElement.value = [message];\n        itemElement.vr = 'na';\n\n        line += '\\n';\n        line += this.#getElementAsString(itemTag, itemElement, prefix + '  ');\n\n        for (let m = 0, lenm = itemKeys.length; m < lenm; ++m) {\n          const itemTag = getTagFromKey(itemKeys[m]);\n          if (itemKeys[m] !== 'xFFFEE000') {\n            line += '\\n';\n            line += this.#getElementAsString(itemTag, item[itemKeys[m]],\n              prefix + '    ');\n          }\n        }\n\n        message = '(ItemDelimitationItem';\n        if (!itemElement.undefinedLength) {\n          message += ' for re-encoding';\n        }\n        message += ')';\n        const itemDelimTag = getItemDelimitationItemTag();\n        const itemDelimElement = {\n          vr: 'na',\n          vl: '0',\n          value: [message]\n        };\n        line += '\\n';\n        line += this.#getElementAsString(\n          itemDelimTag, itemDelimElement, prefix + '  ');\n\n      }\n\n      message = '(SequenceDelimitationItem';\n      if (!dicomElement.undefinedLength) {\n        message += ' for re-encod.';\n      }\n      message += ')';\n      const sqDelimTag = getSequenceDelimitationItemTag();\n      const sqDelimElement = {\n        vr: 'na',\n        vl: '0',\n        value: [message]\n      };\n      line += '\\n';\n      line += this.#getElementAsString(sqDelimTag, sqDelimElement, prefix);\n    } else if (isPixSequence) {\n      // pixel sequence\n      let pixItem = null;\n      for (let n = 0, lenn = dicomElement.value.length; n < lenn; ++n) {\n        pixItem = dicomElement.value[n];\n        line += '\\n';\n        pixItem.vr = 'pi';\n        line += this.#getElementAsString(\n          getPixelDataTag(), pixItem, prefix + '  ');\n      }\n\n      const pixDelimTag = getSequenceDelimitationItemTag();\n      const pixDelimElement = {\n        vr: 'na',\n        vl: '0',\n        value: ['(SequenceDelimitationItem)']\n      };\n      line += '\\n';\n      line += this.#getElementAsString(pixDelimTag, pixDelimElement, prefix);\n    }\n\n    return prefix + line;\n  }\n\n  /**\n   * Get a DICOM Element value from a tag name.\n   * Uses the DICOM dictionary.\n   *\n   * @param {string} name The tag name.\n   * @returns {object} The DICOM element value.\n   */\n  getFromName(name) {\n    let value = null;\n    const tag = getTagFromDictionary(name);\n    // check that we are not at the end of the dictionary\n    if (tag !== null) {\n      value = this.getFromKey(tag.getKey());\n    }\n    return value;\n  }\n\n} // class DicomElementsWrapper\n\n/**\n * Extract the 2D size from dicom elements.\n *\n * @param {object} elements The DICOM elements.\n * @returns {object} The size.\n */\nexport function getImage2DSize(elements) {\n  // rows\n  const rows = elements['00280010'];\n  if (typeof rows === 'undefined') {\n    throw new Error('Missing DICOM image number of rows');\n  }\n  if (rows.value.length === 0) {\n    throw new Error('Empty DICOM image number of rows');\n  }\n  // columns\n  const columns = elements['00280011'];\n  if (typeof columns === 'undefined') {\n    throw new Error('Missing DICOM image number of columns');\n  }\n  if (columns.value.length === 0) {\n    throw new Error('Empty DICOM image number of columns');\n  }\n  return [columns.value[0], rows.value[0]];\n}\n\n/**\n * Get the pixel spacing from the different spacing tags.\n *\n * @param {object} elements The DICOM elements.\n * @returns {object} The read spacing or the default [1,1].\n */\nexport function getPixelSpacing(elements) {\n  // default\n  let rowSpacing = 1;\n  let columnSpacing = 1;\n\n  // 1. PixelSpacing\n  // 2. ImagerPixelSpacing\n  // 3. NominalScannedPixelSpacing\n  // 4. PixelAspectRatio\n  const keys = ['00280030', '00181164', '00182010', '00280034'];\n  for (let k = 0; k < keys.length; ++k) {\n    const spacing = elements[keys[k]];\n    if (spacing && spacing.value.length === 2) {\n      rowSpacing = parseFloat(spacing.value[0]);\n      columnSpacing = parseFloat(spacing.value[1]);\n      break;\n    }\n  }\n\n  // check\n  if (columnSpacing === 0) {\n    logger.warn('Zero column spacing.');\n    columnSpacing = 1;\n  }\n  if (rowSpacing === 0) {\n    logger.warn('Zero row spacing.');\n    rowSpacing = 1;\n  }\n\n  // return\n  // (slice spacing will be calculated using the image position patient)\n  return new Spacing([columnSpacing, rowSpacing, 1]);\n}\n\n/**\n * Get the pixel data unit.\n *\n * @param {object} elements The DICOM elements.\n * @returns {string|null} The unit value if available.\n */\nexport function getPixelUnit(elements) {\n  let unit;\n  // 1. RescaleType\n  // 2. Units (for PET)\n  const keys = ['00281054', '00541001'];\n  for (let i = 0; i < keys.length; ++i) {\n    const element = elements[keys[i]];\n    if (typeof element !== 'undefined') {\n      unit = element.value[0];\n    }\n  }\n  // default rescale type for CT\n  if (typeof unit !== 'undefined') {\n    const modality = elements['00080060'].value[0];\n    if (modality === 'CT') {\n      unit = 'HU';\n    }\n  }\n  return unit;\n}\n\n/**\n * Get a 'date' object with {year, monthIndex, day} ready for the\n *   Date constructor from a DICOM element with vr=DA.\n *\n * @param {object} element The DICOM element with date information.\n * @returns {{year, monthIndex, day}|undefined} The 'date' object.\n */\nexport function getDate(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  const daValue = element.value[0];\n  // Two possible formats:\n  // - standard 'YYYYMMDD'\n  // - non-standard 'YYYY.MM.DD' (previous ACR-NEMA)\n  let monthBeginIndex = 4;\n  let dayBeginIndex = 6;\n  if (daValue.length === 10) {\n    monthBeginIndex = 5;\n    dayBeginIndex = 8;\n  }\n  const daYears = parseInt(daValue.substring(0, 4), 10);\n  // 0-11 range\n  const daMonthIndex = daValue.length >= monthBeginIndex + 2\n    ? parseInt(daValue.substring(\n      monthBeginIndex, monthBeginIndex + 2), 10) - 1 : 0;\n  const daDay = daValue.length === dayBeginIndex + 2\n    ? parseInt(daValue.substring(\n      dayBeginIndex, dayBeginIndex + 2), 10) : 0;\n  return {\n    year: daYears,\n    monthIndex: daMonthIndex,\n    day: daDay\n  };\n}\n\n/**\n * Get a time object with {hours, minutes, seconds} ready for the\n *   Date constructor from a DICOM element with vr=TM.\n *\n * @param {object} element The DICOM element with date information.\n * @returns {{hours, minutes, seconds, milliseconds}|undefined} The time object.\n */\nexport function getTime(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  // format: HH[MMSS.FFFFFF]\n  const tmValue = element.value[0];\n  const tmHours = parseInt(tmValue.substring(0, 2), 10);\n  const tmMinutes = tmValue.length >= 4\n    ? parseInt(tmValue.substring(2, 4), 10) : 0;\n  const tmSeconds = tmValue.length >= 6\n    ? parseInt(tmValue.substring(4, 6), 10) : 0;\n  const tmFracSecondsStr = tmValue.length >= 8\n    ? tmValue.substring(7, 10) : 0;\n  const tmMilliSeconds = tmFracSecondsStr === 0 ? 0\n    : parseInt(tmFracSecondsStr, 10) *\n      Math.pow(10, 3 - tmFracSecondsStr.length);\n  return {\n    hours: tmHours,\n    minutes: tmMinutes,\n    seconds: tmSeconds,\n    milliseconds: tmMilliSeconds\n  };\n}\n\n/**\n * Get a 'dateTime' object with {date, time} ready for the\n *   Date constructor from a DICOM element with vr=DT.\n *\n * @param {object} element The DICOM element with date-time information.\n * @returns {{date, time}|undefined} The time object.\n */\nexport function getDateTime(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  // format: YYYYMMDDHHMMSS.FFFFFF&ZZXX\n  const dtFullValue = element.value[0];\n  // remove offset (&ZZXX)\n  const dtValue = dtFullValue.split('&')[0];\n  const dtDate = getDate({value: [dtValue.substring(0, 8)]});\n  const dtTime = dtValue.length >= 9\n    ? getTime({value: [dtValue.substring(8)]}) : undefined;\n  return {\n    date: dtDate,\n    time: dtTime\n  };\n}\n\n/**\n * Get the file list from a DICOMDIR\n *\n * @param {object} data The buffer data of the DICOMDIR\n * @returns {Array|undefined} The file list as an array ordered by\n *   STUDY > SERIES > IMAGES.\n */\nexport function getFileListFromDicomDir(data) {\n  // parse file\n  const parser = new DicomParser();\n  parser.parse(data);\n  const elements = parser.getDicomElements();\n\n  // Directory Record Sequence\n  if (typeof elements['00041220'] === 'undefined' ||\n    typeof elements['00041220'].value === 'undefined') {\n    logger.warn('No Directory Record Sequence found in DICOMDIR.');\n    return undefined;\n  }\n  const dirSeq = elements['00041220'].value;\n\n  if (dirSeq.length === 0) {\n    logger.warn('The Directory Record Sequence of the DICOMDIR is empty.');\n    return undefined;\n  }\n\n  const records = [];\n  let series = null;\n  let study = null;\n  for (let i = 0; i < dirSeq.length; ++i) {\n    // Directory Record Type\n    if (typeof dirSeq[i]['00041430'] === 'undefined' ||\n      typeof dirSeq[i]['00041430'].value === 'undefined') {\n      continue;\n    }\n    const recType = dirSeq[i]['00041430'].value[0];\n\n    // supposed to come in order...\n    if (recType === 'STUDY') {\n      study = [];\n      records.push(study);\n    } else if (recType === 'SERIES') {\n      series = [];\n      study.push(series);\n    } else if (recType === 'IMAGE') {\n      // Referenced File ID\n      if (typeof dirSeq[i]['00041500'] === 'undefined' ||\n        typeof dirSeq[i]['00041500'].value === 'undefined') {\n        continue;\n      }\n      const refFileIds = dirSeq[i]['00041500'].value;\n      // join ids\n      series.push(refFileIds.join('/'));\n    }\n  }\n  return records;\n}\n\n/**\n * Methods used to extract values from DICOM elements.\n *\n * Implemented as class and method to allow for override via its prototype.\n */\nexport class TagValueExtractor {\n  /**\n   * Get the time.\n   *\n   * @param {object} _elements The DICOM elements.\n   * @returns {number|undefined} The time value if available.\n   */\n  getTime(_elements) {\n    // default returns undefined\n    return undefined;\n  }\n}\n","import {endsWith, getRootPath} from '../utils/string';\nimport {MultiProgressHandler} from '../utils/progress';\nimport {getFileListFromDicomDir} from '../dicom/dicomElementsWrapper';\nimport {loaderList} from './loaderList';\n\n// url content types\nexport const urlContentTypes = {\n  Text: 0,\n  ArrayBuffer: 1\n};\n\n/**\n * Urls loader.\n */\nexport class UrlsLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {Array}\n   */\n  #inputData = null;\n\n  /**\n   * Array of launched requests.\n   *\n   * @type {Array}\n   */\n  #requests = [];\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * Flag to know if the load is aborting.\n   *\n   * @type {boolean}\n   */\n  #aborting;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {object} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // reset flag\n    this.#aborting = false;\n    // clear storage\n    this.#clearStoredRequests();\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store a launched request.\n   *\n   * @param {object} request The launched request.\n   */\n  #storeRequest(request) {\n    this.#requests.push(request);\n  }\n\n  /**\n   * Clear the stored requests.\n   *\n   */\n  #clearStoredRequests() {\n    this.#requests = [];\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is not the\n    //   general load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is not the\n    //   general load end)\n    // x2 to count for request + load\n    if (this.#nLoadend === 2 * this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Augment a callback event with a srouce.\n   *\n   * @param {object} callback The callback to augment its event.\n   * @param {object} source The source to add to the event.\n   * @returns {eventFn} The augmented callback.\n   */\n  #augmentCallbackEvent(callback, source) {\n    return (event) => {\n      event.source = source;\n      callback(event);\n    };\n  }\n\n  /**\n   * Load a list of URLs or a DICOMDIR.\n   *\n   * @param {Array} data The list of urls to load.\n   * @param {object} [options] Load options.\n   */\n  load(data, options) {\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // check if DICOMDIR case\n    if (data.length === 1 &&\n      (endsWith(data[0], 'DICOMDIR') ||\n      endsWith(data[0], '.dcmdir'))) {\n      this.#loadDicomDir(data[0], options);\n    } else {\n      this.#loadUrls(data, options);\n    }\n  }\n\n  /**\n   * Get a load handler for a data element.\n   *\n   * @param {object} loader The associated loader.\n   * @param {object} dataElement The data element.\n   * @param {number} i The index of the element.\n   * @returns {eventFn} A load handler.\n   */\n  #getLoadHandler(loader, dataElement, i) {\n    return (event) => {\n      // check response status\n      // https://developer.mozilla.org/en-US/docs/Web/HTTP/Response_codes\n      // status 200: \"OK\"; status 0: \"debug\"\n      const status = event.target.status;\n      if (status !== 200 && status !== 0) {\n        this.onerror({\n          source: dataElement,\n          error: 'GET ' + event.target.responseURL +\n            ' ' + event.target.status +\n            ' (' + event.target.statusText + ')',\n          target: event.target\n        });\n        this.#addLoadend();\n      } else {\n        loader.load(event.target.response, dataElement, i);\n      }\n    };\n  }\n\n  /**\n   * Load a list of urls.\n   *\n   * @param {Array} data The list of urls to load.\n   * @param {object} [options] The options object, can contain:\n   *  - requestHeaders: an array of {name, value} to use as request headers\n   *  - withCredentials: boolean xhr.withCredentials flag to pass\n   *    to the request\n   *  - batchSize: the size of the request url batch\n   */\n  #loadUrls(data, options) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadUrl(dataElement, options)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(1);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this.#addLoad;\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for url: ' + dataElement);\n    }\n\n    // store last run request index\n    let lastRunRequestIndex = 0;\n    const requestOnLoadEnd = () => {\n      this.#addLoadend();\n      // launch next in queue\n      if (lastRunRequestIndex < this.#requests.length - 1 && !this.#aborting) {\n        ++lastRunRequestIndex;\n        this.#requests[lastRunRequestIndex].send(null);\n      }\n    };\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n\n      // check loader\n      if (!loader.canLoadUrl(dataElement, options)) {\n        throw new Error('Input url of different type: ' + dataElement);\n      }\n      /**\n       * The http request.\n       *\n       * @external XMLHttpRequest\n       * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n       */\n      const request = new XMLHttpRequest();\n      request.open('GET', dataElement, true);\n\n      // request options\n      if (typeof options !== 'undefined') {\n        // optional request headers\n        if (typeof options.requestHeaders !== 'undefined') {\n          const requestHeaders = options.requestHeaders;\n          for (let j = 0; j < requestHeaders.length; ++j) {\n            if (typeof requestHeaders[j].name !== 'undefined' &&\n              typeof requestHeaders[j].value !== 'undefined') {\n              request.setRequestHeader(\n                requestHeaders[j].name, requestHeaders[j].value);\n            }\n          }\n        }\n        // optional withCredentials\n        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n        if (typeof options.withCredentials !== 'undefined') {\n          request.withCredentials = options.withCredentials;\n        }\n      }\n\n      // set request callbacks\n      // request.onloadstart: nothing to do\n      request.onprogress = this.#augmentCallbackEvent(\n        mproghandler.getMonoProgressHandler(i, 0), dataElement);\n      request.onload = this.#getLoadHandler(loader, dataElement, i);\n      request.onloadend = requestOnLoadEnd;\n      request.onerror = this.#augmentCallbackEvent(this.onerror, dataElement);\n      request.onabort = this.#augmentCallbackEvent(this.onabort, dataElement);\n      // response type (default is 'text')\n      if (loader.loadUrlAs() === urlContentTypes.ArrayBuffer) {\n        request.responseType = 'arraybuffer';\n      }\n\n      // store request\n      this.#storeRequest(request);\n    }\n\n    // launch requests in batch\n    let batchSize = this.#requests.length;\n    if (typeof options !== 'undefined') {\n      // optional request batch size\n      if (typeof options.batchSize !== 'undefined' && batchSize !== 0) {\n        batchSize = Math.min(options.batchSize, this.#requests.length);\n      }\n    }\n    for (let r = 0; r < batchSize; ++r) {\n      if (!this.#aborting) {\n        lastRunRequestIndex = r;\n        this.#requests[lastRunRequestIndex].send(null);\n      }\n    }\n  }\n\n  /**\n   * Load a DICOMDIR.\n   *\n   * @param {string} dicomDirUrl The DICOMDIR url.\n   * @param {object} [options] Load options.\n   */\n  #loadDicomDir(dicomDirUrl, options) {\n    // read DICOMDIR\n    const request = new XMLHttpRequest();\n    request.open('GET', dicomDirUrl, true);\n    request.responseType = 'arraybuffer';\n    // request.onloadstart: nothing to do\n    /**\n     * @param {object} event The load event.\n     */\n    request.onload = (event) => {\n      // check status\n      const status = event.target.status;\n      if (status !== 200 && status !== 0) {\n        this.onerror({\n          source: dicomDirUrl,\n          error: 'GET ' + event.target.responseURL +\n            ' ' + event.target.status +\n            ' (' + event.target.statusText + ')',\n          target: event.target\n        });\n        this.onloadend({});\n      } else {\n        // get the file list\n        const list = getFileListFromDicomDir(event.target.response);\n        // use the first list\n        const urls = list[0][0];\n        // append root url\n        const rootUrl = getRootPath(dicomDirUrl);\n        const fullUrls = [];\n        for (let i = 0; i < urls.length; ++i) {\n          fullUrls.push(rootUrl + '/' + urls[i]);\n        }\n        // load urls\n        this.#loadUrls(fullUrls, options);\n      }\n    };\n    request.onerror = (event) => {\n      this.#augmentCallbackEvent(this.onerror, dicomDirUrl)(event);\n      this.onloadend({});\n    };\n    request.onabort = (event) => {\n      this.#augmentCallbackEvent(this.onabort, dicomDirUrl)(event);\n      this.onloadend({});\n    };\n    // request.onloadend: nothing to do\n    // send request\n    request.send(null);\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    this.#aborting = true;\n    // abort non finished requests\n    for (let i = 0; i < this.#requests.length; ++i) {\n      // 0: UNSENT, 1: OPENED, 2: HEADERS_RECEIVED (send()), 3: LOADING, 4: DONE\n      if (this.#requests[i].readyState !== 4) {\n        this.#requests[i].abort();\n      }\n    }\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class UrlsLoader\n","import {Size} from './size';\nimport {Geometry} from './geometry';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {WindowLevel} from './windowLevel';\nimport {Image} from './image';\nimport {\n  isJpeg2000TransferSyntax,\n  isJpegBaselineTransferSyntax,\n  isJpegLosslessTransferSyntax\n} from '../dicom/dicomParser';\nimport {\n  getImage2DSize,\n  getPixelSpacing,\n  getPixelUnit,\n  TagValueExtractor\n} from '../dicom/dicomElementsWrapper';\nimport {Vector3D} from '../math/vector';\nimport {Matrix33} from '../math/matrix';\nimport {Point3D} from '../math/point';\nimport {logger} from '../utils/logger';\n\n/**\n * {@link Image} factory.\n */\nexport class ImageFactory {\n\n  /**\n   * Check dicom elements. Throws an error if not suitable.\n   *\n   * @param {object} dicomElements The DICOM tags.\n   * @returns {object|undefined} A possible warning.\n   */\n  checkElements(dicomElements) {\n    // will throw if columns or rows is not defined\n    getImage2DSize(dicomElements);\n  }\n\n  /**\n   * Get an {@link Image} object from the read DICOM file.\n   *\n   * @param {object} dicomElements The DICOM tags.\n   * @param {Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array} pixelBuffer The pixel buffer.\n   * @param {number} numberOfFiles The input number of files.\n   * @returns {Image} A new Image.\n   */\n  create(dicomElements, pixelBuffer, numberOfFiles) {\n    const size2D = getImage2DSize(dicomElements);\n    const sizeValues = [size2D[0], size2D[1], 1];\n\n    // frames\n    const frames = dicomElements['00280008'];\n    if (frames) {\n      sizeValues.push(frames.value[0]);\n    }\n\n    // image size\n    const size = new Size(sizeValues);\n\n    // image spacing\n    const spacing = getPixelSpacing(dicomElements);\n\n    // TransferSyntaxUID\n    const syntax = dicomElements['00020010'].value[0];\n    const jpeg2000 = isJpeg2000TransferSyntax(syntax);\n    const jpegBase = isJpegBaselineTransferSyntax(syntax);\n    const jpegLoss = isJpegLosslessTransferSyntax(syntax);\n\n    // ImagePositionPatient\n    const imagePositionPatient = dicomElements['00200032'];\n    // slice position\n    let slicePosition = new Array(0, 0, 0);\n    if (typeof imagePositionPatient !== 'undefined') {\n      slicePosition = [\n        parseFloat(imagePositionPatient.value[0]),\n        parseFloat(imagePositionPatient.value[1]),\n        parseFloat(imagePositionPatient.value[2])\n      ];\n    }\n\n    // slice orientation (cosines are matrices' columns)\n    // http://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_C.7.6.2.html#sect_C.7.6.2.1.1\n    const imageOrientationPatient = dicomElements['00200037'];\n    let orientationMatrix;\n    if (typeof imageOrientationPatient !== 'undefined') {\n      const rowCosines = new Vector3D(\n        parseFloat(imageOrientationPatient.value[0]),\n        parseFloat(imageOrientationPatient.value[1]),\n        parseFloat(imageOrientationPatient.value[2]));\n      const colCosines = new Vector3D(\n        parseFloat(imageOrientationPatient.value[3]),\n        parseFloat(imageOrientationPatient.value[4]),\n        parseFloat(imageOrientationPatient.value[5]));\n      const normal = rowCosines.crossProduct(colCosines);\n      /* eslint-disable array-element-newline */\n      orientationMatrix = new Matrix33([\n        rowCosines.getX(), colCosines.getX(), normal.getX(),\n        rowCosines.getY(), colCosines.getY(), normal.getY(),\n        rowCosines.getZ(), colCosines.getZ(), normal.getZ()\n      ]);\n      /* eslint-enable array-element-newline */\n    }\n\n    // geometry\n    const origin = new Point3D(\n      slicePosition[0], slicePosition[1], slicePosition[2]);\n    const extractor = new TagValueExtractor();\n    const time = extractor.getTime(dicomElements);\n    const geometry = new Geometry(\n      origin, size, spacing, orientationMatrix, time);\n\n    // SOP Instance UID\n    let sopInstanceUid;\n    const siu = dicomElements['00080018'];\n    if (typeof siu !== 'undefined') {\n      sopInstanceUid = siu.value[0];\n    }\n\n    // Sample per pixels\n    let samplesPerPixel = 1;\n    const spp = dicomElements['00280002'];\n    if (typeof spp !== 'undefined') {\n      samplesPerPixel = spp.value[0];\n    }\n\n    // check buffer size\n    const bufferSize = size.getTotalSize() * samplesPerPixel;\n    if (bufferSize !== pixelBuffer.length) {\n      logger.warn('Badly sized pixel buffer: ' +\n        pixelBuffer.length + ' != ' + bufferSize);\n      if (bufferSize < pixelBuffer.length) {\n        pixelBuffer = pixelBuffer.slice(0, size.getTotalSize());\n      } else {\n        throw new Error('Underestimated buffer size, can\\'t fix it...');\n      }\n    }\n\n    // image\n    const image = new Image(geometry, pixelBuffer, [sopInstanceUid]);\n    // PhotometricInterpretation\n    const photometricInterpretation = dicomElements['00280004'];\n    if (typeof photometricInterpretation !== 'undefined') {\n      let photo = photometricInterpretation.value[0].toUpperCase();\n      // jpeg decoders output RGB data\n      if ((jpeg2000 || jpegBase || jpegLoss) &&\n        (photo !== 'MONOCHROME1' && photo !== 'MONOCHROME2')) {\n        photo = 'RGB';\n      }\n      // check samples per pixels\n      if (photo === 'RGB' && samplesPerPixel === 1) {\n        photo = 'PALETTE COLOR';\n      }\n      image.setPhotometricInterpretation(photo);\n    }\n    // PlanarConfiguration\n    const planarConfiguration = dicomElements['00280006'];\n    if (typeof planarConfiguration !== 'undefined') {\n      image.setPlanarConfiguration(planarConfiguration.value[0]);\n    }\n\n    // rescale slope and intercept\n    let slope = 1;\n    // RescaleSlope\n    const rescaleSlope = dicomElements['00281053'];\n    if (typeof rescaleSlope !== 'undefined') {\n      const value = parseFloat(rescaleSlope.value[0]);\n      if (!isNaN(value)) {\n        slope = value;\n      }\n    }\n    let intercept = 0;\n    // RescaleIntercept\n    const rescaleIntercept = dicomElements['00281052'];\n    if (typeof rescaleIntercept !== 'undefined') {\n      const value = parseFloat(rescaleIntercept.value[0]);\n      if (!isNaN(value)) {\n        intercept = value;\n      }\n    }\n    const rsi = new RescaleSlopeAndIntercept(slope, intercept);\n    image.setRescaleSlopeAndIntercept(rsi);\n\n    // meta information\n    const meta = {\n      numberOfFiles: numberOfFiles\n    };\n    const modality = dicomElements['00080060'];\n    if (typeof modality !== 'undefined') {\n      meta.Modality = modality.value[0];\n    }\n    const sopClassUID = dicomElements['00080016'];\n    if (typeof sopClassUID !== 'undefined') {\n      meta.SOPClassUID = sopClassUID.value[0];\n    }\n    const studyUID = dicomElements['0020000D'];\n    if (typeof studyUID !== 'undefined') {\n      meta.StudyInstanceUID = studyUID.value[0];\n    }\n    const seriesUID = dicomElements['0020000E'];\n    if (typeof seriesUID !== 'undefined') {\n      meta.SeriesInstanceUID = seriesUID.value[0];\n    }\n    const bits = dicomElements['00280101'];\n    if (typeof bits !== 'undefined') {\n      meta.BitsStored = bits.value[0];\n    }\n    const pixelRep = dicomElements['00280103'];\n    if (typeof pixelRep !== 'undefined') {\n      meta.PixelRepresentation = pixelRep.value[0];\n    }\n    // PixelRepresentation -> is signed\n    meta.IsSigned = meta.PixelRepresentation === 1;\n    // local pixel unit\n    const pixelUnit = getPixelUnit(dicomElements);\n    if (typeof pixelUnit !== 'undefined') {\n      meta.pixelUnit = pixelUnit;\n    }\n    // FrameOfReferenceUID (optional)\n    const frameOfReferenceUID = dicomElements['00200052'];\n    if (typeof frameOfReferenceUID !== 'undefined') {\n      meta.FrameOfReferenceUID = frameOfReferenceUID.value[0];\n    }\n    // window level presets\n    const windowPresets = {};\n    const windowCenter = dicomElements['00281050'];\n    const windowWidth = dicomElements['00281051'];\n    const windowCWExplanation = dicomElements['00281055'];\n    if (typeof windowCenter !== 'undefined' &&\n      typeof windowWidth !== 'undefined') {\n      let name;\n      for (let j = 0; j < windowCenter.value.length; ++j) {\n        const center = parseFloat(windowCenter.value[j]);\n        const width = parseFloat(windowWidth.value[j]);\n        if (center && width && width !== 0) {\n          name = '';\n          if (typeof windowCWExplanation !== 'undefined') {\n            name = windowCWExplanation.value[j];\n          }\n          if (name === '') {\n            name = 'Default' + j;\n          }\n          windowPresets[name] = {\n            wl: [new WindowLevel(center, width)],\n            name: name\n          };\n        }\n        if (width === 0) {\n          logger.warn('Zero window width found in DICOM.');\n        }\n      }\n    }\n    meta.windowPresets = windowPresets;\n\n    // PALETTE COLOR luts\n    if (image.getPhotometricInterpretation() === 'PALETTE COLOR') {\n      let redLut = dicomElements['00281201'];\n      let greenLut = dicomElements['00281202'];\n      let blueLut = dicomElements['00281203'];\n      // check red palette descriptor (should all be equal)\n      const descriptor = dicomElements['00281101'];\n      if (typeof descriptor !== 'undefined' &&\n              descriptor.length === 3) {\n        if (descriptor[2] === 16) {\n          let doScale = false;\n          // (C.7.6.3.1.5 Palette Color Lookup Table Descriptor)\n          // Some implementations have encoded 8 bit entries with 16 bits\n          // allocated, padding the high bits;\n          let descSize = descriptor[0];\n          // (C.7.6.3.1.5 Palette Color Lookup Table Descriptor)\n          // The first Palette Color Lookup Table Descriptor value is the\n          // number of entries in the lookup table. When the number of table\n          // entries is equal to 216 then this value shall be 0.\n          if (descSize === 0) {\n            descSize = 65536;\n          }\n          // red palette VL\n          const vlSize = redLut.vl;\n          // check double size\n          if (vlSize !== 2 * descSize) {\n            doScale = true;\n            logger.info('16bits lut but size is not double. desc: ' +\n              descSize + ' vl: ' + vlSize);\n          }\n          // (C.7.6.3.1.6 Palette Color Lookup Table Data)\n          // Palette color values must always be scaled across the full\n          // range of available intensities\n          const bitsAllocated = parseInt(\n            dicomElements['00280100'].value[0], 10);\n          if (bitsAllocated === 8) {\n            doScale = true;\n            logger.info(\n              'Scaling 16bits color lut since bits allocated is 8.');\n          }\n\n          if (doScale) {\n            const scaleTo8 = function (value) {\n              return value >> 8;\n            };\n\n            redLut = redLut.map(scaleTo8);\n            greenLut = greenLut.map(scaleTo8);\n            blueLut = blueLut.map(scaleTo8);\n          }\n        } else if (descriptor[2] === 8) {\n          // lut with vr=OW was read as Uint16, convert it to Uint8\n          logger.info(\n            'Scaling 16bits color lut since the lut descriptor is 8.');\n          let clone = redLut.slice(0);\n          redLut = new Uint8Array(clone.buffer);\n          clone = greenLut.slice(0);\n          greenLut = new Uint8Array(clone.buffer);\n          clone = blueLut.slice(0);\n          blueLut = new Uint8Array(clone.buffer);\n        }\n      }\n      // set the palette\n      meta.paletteLut = {\n        red: redLut,\n        green: greenLut,\n        blue: blueLut\n      };\n    }\n\n    // RecommendedDisplayFrameRate\n    const recommendedDisplayFrameRate = dicomElements['00082144'];\n    if (typeof recommendedDisplayFrameRate !== 'undefined') {\n      meta.RecommendedDisplayFrameRate = parseInt(\n        recommendedDisplayFrameRate.value[0], 10);\n    }\n\n    // store the meta data\n    image.setMeta(meta);\n\n    return image;\n  }\n\n}","import {getImage2DSize} from '../dicom/dicomElementsWrapper';\nimport {Spacing} from '../image/spacing';\nimport {Image} from '../image/image';\nimport {Geometry, getSliceGeometrySpacing} from '../image/geometry';\nimport {Point3D} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {Index} from '../math/index';\nimport {Matrix33, REAL_WORLD_EPSILON} from '../math/matrix';\nimport {logger} from '../utils/logger';\nimport {arraySortEquals} from '../utils/array';\nimport {\n  isEqualRgb,\n  cielabToSrgb,\n  uintLabToLab\n} from '../utils/colour';\nimport {Size} from './size';\n\n/**\n * Check two position patients for equality.\n *\n * @param {*} pos1 The first position patient.\n * @param {*} pos2 The second position patient.\n * @returns {boolean} True is equal.\n */\nfunction equalPosPat(pos1, pos2) {\n  return JSON.stringify(pos1) === JSON.stringify(pos2);\n}\n\n/**\n * @callback compareFn\n * @param {object} a The first object.\n * @param {object} b The first object.\n * @returns {number} >0 to sort a after b, <0 to sort a before b,\n *   0 to not change order.\n */\n\n/**\n * Get a position patient compare function accroding to an\n * input orientation.\n *\n * @param {Matrix33} orientation The orientation matrix.\n * @returns {compareFn} The position compare function.\n */\nfunction getComparePosPat(orientation) {\n  const invOrientation = orientation.getInverse();\n  return function (pos1, pos2) {\n    const p1 = invOrientation.multiplyArray3D(pos1);\n    const p2 = invOrientation.multiplyArray3D(pos2);\n    return p1[2] - p2[2];\n  };\n}\n\n/**\n * Check that a DICOM tag definition is present in a parsed element.\n *\n * @param {object} rootElement The root dicom element.\n * @param {object} tagDefinition The tag definition as {name, tag, type, enum}.\n */\nfunction checkTag(rootElement, tagDefinition) {\n  const element = rootElement[tagDefinition.tag];\n  // check null and undefined\n  if (tagDefinition.type === 1 || tagDefinition.type === 2) {\n    if (typeof element === 'undefined') {\n      throw new Error('Missing or empty ' + tagDefinition.name);\n    }\n  } else {\n    if (typeof element === 'undefined') {\n      // non mandatory value, exit\n      return;\n    }\n  }\n  let includes = false;\n  let tagValue;\n  if (element.value.length === 1) {\n    tagValue = element.value[0];\n  } else {\n    tagValue = element.value;\n  }\n  if (Array.isArray(tagValue)) {\n    for (let i = 0; i < tagDefinition.enum.length; ++i) {\n      if (!Array.isArray(tagDefinition.enum[i])) {\n        throw new Error('Cannot compare array and non array tag value.');\n      }\n      if (arraySortEquals(tagDefinition.enum[i], tagValue)) {\n        includes = true;\n        break;\n      }\n    }\n  } else {\n    includes = tagDefinition.enum.includes(tagValue);\n  }\n  if (!includes) {\n    throw new Error(\n      'Unsupported ' + tagDefinition.name + ' value: ' + tagValue);\n  }\n}\n\n/**\n * List of DICOM Seg required tags.\n */\nconst RequiredDicomSegTags = [\n  {\n    name: 'TransferSyntaxUID',\n    tag: 'x00020010',\n    type: '1',\n    enum: ['1.2.840.10008.1.2.1']\n  },\n  {\n    name: 'MediaStorageSOPClassUID',\n    tag: 'x00020002',\n    type: '1',\n    enum: ['1.2.840.10008.5.1.4.1.1.66.4']\n  },\n  {\n    name: 'SOPClassUID',\n    tag: 'x00020002',\n    type: '1',\n    enum: ['1.2.840.10008.5.1.4.1.1.66.4']\n  },\n  {\n    name: 'Modality',\n    tag: 'x00080060',\n    type: '1',\n    enum: ['SEG']\n  },\n  {\n    name: 'SegmentationType',\n    tag: 'x00620001',\n    type: '1',\n    enum: ['BINARY']\n  },\n  {\n    name: 'DimensionOrganizationType',\n    tag: 'x00209311',\n    type: '3',\n    enum: ['3D']\n  },\n  {\n    name: 'ImageType',\n    tag: 'x00080008',\n    type: '1',\n    enum: [['DERIVED', 'PRIMARY']]\n  },\n  {\n    name: 'SamplesPerPixel',\n    tag: 'x00280002',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'PhotometricInterpretation',\n    tag: 'x00280004',\n    type: '1',\n    enum: ['MONOCHROME2']\n  },\n  {\n    name: 'PixelRepresentation',\n    tag: 'x00280103',\n    type: '1',\n    enum: [0]\n  },\n  {\n    name: 'BitsAllocated',\n    tag: 'x00280100',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'BitsStored',\n    tag: 'x00280101',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'HighBit',\n    tag: 'x00280102',\n    type: '1',\n    enum: [0]\n  },\n];\n\n/**\n * Get the default DICOM seg tags as an object.\n *\n * @returns {object} The default tags.\n */\nfunction getDefaultDicomSegJson() {\n  const tags = {};\n  for (let i = 0; i < RequiredDicomSegTags.length; ++i) {\n    const reqTag = RequiredDicomSegTags[i];\n    tags[reqTag.name] = reqTag.enum[0];\n  }\n  return tags;\n}\n\n/**\n * Check the dimension organization from a dicom element.\n *\n * @param {object} rootElement The root dicom element.\n * @returns {object} The dimension organizations and indices.\n */\nfunction getDimensionOrganization(rootElement) {\n  // Dimension Organization Sequence (required)\n  const orgSq = rootElement['00209221'];\n  if (typeof orgSq === 'undefined' || orgSq.value.length !== 1) {\n    throw new Error('Unsupported dimension organization sequence length');\n  }\n  // Dimension Organization UID\n  const orgUID = orgSq.value[0]['00209164'].value[0];\n\n  // Dimension Index Sequence (conditionally required)\n  const indices = [];\n  const indexSqElem = rootElement['00209222'];\n  if (typeof indexSqElem !== 'undefined') {\n    const indexSq = indexSqElem.value;\n    // expecting 2D index\n    if (indexSq.length !== 2) {\n      throw new Error('Unsupported dimension index sequence length');\n    }\n    let indexPointer;\n    for (let i = 0; i < indexSq.length; ++i) {\n      // Dimension Organization UID (required)\n      const indexOrg = indexSq[i]['00209164'].value[0];\n      if (indexOrg !== orgUID) {\n        throw new Error(\n          'Dimension Index Sequence contains a unknown Dimension Organization');\n      }\n      // Dimension Index Pointer (required)\n      indexPointer = indexSq[i]['00209165'].value[0];\n\n      const index = {\n        DimensionOrganizationUID: indexOrg,\n        DimensionIndexPointer: indexPointer\n      };\n      // Dimension Description Label (optional)\n      if (typeof indexSq[i]['00209421'] !== 'undefined') {\n        index.DimensionDescriptionLabel = indexSq[i]['00209421'].value[0];\n      }\n      // store\n      indices.push(index);\n    }\n    // expecting Image Position at last position\n    if (indexPointer !== '(0020,0032)') {\n      throw new Error('Unsupported non image position as last index');\n    }\n  }\n\n  return {\n    organizations: {\n      value: [\n        {\n          DimensionOrganizationUID: orgUID\n        }\n      ]\n    },\n    indices: {\n      value: indices\n    }\n  };\n}\n\n/**\n * Get a code object from a dicom element.\n *\n * @param {object} element The dicom element.\n * @returns {object} A code object.\n */\nfunction getCode(element) {\n  // meaning -> CodeMeaning (type1)\n  const code = {\n    meaning: element['00080104'].value[0]\n  };\n  // value -> CodeValue (type1C)\n  // longValue -> LongCodeValue (type1C)\n  // urnValue -> URNCodeValue (type1C)\n  if (element['00080100']) {\n    code.value = element['00080100'].value[0];\n  } else if (element['00080119']) {\n    code.longValue = element['00080119'].value[0];\n  } else if (element['00080120']) {\n    code.urnValue = element['00080120'].value[0];\n  } else {\n    throw Error('Invalid code with no value, no long value and no urn value.');\n  }\n  // schemeDesignator -> CodingSchemeDesignator (type1C)\n  if (typeof code.value !== 'undefined' ||\n    typeof code.longValue !== 'undefined') {\n    if (element['00080102']) {\n      code.schemeDesignator = element['00080102'].value[0];\n    } else {\n      throw Error(\n        'No coding sheme designator when code value or long value is present');\n    }\n  }\n  return code;\n}\n\n/**\n * Get a segment object from a dicom element.\n *\n * @param {object} element The dicom element.\n * @returns {object} A segment object.\n */\nfunction getSegment(element) {\n  // number -> SegmentNumber (type1)\n  // label -> SegmentLabel (type1)\n  // algorithmType -> SegmentAlgorithmType (type1)\n  const segment = {\n    number: element['00620004'].value[0],\n    label: element['00620005'].value[0],\n    algorithmType: element['00620008'].value[0]\n  };\n  // algorithmName -> SegmentAlgorithmName (type1C)\n  if (element['00620009']) {\n    segment.algorithmName = element['00620009'].value[0];\n  }\n  // // required if type is not MANUAL\n  // if (segment.algorithmType !== 'MANUAL' &&\n  //   (typeof segment.algorithmName === 'undefined' ||\n  //   segment.algorithmName.length === 0)) {\n  //   throw new Error('Empty algorithm name for non MANUAL algorithm type.');\n  // }\n  // displayValue ->\n  // - RecommendedDisplayGrayscaleValue\n  // - RecommendedDisplayCIELabValue converted to RGB\n  if (typeof element['0062000C'] !== 'undefined') {\n    segment.displayValue = element['006200C'].value;\n  } else if (typeof element['0062000D'] !== 'undefined') {\n    const cielabElement = element['0062000D'].value;\n    const rgb = cielabToSrgb(uintLabToLab({\n      l: cielabElement[0],\n      a: cielabElement[1],\n      b: cielabElement[2]\n    }));\n    segment.displayValue = rgb;\n  }\n  // Segmented Property Category Code Sequence (type1, only one)\n  if (typeof element['00620003'] !== 'undefined') {\n    segment.propertyCategoryCode =\n      getCode(element['00620003'].value[0]);\n  } else {\n    throw Error('Missing Segmented Property Category Code Sequence.');\n  }\n  // Segmented Property Type Code Sequence (type1)\n  if (typeof element['0062000F'] !== 'undefined') {\n    segment.propertyTypeCode =\n      getCode(element['0062000F'].value[0]);\n  } else {\n    throw Error('Missing Segmented Property Type Code Sequence.');\n  }\n  // tracking Id and UID (type1C)\n  if (typeof element['00620020'] !== 'undefined') {\n    segment.trackingId = element['00620020'].value[0];\n    segment.trackingUid = element['00620021'].value[0];\n  }\n\n  return segment;\n}\n\n/**\n * Check if two segment objects are equal.\n *\n * @param {object} seg1 The first segment.\n * @param {object} seg2 The second segment.\n * @returns {boolean} True if both segment are equal.\n */\nexport function isEqualSegment(seg1, seg2) {\n  // basics\n  if (typeof seg1 === 'undefined' ||\n    typeof seg2 === 'undefined' ||\n    seg1 === null ||\n    seg2 === null) {\n    return false;\n  }\n  let isEqual = seg1.number === seg2.number &&\n    seg1.label === seg2.label &&\n    seg1.algorithmType === seg2.algorithmType;\n  // rgb\n  if (typeof seg1.displayValue.r !== 'undefined') {\n    if (typeof seg2.displayValue.r === 'undefined') {\n      isEqual = false;\n    } else {\n      isEqual = isEqual &&\n        isEqualRgb(seg1.displayValue, seg2.displayValue);\n    }\n  } else {\n    isEqual = isEqual &&\n      seg1.displayValue === seg2.displayValue;\n  }\n  // algorithmName\n  if (typeof seg1.algorithmName !== 'undefined') {\n    if (typeof seg2.algorithmName === 'undefined') {\n      isEqual = false;\n    } else {\n      isEqual = isEqual &&\n        seg1.algorithmName === seg2.algorithmName;\n    }\n  }\n\n  return isEqual;\n}\n\n/**\n * Check if two segment objects are similar: either the\n * number or the displayValue are equal.\n *\n * @param {object} seg1 The first segment.\n * @param {object} seg2 The second segment.\n * @returns {boolean} True if both segment are similar.\n */\nexport function isSimilarSegment(seg1, seg2) {\n  // basics\n  if (typeof seg1 === 'undefined' ||\n    typeof seg2 === 'undefined' ||\n    seg1 === null ||\n    seg2 === null) {\n    return false;\n  }\n  let isSimilar = seg1.number === seg2.number;\n  // rgb\n  if (typeof seg1.displayValue.r !== 'undefined') {\n    if (typeof seg2.displayValue.r === 'undefined') {\n      isSimilar = false;\n    } else {\n      isSimilar = isSimilar ||\n        isEqualRgb(seg1.displayValue, seg2.displayValue);\n    }\n  } else {\n    isSimilar = isSimilar ||\n      seg1.displayValue === seg2.displayValue;\n  }\n\n  return isSimilar;\n}\n\n/**\n * Get a spacing object from a dicom measure element.\n *\n * @param {object} measure The dicom element.\n * @returns {Spacing} A spacing object.\n */\nfunction getSpacingFromMeasure(measure) {\n  // Pixel Spacing\n  if (typeof measure['00280030'] === 'undefined') {\n    return null;\n  }\n  const pixelSpacing = measure['00280030'];\n  const spacingValues = [\n    parseFloat(pixelSpacing.value[0]),\n    parseFloat(pixelSpacing.value[1])\n  ];\n  // Slice Thickness\n  if (typeof measure['00180050'] !== 'undefined') {\n    spacingValues.push(parseFloat(measure['00180050'].value[0]));\n  } else if (typeof measure['00180088'] !== 'undefined') {\n    // Spacing Between Slices\n    spacingValues.push(parseFloat(measure['00180088'].value[0]));\n  }\n  return new Spacing(spacingValues);\n}\n\n/**\n * Get a frame information object from a dicom element.\n *\n * @param {object} groupItem The dicom element.\n * @returns {object} A frame information object.\n */\nfunction getSegmentFrameInfo(groupItem) {\n  // Derivation Image Sequence\n  const derivationImages = [];\n  if (typeof groupItem['00089124'] !== 'undefined') {\n    const derivationImageSq = groupItem['00089124'].value;\n    // Source Image Sequence\n    for (let i = 0; i < derivationImageSq.length; ++i) {\n      const sourceImages = [];\n      if (typeof derivationImageSq[i]['00082112'] !== 'undefined') {\n        const sourceImageSq = derivationImageSq[i]['00082112'].value;\n        for (let j = 0; j < sourceImageSq.length; ++j) {\n          const sourceImage = {};\n          // Referenced SOP Class UID\n          if (typeof sourceImageSq[j]['00081150'] !== 'undefined') {\n            sourceImage.referencedSOPClassUID =\n              sourceImageSq[j]['00081150'].value[0];\n          }\n          // Referenced SOP Instance UID\n          if (typeof sourceImageSq[j]['00081155'] !== 'undefined') {\n            sourceImage.referencedSOPInstanceUID =\n              sourceImageSq[j]['00081155'].value[0];\n          }\n          sourceImages.push(sourceImage);\n        }\n      }\n      derivationImages.push(sourceImages);\n    }\n  }\n  // Frame Content Sequence (required, only one)\n  const frameContentSq = groupItem['00209111'].value;\n  // Dimension Index Value\n  const dimIndex = frameContentSq[0]['00209157'].value;\n  // Segment Identification Sequence (required, only one)\n  const segmentIdSq = groupItem['0062000A'].value;\n  // Referenced Segment Number\n  const refSegmentNumber = segmentIdSq[0]['0062000B'].value[0];\n  // Plane Position Sequence (required, only one)\n  const planePosSq = groupItem['00209113'].value;\n  // Image Position (Patient) (conditionally required)\n  const imagePosPat = planePosSq[0]['00200032'].value;\n  for (let p = 0; p < imagePosPat.length; ++p) {\n    imagePosPat[p] = parseFloat(imagePosPat[p]);\n  }\n  const frameInfo = {\n    dimIndex: dimIndex,\n    imagePosPat: imagePosPat,\n    derivationImages: derivationImages,\n    refSegmentNumber: refSegmentNumber\n  };\n  // Plane Orientation Sequence\n  if (typeof groupItem['00209116'] !== 'undefined') {\n    const framePlaneOrientationSeq = groupItem['00209116'];\n    if (framePlaneOrientationSeq.value.length !== 0) {\n      // should only be one Image Orientation (Patient)\n      const frameImageOrientation =\n        framePlaneOrientationSeq.value[0]['00200037'].value;\n      if (typeof frameImageOrientation !== 'undefined') {\n        frameInfo.imageOrientationPatient = frameImageOrientation;\n      }\n    }\n  }\n  // Pixel Measures Sequence\n  if (typeof groupItem['00289110'] !== 'undefined') {\n    const framePixelMeasuresSeq = groupItem['00289110'];\n    if (framePixelMeasuresSeq.value.length !== 0) {\n      // should only be one\n      const frameSpacing =\n        getSpacingFromMeasure(framePixelMeasuresSeq.value[0]);\n      if (typeof frameSpacing !== 'undefined') {\n        frameInfo.spacing = frameSpacing;\n      }\n    } else {\n      logger.warn(\n        'No shared functional group pixel measure sequence items.');\n    }\n  }\n\n  return frameInfo;\n}\n\n/**\n * Mask {@link Image} factory.\n */\nexport class MaskFactory {\n\n  /*\n   * Check dicom elements. Throws an error if not suitable.\n   *\n   * @param {object} _dicomElements The DICOM tags.\n   * @returns {object|undefined} A possible warning.\n   */\n  checkElements(_dicomElements) {\n    // does nothing\n  }\n\n  /**\n   * Get an {@link Image} object from the read DICOM file.\n   *\n   * @param {object} dicomElements The DICOM tags.\n   * @param {Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array} pixelBuffer The pixel buffer.\n   * @returns {Image} A new Image.\n   */\n  create(dicomElements, pixelBuffer) {\n    // check required and supported tags\n    for (let d = 0; d < RequiredDicomSegTags.length; ++d) {\n      checkTag(dicomElements, RequiredDicomSegTags[d]);\n    }\n\n    // image size\n    const size2D = getImage2DSize(dicomElements);\n    const size = new Size([size2D[0], size2D[1], 1]);\n\n    const sliceSize = size.getTotalSize();\n\n    // frames\n    let frames = 1;\n    const framesElem = dicomElements['00280008'];\n    if (typeof framesElem !== 'undefined') {\n      frames = parseInt(framesElem.value[0], 10);\n    }\n\n    if (frames !== pixelBuffer.length / sliceSize) {\n      throw new Error(\n        'Buffer and numberOfFrames meta are not equal.' +\n        frames + ' ' + pixelBuffer.length / sliceSize);\n    }\n\n    // Dimension Organization and Index\n    const dimension = getDimensionOrganization(dicomElements);\n\n    // Segment Sequence\n    const segSequence = dicomElements['00620002'];\n    if (typeof segSequence === 'undefined') {\n      throw new Error('Missing or empty segmentation sequence');\n    }\n    const segments = [];\n    let storeAsRGB = false;\n    for (let i = 0; i < segSequence.value.length; ++i) {\n      const segment = getSegment(segSequence.value[i]);\n      if (typeof segment.displayValue.r !== 'undefined' &&\n        typeof segment.displayValue.g !== 'undefined' &&\n        typeof segment.displayValue.b !== 'undefined') {\n        // create rgb image\n        storeAsRGB = true;\n      }\n      // store\n      segments.push(segment);\n    }\n\n\n    // Shared Functional Groups Sequence\n    let spacing;\n    let imageOrientationPatient;\n    const sharedFunctionalGroupsSeq = dicomElements['52009229'];\n    if (typeof sharedFunctionalGroupsSeq !== 'undefined') {\n      // should be only one\n      const funcGroup0 = sharedFunctionalGroupsSeq.value[0];\n      // Plane Orientation Sequence\n      if (typeof funcGroup0['00209116'] !== 'undefined') {\n        const planeOrientationSeq = funcGroup0['00209116'];\n        if (planeOrientationSeq.value.length !== 0) {\n          // should be only one\n          imageOrientationPatient =\n            planeOrientationSeq.value[0]['00200037'].value;\n        } else {\n          logger.warn(\n            'No shared functional group plane orientation sequence items.');\n        }\n      }\n      // Pixel Measures Sequence\n      if (typeof funcGroup0['00289110'] !== 'undefined') {\n        const pixelMeasuresSeq = funcGroup0['00289110'];\n        if (pixelMeasuresSeq.value.length !== 0) {\n          // should be only one\n          spacing = getSpacingFromMeasure(pixelMeasuresSeq.value[0]);\n        } else {\n          logger.warn(\n            'No shared functional group pixel measure sequence items.');\n        }\n      }\n    }\n\n    const includesPosPat = function (arr, val) {\n      return arr.some(function (arrVal) {\n        return equalPosPat(val, arrVal);\n      });\n    };\n\n    const findIndexPosPat = function (arr, val) {\n      return arr.findIndex(function (arrVal) {\n        return equalPosPat(val, arrVal);\n      });\n    };\n\n    // Per-frame Functional Groups Sequence\n    const perFrameFuncGroupSequence = dicomElements['52009230'];\n    if (typeof perFrameFuncGroupSequence === 'undefined') {\n      throw new Error('Missing or empty per frame functional sequence');\n    }\n    if (frames !== perFrameFuncGroupSequence.value.length) {\n      throw new Error(\n        'perFrameFuncGroupSequence meta and numberOfFrames are not equal.');\n    }\n    // create frame info object from per frame func\n    const frameInfos = [];\n    for (let j = 0; j < perFrameFuncGroupSequence.value.length; ++j) {\n      frameInfos.push(\n        getSegmentFrameInfo(perFrameFuncGroupSequence.value[j]));\n    }\n\n    // check frame infos\n    const framePosPats = [];\n    for (let ii = 0; ii < frameInfos.length; ++ii) {\n      if (!includesPosPat(framePosPats, frameInfos[ii].imagePosPat)) {\n        framePosPats.push(frameInfos[ii].imagePosPat);\n      }\n      // store orientation if needed, avoid multi\n      if (typeof frameInfos[ii].imageOrientationPatient !== 'undefined') {\n        if (typeof imageOrientationPatient === 'undefined') {\n          imageOrientationPatient = frameInfos[ii].imageOrientationPatient;\n        } else {\n          if (!arraySortEquals(\n            imageOrientationPatient, frameInfos[ii].imageOrientationPatient)) {\n            throw new Error('Unsupported multi orientation dicom seg.');\n          }\n        }\n      }\n      // store spacing if needed, avoid multi\n      if (typeof frameInfos[ii].spacing !== 'undefined') {\n        if (typeof spacing === 'undefined') {\n          spacing = frameInfos[ii].spacing;\n        } else {\n          if (!spacing.equals(frameInfos[ii].spacing)) {\n            throw new Error('Unsupported multi resolution dicom seg.');\n          }\n        }\n      }\n    }\n\n    // check spacing and orientation\n    if (typeof spacing === 'undefined') {\n      throw new Error('No spacing found for DICOM SEG');\n    }\n    if (typeof imageOrientationPatient === 'undefined') {\n      throw new Error('No imageOrientationPatient found for DICOM SEG');\n    }\n\n    // orientation\n    const rowCosines = new Vector3D(\n      parseFloat(imageOrientationPatient[0]),\n      parseFloat(imageOrientationPatient[1]),\n      parseFloat(imageOrientationPatient[2]));\n    const colCosines = new Vector3D(\n      parseFloat(imageOrientationPatient[3]),\n      parseFloat(imageOrientationPatient[4]),\n      parseFloat(imageOrientationPatient[5]));\n    const normal = rowCosines.crossProduct(colCosines);\n    /* eslint-disable array-element-newline */\n    const orientationMatrix = new Matrix33([\n      rowCosines.getX(), colCosines.getX(), normal.getX(),\n      rowCosines.getY(), colCosines.getY(), normal.getY(),\n      rowCosines.getZ(), colCosines.getZ(), normal.getZ()\n    ]);\n\n    // sort positions patient\n    framePosPats.sort(getComparePosPat(orientationMatrix));\n\n    const point3DFromArray = function (arr) {\n      return new Point3D(arr[0], arr[1], arr[2]);\n    };\n\n    // frame origins\n    const frameOrigins = [];\n    for (let n = 0; n < framePosPats.length; ++n) {\n      frameOrigins.push(point3DFromArray(framePosPats[n]));\n    }\n\n    // use calculated spacing\n    let newSpacing = spacing;\n    const geoSliceSpacing = getSliceGeometrySpacing(\n      frameOrigins, orientationMatrix, false);\n    const spacingValues = spacing.getValues();\n    if (typeof geoSliceSpacing !== 'undefined' &&\n      geoSliceSpacing !== spacingValues[2]) {\n      spacingValues[2] = geoSliceSpacing;\n      newSpacing = new Spacing(spacingValues);\n    }\n\n    // tmp geometry with correct spacing but only one slice\n    const tmpGeometry = new Geometry(\n      frameOrigins[0], size, newSpacing, orientationMatrix);\n\n    // origin distance test\n    // TODO: maybe use sliceSpacing / 10\n    const isNotSmall = function (value) {\n      let res = value > REAL_WORLD_EPSILON;\n      if (res) {\n        // try larger epsilon\n        res = value > REAL_WORLD_EPSILON * 10;\n        if (!res) {\n          // warn if epsilon < value < epsilon * 10\n          logger.warn(\n            'Using larger real world epsilon in SEG pos pat adding'\n          );\n        } else {\n          res = value > REAL_WORLD_EPSILON * 100;\n          if (!res) {\n            // warn if epsilon < value < epsilon * 100\n            logger.warn(\n              'Using larger+ real world epsilon in SEG pos pat adding'\n            );\n          }\n        }\n      }\n      return res;\n    };\n\n    // add possibly missing posPats\n    const posPats = [];\n    posPats.push(framePosPats[0]);\n    let sliceIndex = 0;\n    for (let g = 1; g < framePosPats.length; ++g) {\n      ++sliceIndex;\n      let index = new Index([0, 0, sliceIndex]);\n      let point = tmpGeometry.indexToWorld(index).get3D();\n      const frameOrigin = frameOrigins[g];\n      // check if more pos pats are needed\n      let dist = frameOrigin.getDistance(point);\n      const distPrevious = dist;\n      // TODO: good threshold?\n      while (isNotSmall(dist)) {\n        logger.debug('Adding intermediate pos pats for DICOM seg at ' +\n          point.toString());\n        posPats.push([point.getX(), point.getY(), point.getZ()]);\n        ++sliceIndex;\n        index = new Index([0, 0, sliceIndex]);\n        point = tmpGeometry.indexToWorld(index).get3D();\n        dist = frameOrigin.getDistance(point);\n        if (dist > distPrevious) {\n          throw new Error(\n            'Test distance is increasing when adding intermediate pos pats');\n        }\n      }\n      // add frame pos pat\n      posPats.push(framePosPats[g]);\n    }\n\n    // as many slices as posPats\n    const numberOfSlices = posPats.length;\n\n    // final geometry\n    const geometry = new Geometry(\n      frameOrigins[0], size, newSpacing, orientationMatrix);\n    const uids = [0];\n    for (let m = 1; m < numberOfSlices; ++m) {\n      geometry.appendOrigin(point3DFromArray(posPats[m]), m);\n      uids.push(m);\n    }\n\n    const getFindSegmentFunc = function (number) {\n      return function (item) {\n        return item.number === number;\n      };\n    };\n\n    // create output buffer\n    const mul = storeAsRGB ? 3 : 1;\n    const buffer =\n      // @ts-ignore\n      new pixelBuffer.constructor(mul * sliceSize * numberOfSlices);\n    buffer.fill(0);\n    // merge frame buffers\n    let sliceOffset = null;\n    let frameOffset = null;\n    for (let f = 0; f < frameInfos.length; ++f) {\n      // get the slice index from the position in the posPat array\n      sliceIndex = findIndexPosPat(posPats, frameInfos[f].imagePosPat);\n      frameOffset = sliceSize * f;\n      sliceOffset = sliceSize * sliceIndex;\n      // get the frame display value\n      const frameSegment = segments.find(\n        getFindSegmentFunc(frameInfos[f].refSegmentNumber)\n      );\n      const pixelValue = frameSegment.displayValue;\n      for (let l = 0; l < sliceSize; ++l) {\n        if (pixelBuffer[frameOffset + l] !== 0) {\n          const offset = mul * (sliceOffset + l);\n          if (storeAsRGB) {\n            buffer[offset] = pixelValue.r;\n            buffer[offset + 1] = pixelValue.g;\n            buffer[offset + 2] = pixelValue.b;\n          } else {\n            buffer[offset] = pixelValue;\n          }\n        }\n      }\n    }\n\n    // create image\n    const image = new Image(geometry, buffer, uids);\n    if (storeAsRGB) {\n      image.setPhotometricInterpretation('RGB');\n    }\n    // meta information\n    const meta = getDefaultDicomSegJson();\n    // Study\n    meta.StudyDate = dicomElements['00080020'].value[0];\n    meta.StudyTime = dicomElements['00080030'].value[0];\n    meta.StudyInstanceUID = dicomElements['0020000D'].value[0];\n    meta.StudyID = dicomElements['00200010'].value[0];\n    // Series\n    meta.SeriesInstanceUID = dicomElements['0020000E'].value[0];\n    meta.SeriesNumber = dicomElements['00200011'].value[0];\n    // ReferringPhysicianName\n    meta.ReferringPhysicianName = dicomElements['00080090'].value[0];\n    // patient info\n    meta.PatientName = dicomElements['00100010'].value[0];\n    meta.PatientID = dicomElements['00100020'].value[0];\n    meta.PatientBirthDate = dicomElements['00100030'].value[0];\n    meta.PatientSex = dicomElements['00100040'].value[0];\n    // Enhanced General Equipment Module\n    meta.Manufacturer = dicomElements['00080070'].value[0];\n    meta.ManufacturerModelName = dicomElements['00081090'].value[0];\n    meta.DeviceSerialNumber = dicomElements['00181000'].value[0];\n    meta.SoftwareVersions = dicomElements['00181020'].value[0];\n    // dicom seg dimension\n    meta.DimensionOrganizationSequence = dimension.organizations;\n    meta.DimensionIndexSequence = dimension.indices;\n    // custom\n    meta.custom = {\n      segments: segments,\n      frameInfos: frameInfos,\n      SOPInstanceUID: dicomElements['00080018'].value[0]\n    };\n\n    // number of files: in this case equal to number slices,\n    //   used to calculate buffer size\n    meta.numberOfFiles = numberOfSlices;\n    // FrameOfReferenceUID (optional)\n    const frameOfReferenceUID = dicomElements['00200052'];\n    if (frameOfReferenceUID) {\n      meta.FrameOfReferenceUID = frameOfReferenceUID.value[0];\n    }\n    // LossyImageCompression (optional)\n    const lossyImageCompression = dicomElements['00282110'];\n    if (lossyImageCompression) {\n      meta.LossyImageCompression = lossyImageCompression.value[0];\n    }\n\n    image.setMeta(meta);\n\n    return image;\n  }\n\n} // class MaskFactory\n","/**\n * Thread Pool.\n * Highly inspired from {@link http://www.smartjava.org/content/html5-easily-parallelize-jobs-using-web-workers-and-threadpool}.\n */\nexport class ThreadPool {\n\n  /**\n   * @param {number} poolSize The size of the pool.\n   */\n  constructor(poolSize) {\n    this.poolSize = poolSize;\n    // task queue\n    this.taskQueue = [];\n    // lsit of available threads\n    this.freeThreads = [];\n    // create 'poolSize' number of worker threads\n    for (let i = 0; i < poolSize; ++i) {\n      this.freeThreads.push(new WorkerThread(this));\n    }\n    // list of running threads (unsed in abort)\n    this.runningThreads = [];\n  }\n\n  /**\n   * Add a worker task to the queue.\n   * Will be run when a thread is made available.\n   *\n   * @param {object} workerTask The task to add to the queue.\n   */\n  addWorkerTask(workerTask) {\n    // send work start if first task\n    if (this.freeThreads.length === this.poolSize) {\n      this.onworkstart({type: 'work-start'});\n    }\n    // launch task or queue\n    if (this.freeThreads.length > 0) {\n      // get the first free worker thread\n      const workerThread = this.freeThreads.shift();\n      // add the thread to the runnning list\n      this.runningThreads.push(workerThread);\n      // run the input task\n      workerThread.run(workerTask);\n    } else {\n      // no free thread, add task to queue\n      this.taskQueue.push(workerTask);\n    }\n  }\n\n  /**\n   * Abort all threads.\n   */\n  abort() {\n    // stop all threads\n    this.#stop();\n    // callback\n    this.onabort({type: 'work-abort'});\n    this.onworkend({type: 'work-end'});\n  }\n\n  /**\n   * Handle a task end.\n   *\n   * @param {object} workerThread The thread to free.\n   */\n  onTaskEnd(workerThread) {\n    // launch next task in queue or finish\n    if (this.taskQueue.length > 0) {\n      // get waiting task\n      const workerTask = this.taskQueue.shift();\n      // use input thread to run the waiting task\n      workerThread.run(workerTask);\n    } else {\n      // stop the worker\n      workerThread.stop();\n      // no task to run, add to free list\n      this.freeThreads.push(workerThread);\n      // remove from running list\n      for (let i = 0; i < this.runningThreads.length; ++i) {\n        if (this.runningThreads[i].getId() === workerThread.getId()) {\n          this.runningThreads.splice(i, 1);\n        }\n      }\n      // the work is done when the queue is back to its initial size\n      if (this.freeThreads.length === this.poolSize) {\n        this.onwork({type: 'work'});\n        this.onworkend({type: 'work-end'});\n      }\n    }\n  }\n\n  /**\n   * Handle an error message from a worker.\n   *\n   * @param {object} event The error event.\n   */\n  handleWorkerError = (event) => {\n    // stop all threads\n    this.#stop();\n    // callback\n    this.onerror({error: event});\n    this.onworkend({type: 'work-end'});\n  };\n\n  // private ----------------------------------------------------------------\n\n  /**\n   * Stop the pool: stop all running threads.\n   *\n   */\n  #stop() {\n    // clear tasks\n    this.taskQueue = [];\n    // cancel running workers\n    for (let i = 0; i < this.runningThreads.length; ++i) {\n      this.runningThreads[i].stop();\n    }\n    this.runningThreads = [];\n  }\n\n\n  /**\n   * Handle a work start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work start event.\n   */\n  onworkstart(_event) {}\n\n  /**\n   * Handle a work item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work item event fired\n   *   when a work item ended successfully.\n   */\n  onworkitem(_event) {}\n\n  /**\n   * Handle a work event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work event fired\n   *   when a work ended successfully.\n   */\n  onwork(_event) {}\n\n  /**\n   * Handle a work end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work end event fired\n   *  when a work has completed, successfully or not.\n   */\n  onworkend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // ThreadPool\n\n/**\n * Worker background task.\n *\n * @external Worker\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Worker\n */\n\n/**\n * Worker thread.\n */\nclass WorkerThread {\n\n  /**\n   * @param {object} parentPool The parent pool.\n   */\n  constructor(parentPool) {\n    this.parentPool = parentPool;\n    // thread ID\n    this.id = Math.random().toString(36).substring(2, 15);\n    // running task\n    this.runningTask = null;\n    // worker used to run task\n    this.worker;\n  }\n\n  /**\n   * Get the thread ID.\n   *\n   * @returns {string} The thread ID (alphanumeric).\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Run a worker task\n   *\n   * @param {object} workerTask The task to run.\n   */\n  run(workerTask) {\n    // store task\n    this.runningTask = workerTask;\n    // create a new web worker if not done yet\n    if (typeof this.worker === 'undefined') {\n      this.worker = new Worker(this.runningTask.script);\n      // set callbacks\n      this.worker.onmessage = this.onmessage;\n      this.worker.onerror = this.onerror;\n    }\n    // launch the worker\n    this.worker.postMessage(this.runningTask.startMessage);\n  }\n\n  /**\n   * Finish a task and tell the parent.\n   */\n  stop() {\n    // stop the worker\n    if (typeof this.worker !== 'undefined') {\n      this.worker.terminate();\n      // force create at next run\n      this.worker = undefined;\n    }\n  }\n\n  /**\n   * Message event handler.\n   * For now assume we only get a single callback from a worker\n   * which also indicates the end of this worker.\n   *\n   * @param {object} event The message event.\n   */\n  onmessage = (event) => {\n    // augment event\n    event.itemNumber = this.runningTask.info.itemNumber;\n    event.numberOfItems = this.runningTask.info.numberOfItems;\n    event.dataIndex = this.runningTask.info.dataIndex;\n    // send event\n    this.parentPool.onworkitem(event);\n    // tell the parent pool the task is done\n    this.parentPool.onTaskEnd(this);\n  };\n\n  /**\n   * Error event handler.\n   *\n   * @param {object} event The error event.\n   */\n  onerror = (event) => {\n    // augment event\n    event.itemNumber = this.runningTask.info.itemNumber;\n    event.numberOfItems = this.runningTask.info.numberOfItems;\n    event.dataIndex = this.runningTask.info.dataIndex;\n    // pass to parent\n    this.parentPool.handleWorkerError(event);\n    // stop the worker and free the thread\n    this.stop();\n  };\n} // class WorkerThread\n\n/**\n * Worker task.\n */\nexport class WorkerTask {\n  /**\n   * @param {string} script The worker script.\n   * @param {object} message The data to pass to the worker.\n   * @param {object} info Information object about the input data.\n   */\n  constructor(script, message, info) {\n    // worker script\n    this.script = script;\n    // worker start message\n    this.startMessage = message;\n    // information about the work data\n    this.info = info;\n  }\n}\n","import {ThreadPool, WorkerTask} from '../utils/thread';\n\n/**\n * The JPEG baseline decoder.\n *\n * @external JpegImage\n * @see https://github.com/mozilla/pdf.js/blob/master/src/core/jpg.js\n */\n/* global JpegImage */\n// @ts-ignore\nconst hasJpegBaselineDecoder = (typeof JpegImage !== 'undefined');\n\n/**\n * The JPEG decoder namespace.\n *\n * @external jpeg\n * @see https://github.com/rii-mango/JPEGLosslessDecoderJS\n */\n/* global jpeg */\nconst hasJpegLosslessDecoder =\n  // @ts-ignore\n  (typeof jpeg !== 'undefined') && (typeof jpeg.lossless !== 'undefined');\n\n/**\n * The JPEG 2000 decoder.\n *\n * @external JpxImage\n * @see https://github.com/jpambrun/jpx-medical/blob/master/jpx.js\n */\n/* global JpxImage */\n// @ts-ignore\nconst hasJpeg2000Decoder = (typeof JpxImage !== 'undefined');\n\n/* global dwvdecoder */\n\n/**\n * Decoder scripts to be passed to web workers for image decoding.\n */\nexport const decoderScripts = {\n  jpeg2000: '',\n  'jpeg-lossless': '',\n  'jpeg-baseline': '',\n  rle: ''\n};\n\n/**\n * Asynchronous pixel buffer decoder.\n */\nclass AsynchPixelBufferDecoder {\n\n  /**\n   * The associated worker script.\n   *\n   * @type {string}\n   */\n  #script;\n\n  /**\n   * Associated thread pool.\n   *\n   * @type {ThreadPool}\n   */\n  #pool = new ThreadPool(10);\n\n  /**\n   * Flag to know if callbacks are set.\n   *\n   * @type {boolean}\n   */\n  #areCallbacksSet = false;\n\n  /**\n   * @param {string} script The path to the decoder script to be used\n   *   by the web worker.\n   * @param {number} _numberOfData The anticipated number of data to decode.\n   */\n  constructor(script, _numberOfData) {\n    this.#script = script;\n  }\n\n  /**\n   * Decode a pixel buffer.\n   *\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    if (!this.#areCallbacksSet) {\n      this.#areCallbacksSet = true;\n      // set event handlers\n      this.#pool.onworkstart = this.ondecodestart;\n      this.#pool.onworkitem = this.ondecodeditem;\n      this.#pool.onwork = this.ondecoded;\n      this.#pool.onworkend = this.ondecodeend;\n      this.#pool.onerror = this.onerror;\n      this.#pool.onabort = this.onabort;\n    }\n    // create worker task\n    const workerTask = new WorkerTask(\n      this.#script,\n      {\n        buffer: pixelBuffer,\n        meta: pixelMeta\n      },\n      info\n    );\n    // add it the queue and run it\n    this.#pool.addWorkerTask(workerTask);\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // abort the thread pool, will trigger pool.onabort\n    this.#pool.abort();\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class AsynchPixelBufferDecoder\n\n/**\n * Synchronous pixel buffer decoder.\n */\nclass SynchPixelBufferDecoder {\n\n  /**\n   * Name of the compression algorithm.\n   *\n   * @type {string}\n   */\n  #algoName;\n\n  /**\n   * Number of data.\n   *\n   * @type {number}\n   */\n  #numberOfData;\n\n  /**\n   * @param {string} algoName The decompression algorithm name.\n   * @param {number} numberOfData The anticipated number of data to decode.\n   */\n  constructor(algoName, numberOfData) {\n    this.#algoName = algoName;\n    this.#numberOfData = numberOfData;\n  }\n\n  // decode count\n  #decodeCount = 0;\n\n  /**\n   * Decode a pixel buffer.\n   *\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   * @external jpeg\n   * @external JpegImage\n   * @external JpxImage\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    ++this.#decodeCount;\n\n    let decoder = null;\n    let decodedBuffer = null;\n    if (this.#algoName === 'jpeg-lossless') {\n      if (!hasJpegLosslessDecoder) {\n        throw new Error('No JPEG Lossless decoder provided');\n      }\n      // bytes per element\n      const bpe = pixelMeta.bitsAllocated / 8;\n      const buf = new Uint8Array(pixelBuffer);\n      // @ts-ignore\n      decoder = new jpeg.lossless.Decoder();\n      const decoded = decoder.decode(buf.buffer, 0, buf.buffer.byteLength, bpe);\n      if (pixelMeta.bitsAllocated === 8) {\n        if (pixelMeta.isSigned) {\n          decodedBuffer = new Int8Array(decoded.buffer);\n        } else {\n          decodedBuffer = new Uint8Array(decoded.buffer);\n        }\n      } else if (pixelMeta.bitsAllocated === 16) {\n        if (pixelMeta.isSigned) {\n          decodedBuffer = new Int16Array(decoded.buffer);\n        } else {\n          decodedBuffer = new Uint16Array(decoded.buffer);\n        }\n      }\n    } else if (this.#algoName === 'jpeg-baseline') {\n      if (!hasJpegBaselineDecoder) {\n        throw new Error('No JPEG Baseline decoder provided');\n      }\n      // @ts-ignore\n      decoder = new JpegImage();\n      decoder.parse(pixelBuffer);\n      decodedBuffer = decoder.getData(decoder.width, decoder.height);\n    } else if (this.#algoName === 'jpeg2000') {\n      if (!hasJpeg2000Decoder) {\n        throw new Error('No JPEG 2000 decoder provided');\n      }\n      // decompress pixel buffer into Int16 image\n      // @ts-ignore\n      decoder = new JpxImage();\n      decoder.parse(pixelBuffer);\n      // set the pixel buffer\n      decodedBuffer = decoder.tiles[0].items;\n    } else if (this.#algoName === 'rle') {\n      // decode DICOM buffer\n      // @ts-ignore\n      decoder = new dwvdecoder.RleDecoder();\n      // set the pixel buffer\n      decodedBuffer = decoder.decode(\n        pixelBuffer,\n        pixelMeta.bitsAllocated,\n        pixelMeta.isSigned,\n        pixelMeta.sliceSize,\n        pixelMeta.samplesPerPixel,\n        pixelMeta.planarConfiguration);\n    }\n    // send decode events\n    this.ondecodeditem({\n      data: [decodedBuffer],\n      dataIndex: info.dataIndex,\n      numberOfItems: info.numberOfItems,\n      itemNumber: info.itemNumber\n    });\n    // decode end?\n    if (this.#decodeCount === this.#numberOfData) {\n      this.ondecoded({});\n      this.ondecodeend({});\n    }\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // nothing to do in the synchronous case.\n    // callback\n    this.onabort({});\n    this.ondecodeend({});\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class SynchPixelBufferDecoder\n\n/**\n * Decode a pixel buffer.\n *\n * If the 'decoderScripts' variable does not contain the desired,\n * algorythm the decoder will switch to the synchronous mode.\n */\nexport class PixelBufferDecoder {\n\n  /**\n   * Flag to know if callbacks are set.\n   *\n   * @type {boolean}\n   */\n  #areCallbacksSet = false;\n\n  /**\n   * Pixel decoder.\n   * Defined only once.\n   *\n   * @type {object}\n   */\n  #pixelDecoder = null;\n\n  /**\n   * @param {string} algoName The decompression algorithm name.\n   * @param {number} numberOfData The anticipated number of data to decode.\n   */\n  constructor(algoName, numberOfData) {\n    // initialise the asynch decoder (if possible)\n    if (typeof decoderScripts !== 'undefined' &&\n      typeof decoderScripts[algoName] !== 'undefined') {\n      this.#pixelDecoder = new AsynchPixelBufferDecoder(\n        decoderScripts[algoName], numberOfData);\n    } else {\n      this.#pixelDecoder = new SynchPixelBufferDecoder(\n        algoName, numberOfData);\n    }\n  }\n\n  /**\n   * Get data from an input buffer using a DICOM parser.\n   *\n   * @param {Array} pixelBuffer The input data buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    if (!this.#areCallbacksSet) {\n      this.#areCallbacksSet = true;\n      // set callbacks\n      this.#pixelDecoder.ondecodestart = this.ondecodestart;\n      this.#pixelDecoder.ondecodeditem = this.ondecodeditem;\n      this.#pixelDecoder.ondecoded = this.ondecoded;\n      this.#pixelDecoder.ondecodeend = this.ondecodeend;\n      this.#pixelDecoder.onerror = this.onerror;\n      this.#pixelDecoder.onabort = this.onabort;\n    }\n    // decode and call the callback\n    this.#pixelDecoder.decode(pixelBuffer, pixelMeta, info);\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // decoder classes should define an abort\n    this.#pixelDecoder.abort();\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class PixelBufferDecoder\n","import {logger} from '../utils/logger';\nimport {\n  DicomParser,\n  getSyntaxDecompressionName\n} from '../dicom/dicomParser';\nimport {ImageFactory} from './imageFactory';\nimport {MaskFactory} from './maskFactory';\nimport {PixelBufferDecoder} from './decoder';\n\n/**\n * Create a View from a DICOM buffer.\n */\nexport class DicomBufferToView {\n\n  /**\n   * Converter options.\n   *\n   * @type {object}\n   */\n  #options;\n\n  /**\n   * Set the converter options.\n   *\n   * @param {object} opt The input options.\n   */\n  setOptions(opt) {\n    this.#options = opt;\n  }\n\n  /**\n   * Pixel buffer decoder.\n   * Define only once to allow optional asynchronous mode.\n   *\n   * @type {object}\n   */\n  #pixelDecoder = null;\n\n  // local tmp storage\n  #dicomParserStore = [];\n  #finalBufferStore = [];\n  #decompressedSizes = [];\n  #factoryWarnings = [];\n\n  /**\n   * Get the factory associated to input DICOM elements.\n   *\n   * @param {object} elements The DICOM elements.\n   * @returns {ImageFactory|MaskFactory} The associated factory.\n   */\n  #getFactory(elements) {\n    let factory;\n    // mask factory for DICOM SEG\n    const element = elements['00080060'];\n    if (typeof element !== 'undefined') {\n      const modality = element.value[0];\n      if (modality === 'SEG') {\n        factory = new MaskFactory();\n      }\n    }\n    // default image factory\n    if (typeof factory === 'undefined') {\n      factory = new ImageFactory();\n    }\n    return factory;\n  }\n\n  /**\n   * Generate the image object.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  #generateImage(index, origin) {\n    const dicomElements = this.#dicomParserStore[index].getDicomElements();\n    const factory = this.#getFactory(dicomElements);\n    // create the image\n    try {\n      const image = factory.create(\n        dicomElements,\n        this.#finalBufferStore[index],\n        this.#options.numberOfFiles);\n      // call onloaditem\n      this.onloaditem({\n        data: {\n          image: image,\n          info: dicomElements\n        },\n        source: origin,\n        warn: this.#factoryWarnings[index]\n      });\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Handle a decoded item event.\n   *\n   * @param {object} event The decoded item event.\n   */\n  #onDecodedItem(event) {\n    // send progress\n    this.onprogress({\n      lengthComputable: true,\n      loaded: event.itemNumber + 1,\n      total: event.numberOfItems,\n      index: event.dataIndex,\n      source: origin\n    });\n\n    const dataIndex = event.dataIndex;\n\n    // store decoded data\n    const decodedData = event.data[0];\n    if (event.numberOfItems !== 1) {\n      // allocate buffer if not done yet\n      if (typeof this.#decompressedSizes[dataIndex] === 'undefined') {\n        this.#decompressedSizes[dataIndex] = decodedData.length;\n        const fullSize = event.numberOfItems *\n          this.#decompressedSizes[dataIndex];\n        try {\n          this.#finalBufferStore[dataIndex] =\n            new decodedData.constructor(fullSize);\n        } catch (error) {\n          if (error instanceof RangeError) {\n            const powerOf2 = Math.floor(Math.log(fullSize) / Math.log(2));\n            logger.error('Cannot allocate ' +\n              decodedData.constructor.name +\n              ' of size: ' +\n              fullSize + ' (>2^' + powerOf2 + ') for decompressed data.');\n          }\n          // abort\n          this.#pixelDecoder.abort();\n          // send events\n          this.onerror({\n            error: error,\n            source: origin\n          });\n          this.onloadend({\n            source: origin\n          });\n          // exit\n          return;\n        }\n      }\n      // hoping for all items to have the same size...\n      if (decodedData.length !== this.#decompressedSizes[dataIndex]) {\n        logger.warn('Unsupported varying decompressed data size: ' +\n          decodedData.length + ' != ' + this.#decompressedSizes[dataIndex]);\n      }\n      // set buffer item data\n      this.#finalBufferStore[dataIndex].set(\n        decodedData, this.#decompressedSizes[dataIndex] * event.itemNumber);\n    } else {\n      this.#finalBufferStore[dataIndex] = decodedData;\n    }\n\n    // create image for the first item\n    if (event.itemNumber === 0) {\n      this.#generateImage(dataIndex, origin);\n    }\n  }\n\n  /**\n   * Get data from an input buffer using a DICOM parser.\n   *\n   * @param {ArrayBuffer} buffer The input data buffer.\n   * @param {string} origin The data origin.\n   * @param {number} dataIndex The data index.\n   */\n  convert(buffer, origin, dataIndex) {\n\n    this.onloadstart({\n      source: origin,\n      dataIndex: dataIndex\n    });\n\n    // DICOM parser\n    const dicomParser = new DicomParser();\n\n    if (typeof this.#options.defaultCharacterSet !== 'undefined') {\n      dicomParser.setDefaultCharacterSet(this.#options.defaultCharacterSet);\n    }\n    // parse the buffer\n    let warning;\n    try {\n      dicomParser.parse(buffer);\n      // check elements\n      const factory = this.#getFactory(dicomParser.getDicomElements());\n      warning = factory.checkElements(dicomParser.getDicomElements());\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n      return;\n    }\n\n\n    const pixelBuffer = dicomParser.getDicomElements()['7FE00010'].value;\n    // help GC: discard pixel buffer from elements\n    dicomParser.getDicomElements()['7FE00010'].value = [];\n    const syntax = dicomParser.getDicomElements()['00020010'].value[0];\n    const algoName = getSyntaxDecompressionName(syntax);\n    const needDecompression = (algoName !== null);\n\n    // store\n    this.#dicomParserStore[dataIndex] = dicomParser;\n    this.#finalBufferStore[dataIndex] = pixelBuffer[0];\n    this.#factoryWarnings[dataIndex] = warning;\n\n    if (needDecompression) {\n      // gather pixel buffer meta data\n      const bitsAllocated =\n        dicomParser.getDicomElements()['00280100'].value[0];\n      const pixelRepresentation =\n        dicomParser.getDicomElements()['00280103'].value[0];\n      const pixelMeta = {\n        bitsAllocated: bitsAllocated,\n        isSigned: (pixelRepresentation === 1)\n      };\n      const columnsElement = dicomParser.getDicomElements()['00280011'];\n      const rowsElement = dicomParser.getDicomElements()['00280010'];\n      if (typeof columnsElement !== 'undefined' &&\n        typeof rowsElement !== 'undefined') {\n        pixelMeta.sliceSize = columnsElement.value[0] * rowsElement.value[0];\n      }\n      const samplesPerPixelElement =\n        dicomParser.getDicomElements()['00280002'];\n      if (typeof samplesPerPixelElement !== 'undefined') {\n        pixelMeta.samplesPerPixel = samplesPerPixelElement.value[0];\n      }\n      const planarConfigurationElement =\n        dicomParser.getDicomElements()['00280006'];\n      if (typeof planarConfigurationElement !== 'undefined') {\n        pixelMeta.planarConfiguration = planarConfigurationElement.value[0];\n      }\n\n      // number of items\n      const numberOfItems = pixelBuffer.length;\n\n      // setup the decoder (one decoder per all converts)\n      if (this.#pixelDecoder === null) {\n        this.#pixelDecoder = new PixelBufferDecoder(\n          algoName, numberOfItems);\n        // callbacks\n        // pixelDecoder.ondecodestart: nothing to do\n        this.#pixelDecoder.ondecodeditem = (event) => {\n          this.#onDecodedItem(event);\n          // send onload and onloadend when all items have been decoded\n          if (event.itemNumber + 1 === event.numberOfItems) {\n            this.onload(event);\n            this.onloadend(event);\n          }\n        };\n        // pixelDecoder.ondecoded: nothing to do\n        // pixelDecoder.ondecodeend: nothing to do\n        this.#pixelDecoder.onerror = this.onerror;\n        this.#pixelDecoder.onabort = this.onabort;\n      }\n\n      // launch decode\n      for (let i = 0; i < numberOfItems; ++i) {\n        this.#pixelDecoder.decode(pixelBuffer[i], pixelMeta,\n          {\n            itemNumber: i,\n            numberOfItems: numberOfItems,\n            dataIndex: dataIndex\n          }\n        );\n      }\n    } else {\n      // no decompression\n      // send progress\n      this.onprogress({\n        lengthComputable: true,\n        loaded: 100,\n        total: 100,\n        index: dataIndex,\n        source: origin\n      });\n      // generate image\n      this.#generateImage(dataIndex, origin);\n      // send load events\n      this.onload({\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Abort a conversion.\n   */\n  abort() {\n    // abort decoding, will trigger pixelDecoder.onabort\n    if (this.#pixelDecoder) {\n      this.#pixelDecoder.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomBufferToView\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\nimport {DicomBufferToView} from '../image/dicomBufferToView';\n\n/**\n * DICOM data loader.\n */\nexport class DicomDataLoader {\n\n  /**\n   * Loader options.\n   *\n   * @type {object}\n   */\n  #options = {};\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} opt The input options.\n   */\n  setOptions(opt) {\n    this.#options = opt;\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * DICOM buffer to View (asynchronous)\n   *\n   */\n  #db2v = new DicomBufferToView();\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // setup db2v ony once\n    if (!this.#isLoading) {\n      // pass options\n      this.#db2v.setOptions(this.#options);\n      // connect handlers\n      this.#db2v.onloadstart = this.onloadstart;\n      this.#db2v.onprogress = this.onprogress;\n      this.#db2v.onloaditem = this.onloaditem;\n      this.#db2v.onload = this.onload;\n      this.#db2v.onloadend = (event) => {\n        // reset loading flag\n        this.#isLoading = false;\n        // call listeners\n        this.onloadend(event);\n      };\n      this.#db2v.onerror = (event) => {\n        event.source = origin;\n        this.onerror(event);\n      };\n      this.#db2v.onabort = this.onabort;\n    }\n\n    // set loading flag\n    this.#isLoading = true;\n    // convert\n    this.#db2v.convert(buffer, origin, index);\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // abort conversion, will trigger db2v.onabort\n    this.#db2v.abort();\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    const hasNoExt = (ext === null);\n    const hasDcmExt = (ext === 'dcm');\n    return hasNoExt || hasDcmExt;\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if:\n   *  - the url has a 'contentType' and it is 'application/dicom'\n   *    (as in wado urls)\n   *  - the url has no 'contentType' and no extension or the extension is 'dcm'\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'application/dicom'\n      const isDicom = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'application/dicom') &&\n          element.value[18] !== '+';\n      };\n      return typeof options.requestHeaders.find(isDicom) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    // extension\n    const ext = getFileExtension(urlObjext.pathname);\n    const hasNoExt = (ext === null);\n    const hasDcmExt = (ext === 'dcm');\n    // content type (for wado url)\n    const contentType = urlObjext.searchParams.get('contentType');\n    const hasContentType = contentType !== null &&\n      typeof contentType !== 'undefined';\n    const hasDicomContentType = (contentType === 'application/dicom');\n\n    return hasContentType ? hasDicomContentType : (hasNoExt || hasDcmExt);\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem['Content-Type'] !== 'undefined' &&\n      mem['Content-Type'] === 'application/dicom') {\n      return true;\n    }\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomDataLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * JSON text loader.\n */\nexport class JSONTextLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} text The input text.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(text, origin, index) {\n    // set loading flag\n    this.#isLoading = true;\n    this.onloadstart({\n      source: origin\n    });\n\n    try {\n      this.onprogress({\n        lengthComputable: true,\n        loaded: 100,\n        total: 100,\n        index: index,\n        source: origin\n      });\n      const data = {\n        data: text,\n        source: origin\n      };\n      // only expecting one item\n      this.onloaditem(data);\n      this.onload(data);\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n    } finally {\n      // reset loading flag\n      this.#isLoading = false;\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    return (ext === 'json');\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeader, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'application/json' or 'application/dicom+json\n      const isJson = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'application/json') &&\n          startsWith(element.value, 'application/dicom+json');\n      };\n      return typeof options.requestHeaders.find(isJson) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'json');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem['Content-Type'] !== 'undefined') {\n      if (mem['Content-Type'].includes('json')) {\n        return true;\n      }\n    }\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.Text;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.Text;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class JSONTextLoader\n","import {MultiProgressHandler} from '../utils/progress';\nimport {loaderList} from './loaderList';\n\n/**\n * Memory loader.\n */\nexport class MemoryLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {Array}\n   */\n  #inputData = null;\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {object} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // clear storage\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is not the\n    //   general load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is not the\n    //   general load end)\n    if (this.#nLoadend === this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Load a list of buffers.\n   *\n   * @param {Array} data The list of buffers to load.\n   */\n  load(data) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n    mproghandler.setNumberOfDimensions(1);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadMemory(dataElement)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(0);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this.#addLoad;\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for data: ' + dataElement.filename);\n    }\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n      // check loader\n      if (!loader.canLoadMemory(dataElement)) {\n        throw new Error('Input data of different type: ' +\n          dataElement.filename);\n      }\n      // read\n      loader.load(dataElement.data, dataElement.filename, i);\n    }\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class MemoryLoader\n","import {startsWith} from '../utils/string';\nimport {parseMultipart} from '../utils/array';\nimport {MemoryLoader} from './memoryLoader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Multipart data loader.\n */\nexport class MultipartLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // send start event\n    this.onloadstart({\n      source: origin\n    });\n    // set loading flag\n    this.#isLoading = true;\n\n    const memoryIO = new MemoryLoader();\n    // memoryIO.onloadstart: nothing to do\n    memoryIO.onprogress = (progress) => {\n      // add 50% to take into account the un-Multipartping\n      progress.loaded = 50 + progress.loaded / 2;\n      // set data index\n      progress.index = index;\n      this.onprogress(progress);\n    };\n    memoryIO.onloaditem = this.onloaditem;\n    memoryIO.onload = this.onload;\n    memoryIO.onloadend = (event) => {\n      // reset loading flag\n      this.#isLoading = false;\n      // call listeners\n      this.onloadend(event);\n    };\n    memoryIO.onerror = this.onerror;\n    memoryIO.onabort = this.onabort;\n    // launch\n    memoryIO.load(parseMultipart(buffer));\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} _file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(_file) {\n    return false;\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] The url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      const isMultipart = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'multipart/related');\n      };\n      return typeof options.requestHeaders.find(isMultipart) !== 'undefined';\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} _mem The memory object.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadMemory(_mem) {\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class MultipartLoader\n","import {Size} from '../image/size';\nimport {Spacing} from '../image/spacing';\nimport {Geometry} from '../image/geometry';\nimport {Image} from '../image/image';\nimport {Point3D} from '../math/point';\n\n/**\n * Create a simple array buffer from an ImageData buffer.\n *\n * @param {object} imageData The ImageData taken from a context.\n * @returns {Uint8Array} The image buffer.\n */\nfunction imageDataToBuffer(imageData) {\n  // remove alpha\n  // TODO support passing the full image data\n  const dataLen = imageData.data.length;\n  const buffer = new Uint8Array((dataLen / 4) * 3);\n  let j = 0;\n  for (let i = 0; i < dataLen; i += 4) {\n    buffer[j] = imageData.data[i];\n    buffer[j + 1] = imageData.data[i + 1];\n    buffer[j + 2] = imageData.data[i + 2];\n    j += 3;\n  }\n  return buffer;\n}\n\n/**\n * Get an image from an input context imageData.\n *\n * @param {number} width The width of the coresponding image.\n * @param {number} height The height of the coresponding image.\n * @param {number} sliceIndex The slice index of the imageData.\n * @param {object} imageBuffer The image buffer.\n * @param {number} numberOfFrames The final number of frames.\n * @param {string} imageUid The image UID.\n * @returns {object} The corresponding view.\n */\nfunction getDefaultImage(\n  width, height, sliceIndex,\n  imageBuffer, numberOfFrames,\n  imageUid) {\n  // image size\n  const imageSize = new Size([width, height, 1]);\n  // default spacing\n  // TODO: misleading...\n  const imageSpacing = new Spacing([1, 1, 1]);\n  // default origin\n  const origin = new Point3D(0, 0, sliceIndex);\n  // create image\n  const geometry = new Geometry(origin, imageSize, imageSpacing);\n  const image = new Image(geometry, imageBuffer, [imageUid]);\n  image.setPhotometricInterpretation('RGB');\n  // meta information\n  const meta = {};\n  meta.BitsStored = 8;\n  if (typeof numberOfFrames !== 'undefined') {\n    meta.numberOfFiles = numberOfFrames;\n  }\n  image.setMeta(meta);\n  // return\n  return image;\n}\n\n/**\n * Get data from an input image using a canvas.\n *\n * @param {HTMLImageElement} domImage The DOM Image,\n *   an HTMLImageElement with extra info.\n * @param {string|File} origin The data origin.\n * @param {number} index The data index.\n * @returns {object} A load data event.\n */\nexport function getViewFromDOMImage(domImage, origin, index) {\n  // image size\n  const width = domImage.width;\n  const height = domImage.height;\n\n  // draw the image in the canvas in order to get its data\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(domImage, 0, 0);\n  // get the image data\n  const imageData = ctx.getImageData(0, 0, width, height);\n\n  // image properties\n  const info = {};\n  if (typeof origin === 'string') {\n    info['origin'] = {value: origin};\n  } else {\n    info['fileName'] = {value: origin.name};\n    info['fileType'] = {value: origin.type};\n    info['fileLastModifiedDate'] = {value: origin.lastModified};\n  }\n  info['imageWidth'] = {value: width};\n  info['imageHeight'] = {value: height};\n\n  const sliceIndex = index ? index : 0;\n  info['imageUid'] = {value: sliceIndex};\n\n  // create view\n  const imageBuffer = imageDataToBuffer(imageData);\n  const image = getDefaultImage(\n    width, height, sliceIndex, imageBuffer, 1, sliceIndex.toString());\n\n  // return\n  return {\n    data: {\n      image: image,\n      info: info\n    },\n    source: origin\n  };\n}\n\n/**\n * Get data from an input image using a canvas.\n *\n * @param {object} video The DOM Video, an HTMLVideoElement with extra info.\n * @param {Function} onloaditem On load callback.\n * @param {object} onload The function to call once the data is loaded.\n * @param {object} onprogress The function to call to report progress.\n * @param {object} onloadend The function to call to report load end.\n * @param {string|File} origin The data origin.\n * @param {number} dataIndex The data index.\n */\nexport function getViewFromDOMVideo(\n  video, onloaditem, onload, onprogress, onloadend,\n  origin, dataIndex) {\n  // video size\n  const width = video.videoWidth;\n  const height = video.videoHeight;\n\n  // default frame rate...\n  const frameRate = 30;\n  // number of frames\n  const numberOfFrames = Math.ceil(video.duration * frameRate);\n\n  // video properties\n  const info = {};\n  if (typeof origin === 'string') {\n    info['origin'] = {value: origin};\n  } else {\n    info['fileName'] = {value: origin.name};\n    info['fileType'] = {value: origin.type};\n    info['fileLastModifiedDate'] = {value: origin.lastModified};\n  }\n  info['imageWidth'] = {value: width};\n  info['imageHeight'] = {value: height};\n  info['numberOfFrames'] = {value: numberOfFrames};\n  info['imageUid'] = {value: 0};\n\n  // draw the image in the canvas in order to get its data\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n\n  // using seeked to loop through all video frames\n  video.addEventListener('seeked', onseeked, false);\n\n  // current frame index\n  let frameIndex = 0;\n  // video image\n  let image = null;\n\n  /**\n   * Draw the context and store it as a frame\n   */\n  function storeFrame() {\n    // send progress\n    onprogress({\n      lengthComputable: true,\n      loaded: frameIndex,\n      total: numberOfFrames,\n      index: dataIndex,\n      source: origin\n    });\n    // draw image\n    ctx.drawImage(video, 0, 0);\n    // context to image buffer\n    const imgBuffer = imageDataToBuffer(\n      ctx.getImageData(0, 0, width, height));\n    if (frameIndex === 0) {\n      // create view\n      image = getDefaultImage(\n        width, height, 1, imgBuffer, numberOfFrames, dataIndex.toString());\n      // call callback\n      onloaditem({\n        data: {\n          image: image,\n          info: info\n        },\n        source: origin\n      });\n    } else {\n      image.appendFrameBuffer(imgBuffer, frameIndex);\n    }\n    // increment index\n    ++frameIndex;\n  }\n\n  let nextTime = 0;\n\n  /**\n   * Handle seeked event\n   *\n   * @param {object} event The seeked event.\n   */\n  function onseeked(event) {\n    // store\n    storeFrame();\n    // set the next time\n    // (not using currentTime, it seems to get offseted)\n    nextTime += 1 / frameRate;\n    if (nextTime <= event.target.duration) {\n      this.currentTime = nextTime;\n    } else {\n      onload({\n        source: origin\n      });\n      onloadend({\n        source: origin\n      });\n      // stop listening\n      video.removeEventListener('seeked', onseeked);\n    }\n  }\n\n  // trigger the first seek\n  video.currentTime = nextTime;\n}\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {getViewFromDOMImage} from '../image/domReader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Raw image loader.\n */\nexport class RawImageLoader {\n\n  /**\n   * if abort is triggered, all image.onload callbacks have to be cancelled\n   *\n   * @type {boolean}\n   */\n  #aborted = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing? TODO...\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return true;\n  }\n\n  /**\n   * Create a Data URI from an HTTP request response.\n   *\n   * @param {ArrayBuffer} response The HTTP request response.\n   * @param {string} dataType The data type.\n   * @returns {string} The data URI.\n   */\n  #createDataUri(response, dataType) {\n    // image type\n    let imageType = dataType;\n    if (!imageType || imageType === 'jpg') {\n      imageType = 'jpeg';\n    }\n    // create uri\n    const file = new Blob([response], {type: 'image/' + imageType});\n    return window.URL.createObjectURL(file);\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {ArrayBuffer|string} buffer The read data.\n   * @param {string|File} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    this.#aborted = false;\n    // create a DOM image\n    const image = new Image();\n    // triggered by ctx.drawImage\n    image.onload = (/*event*/) => {\n      try {\n        if (!this.#aborted) {\n          this.onprogress({\n            lengthComputable: true,\n            loaded: 100,\n            total: 100,\n            index: index,\n            source: origin\n          });\n          const data = getViewFromDOMImage(image, origin, index);\n          // only expecting one item\n          this.onloaditem(data);\n          this.onload(data);\n        }\n      } catch (error) {\n        this.onerror({\n          error: error,\n          source: origin\n        });\n      } finally {\n        this.onloadend({\n          source: origin\n        });\n      }\n    };\n    // storing values to pass them on\n    if (typeof buffer === 'string') {\n      // file case\n      image.src = buffer;\n    } else if (typeof origin === 'string') {\n      // url case\n      const ext = origin.split('.').pop().toLowerCase();\n      image.src = this.#createDataUri(buffer, ext);\n    }\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    this.#aborted = true;\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    return (typeof file.type !== 'undefined' &&\n      file.type.match('image.*'));\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'image/'\n      const isImage = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'image/');\n      };\n      return typeof options.requestHeaders.find(isImage) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    // extension\n    const ext = getFileExtension(urlObjext.pathname);\n    const hasImageExt = (ext === 'jpeg') || (ext === 'jpg') ||\n      (ext === 'png') || (ext === 'gif');\n    // content type (for wado url)\n    const contentType = urlObjext.searchParams.get('contentType');\n    const hasContentType = contentType !== null &&\n      typeof contentType !== 'undefined';\n    const hasImageContentType = (contentType === 'image/jpeg') ||\n      (contentType === 'image/png') ||\n      (contentType === 'image/gif');\n\n    return hasContentType ? hasImageContentType : hasImageExt;\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.DataURL;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class RawImageLoader","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {getViewFromDOMVideo} from '../image/domReader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Raw video loader.\n * url example (cors enabled):\n *   https://raw.githubusercontent.com/clappr/clappr/master/test/fixtures/SampleVideo_360x240_1mb.mp4\n */\nexport class RawVideoLoader {\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing? TODO...\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return true;\n  }\n\n  /**\n   * Create a Data URI from an HTTP request response.\n   *\n   * @param {object} response The HTTP request response.\n   * @param {string} dataType The data type.\n   * @returns {string} The data URI.\n   */\n  #createDataUri(response, dataType) {\n    // image data as string\n    const bytes = new Uint8Array(response);\n    let videoDataStr = '';\n    for (let i = 0; i < bytes.byteLength; ++i) {\n      videoDataStr += String.fromCharCode(bytes[i]);\n    }\n    // create uri\n    const uri = 'data:video/' + dataType +\n      ';base64,' + window.btoa(videoDataStr);\n    return uri;\n  }\n\n  /**\n   * Internal Data URI load.\n   *\n   * @param {object} buffer The read data.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // create a DOM video\n    const video = document.createElement('video');\n    if (typeof origin === 'string') {\n      // url case\n      const ext = origin.split('.').pop().toLowerCase();\n      video.src = this.#createDataUri(buffer, ext);\n    } else {\n      video.src = buffer;\n    }\n    // onload handler\n    video.onloadedmetadata = (event) => {\n      try {\n        getViewFromDOMVideo(event.target,\n          this.onloaditem, this.onload,\n          this.onprogress, this.onloadend,\n          origin, index);\n      } catch (error) {\n        this.onerror({\n          error: error,\n          source: origin\n        });\n        this.onloadend({\n          source: origin\n        });\n      }\n    };\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    return (typeof file.type !== 'undefined' &&\n      file.type.match('video.*'));\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'video/'\n      const isVideo = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'video/');\n      };\n      return typeof options.requestHeaders.find(isVideo) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'mp4') ||\n      (ext === 'ogg') ||\n      (ext === 'webm');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.DataURL;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   * when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   * when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class RawVideoLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\nimport {MemoryLoader} from './memoryLoader';\n\n/**\n * The zip library.\n *\n * @external JSZip\n * @see https://github.com/Stuk/jszip\n */\nimport JSZip from 'jszip';\n\n/**\n * ZIP data loader.\n */\nexport class ZipLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  #filename = '';\n  #files = [];\n  #zobjs = null;\n\n  /**\n   * JSZip.async callback\n   *\n   * @param {ArrayBuffer} content unzipped file image\n   * @param {object} origin The origin of the file.\n   * @param {number} index The data index.\n   */\n  #zipAsyncCallback(content, origin, index) {\n    this.#files.push({filename: this.#filename, data: content});\n\n    // sent un-ziped progress with the data index\n    // (max 50% to take into account the memory loading)\n    const unzipPercent = this.#files.length * 100 / this.#zobjs.length;\n    this.onprogress({\n      lengthComputable: true,\n      loaded: (unzipPercent / 2),\n      total: 100,\n      index: index,\n      item: {\n        loaded: unzipPercent,\n        total: 100,\n        source: origin\n      }\n    });\n\n    // recursively call until we have all the files\n    if (this.#files.length < this.#zobjs.length) {\n      const num = this.#files.length;\n      this.#filename = this.#zobjs[num].name;\n      this.#zobjs[num].async('arrayBuffer').then((content) => {\n        this.#zipAsyncCallback(content, origin, index);\n      });\n    } else {\n      const memoryIO = new MemoryLoader();\n      // memoryIO.onloadstart: nothing to do\n      memoryIO.onprogress = (progress) => {\n        // add 50% to take into account the un-zipping\n        progress.loaded = 50 + progress.loaded / 2;\n        // set data index\n        progress.index = index;\n        this.onprogress(progress);\n      };\n      memoryIO.onloaditem = this.onloaditem;\n      memoryIO.onload = this.onload;\n      memoryIO.onloadend = (event) => {\n        // reset loading flag\n        this.#isLoading = false;\n        // call listeners\n        this.onloadend(event);\n      };\n      memoryIO.onerror = this.onerror;\n      memoryIO.onabort = this.onabort;\n      // launch\n      memoryIO.load(this.#files);\n    }\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // send start event\n    this.onloadstart({\n      source: origin\n    });\n    // set loading flag\n    this.#isLoading = true;\n\n    JSZip.loadAsync(buffer).then((zip) => {\n      this.#files = [];\n      this.#zobjs = zip.file(/.*\\.dcm/);\n      // recursively load zip files into the files array\n      const num = this.#files.length;\n      this.#filename = this.#zobjs[num].name;\n      this.#zobjs[num].async('arrayBuffer').then((content) => {\n        this.#zipAsyncCallback(content, origin, index);\n      });\n    });\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    return (ext === 'zip');\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'application/zip'\n      const isZip = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'application/zip');\n      };\n      return typeof options.requestHeaders.find(isZip) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'zip');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem['Content-Type'] !== 'undefined') {\n      if (mem['Content-Type'].includes('zip')) {\n        return true;\n      }\n    }\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomDataLoader\n","import {DicomDataLoader} from './dicomDataLoader';\nimport {JSONTextLoader} from './jsonTextLoader';\nimport {MultipartLoader} from './multipartLoader';\nimport {RawImageLoader} from './rawImageLoader';\nimport {RawVideoLoader} from './rawVideoLoader';\nimport {ZipLoader} from './zipLoader';\n\nexport const loaderList = [\n  DicomDataLoader,\n  JSONTextLoader,\n  MultipartLoader,\n  RawImageLoader,\n  RawVideoLoader,\n  ZipLoader\n];\n","import {MultiProgressHandler} from '../utils/progress';\nimport {loaderList} from './loaderList';\n\n// file content types\nexport const fileContentTypes = {\n  Text: 0,\n  ArrayBuffer: 1,\n  DataURL: 2\n};\n\n/**\n * Files loader.\n */\nexport class FilesLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {Array}\n   */\n  #inputData = null;\n\n  /**\n   * Array of launched file readers.\n   *\n   * @type {Array}\n   */\n  #readers = [];\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {object} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // clear storage\n    this.#clearStoredReaders();\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store a launched reader.\n   *\n   * @param {object} reader The launched reader.\n   */\n  #storeReader(reader) {\n    this.#readers.push(reader);\n  }\n\n  /**\n   * Clear the stored readers.\n   *\n   */\n  #clearStoredReaders() {\n    this.#readers = [];\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is not the\n    //   general load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is not the\n    //   general load end)\n    // x2 to count for reader + load\n    if (this.#nLoadend === 2 * this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Augment a callback event with a srouce.\n   *\n   * @param {object} callback The callback to augment its event.\n   * @param {object} source The source to add to the event.\n   * @returns {eventFn} The augmented callback.\n   */\n  #augmentCallbackEvent(callback, source) {\n    return (event) => {\n      event.source = source;\n      callback(event);\n    };\n  }\n\n  /**\n   * Get a load handler for a data element.\n   *\n   * @param {object} loader The associated loader.\n   * @param {object} dataElement The data element.\n   * @param {number} i The index of the element.\n   * @returns {eventFn} A load handler.\n   */\n  #getLoadHandler(loader, dataElement, i) {\n    return (event) => {\n      loader.load(event.target.result, dataElement, i);\n    };\n  }\n\n\n  /**\n   * Load a list of files.\n   *\n   * @param {Array} data The list of files to load.\n   */\n  load(data) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadFile(dataElement)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(1);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this.#addLoad;\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for file: ' + dataElement.name);\n    }\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n\n      // check loader\n      if (!loader.canLoadFile(dataElement)) {\n        throw new Error('Input file of different type: ' + dataElement);\n      }\n\n      /**\n       * The file reader.\n       *\n       * @external FileReader\n       * @see https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n       */\n      const reader = new FileReader();\n      // store reader\n      this.#storeReader(reader);\n\n      // set reader callbacks\n      // reader.onloadstart: nothing to do\n      reader.onprogress = this.#augmentCallbackEvent(\n        mproghandler.getMonoProgressHandler(i, 0), dataElement);\n      reader.onload = this.#getLoadHandler(loader, dataElement, i);\n      reader.onloadend = this.#addLoadend;\n      reader.onerror = this.#augmentCallbackEvent(this.onerror, dataElement);\n      reader.onabort = this.#augmentCallbackEvent(this.onabort, dataElement);\n      // read\n      if (loader.loadFileAs() === fileContentTypes.Text) {\n        reader.readAsText(dataElement);\n      } else if (loader.loadFileAs() === fileContentTypes.DataURL) {\n        reader.readAsDataURL(dataElement);\n      } else if (loader.loadFileAs() === fileContentTypes.ArrayBuffer) {\n        reader.readAsArrayBuffer(dataElement);\n      }\n    }\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    // abort readers\n    for (let i = 0; i < this.#readers.length; ++i) {\n      // 0: EMPTY, 1: LOADING, 2: DONE\n      if (this.#readers[i].readyState === 1) {\n        this.#readers[i].abort();\n      }\n    }\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class FilesLoader\n","import {FilesLoader} from '../io/filesLoader';\nimport {MemoryLoader} from '../io/memoryLoader';\nimport {UrlsLoader} from '../io/urlsLoader';\n\n/**\n * Load controller.\n */\nexport class LoadController {\n\n  /**\n   * The default character set.\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * List of current loaders.\n   *\n   * @type {object}\n   */\n  #currentLoaders = {};\n\n  /**\n   * load counter.\n   *\n   * @type {number}\n   */\n  #counter = -1;\n\n  /**\n   * @param {string} defaultCharacterSet The default character set.\n   */\n  constructor(defaultCharacterSet) {\n    this.#defaultCharacterSet = defaultCharacterSet;\n  }\n\n  /**\n   * Get the next load id.\n   *\n   * @returns {number} The next id.\n   */\n  #getNextLoadId() {\n    ++this.#counter;\n    return this.#counter;\n  }\n\n  /**\n   * Load a list of files. Can be image files or a state file.\n   *\n   * @param {FileList} files The list of files to load.\n   */\n  loadFiles(files) {\n    // has been checked for emptiness.\n    const ext = files[0].name.split('.').pop().toLowerCase();\n    if (ext === 'json') {\n      this.#loadStateFile(files[0]);\n    } else {\n      this.#loadImageFiles(files);\n    }\n  }\n\n  /**\n   * Load a list of URLs. Can be image files or a state file.\n   *\n   * @param {Array} urls The list of urls to load.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  loadURLs(urls, options) {\n    // has been checked for emptiness.\n    const ext = urls[0].split('.').pop().toLowerCase();\n    if (ext === 'json') {\n      this.#loadStateUrl(urls[0], options);\n    } else {\n      this.#loadImageUrls(urls, options);\n    }\n  }\n\n  /**\n   * Load a list of ArrayBuffers.\n   *\n   * @param {Array} data The list of ArrayBuffers to load\n   *   in the form of [{name: \"\", filename: \"\", data: data}].\n   */\n  loadImageObject(data) {\n    // create IO\n    const memoryIO = new MemoryLoader();\n    // load data\n    this.#loadData(data, memoryIO, 'image');\n  }\n\n  /**\n   * Abort the current loaders.\n   */\n  abort() {\n    const keys = Object.keys(this.#currentLoaders);\n    for (let i = 0; i < keys.length; ++i) {\n      this.#currentLoaders[i].loader.abort();\n      delete this.#currentLoaders[i];\n    }\n  }\n\n  // private ----------------------------------------------------------------\n\n  /**\n   * Load a list of image files.\n   *\n   * @param {FileList} files The list of image files to load.\n   */\n  #loadImageFiles(files) {\n    // create IO\n    const fileIO = new FilesLoader();\n    fileIO.setDefaultCharacterSet(this.#defaultCharacterSet);\n    // load data\n    this.#loadData(files, fileIO, 'image');\n  }\n\n  /**\n   * Load a list of image URLs.\n   *\n   * @param {Array} urls The list of urls to load.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  #loadImageUrls(urls, options) {\n    // create IO\n    const urlIO = new UrlsLoader();\n    urlIO.setDefaultCharacterSet(this.#defaultCharacterSet);\n    // load data\n    this.#loadData(urls, urlIO, 'image', options);\n  }\n\n  /**\n   * Load a State file.\n   *\n   * @param {File} file The state file to load.\n   */\n  #loadStateFile(file) {\n    // create IO\n    const fileIO = new FilesLoader();\n    // load data\n    this.#loadData([file], fileIO, 'state');\n  }\n\n  /**\n   * Load a State url.\n   *\n   * @param {string} url The state url to load.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  #loadStateUrl(url, options) {\n    // create IO\n    const urlIO = new UrlsLoader();\n    // load data\n    this.#loadData([url], urlIO, 'state', options);\n  }\n\n  /**\n   * Load a list of data.\n   *\n   * @param {Array|FileList} data Array of data to load.\n   * @param {object} loader The data loader.\n   * @param {string} loadType The data load type: 'image' or 'state'.\n   * @param {object} [options] Options passed to the final loader.\n   */\n  #loadData(data, loader, loadType, options) {\n    const eventInfo = {\n      loadtype: loadType,\n    };\n\n    // load id\n    const loadId = this.#getNextLoadId();\n    eventInfo.loadid = loadId;\n\n    // set callbacks\n    loader.onloadstart = (event) => {\n      // store loader to allow abort\n      this.#currentLoaders[loadId] = {\n        loader: loader,\n        isFirstItem: true\n      };\n      // callback\n      this.#augmentCallbackEvent(this.onloadstart, eventInfo)(event);\n    };\n    loader.onprogress = this.#augmentCallbackEvent(this.onprogress, eventInfo);\n    loader.onloaditem = (event) => {\n      const eventInfoItem = {\n        loadtype: loadType,\n        loadid: loadId\n      };\n      if (typeof this.#currentLoaders[loadId] !== 'undefined') {\n        eventInfoItem.isfirstitem = this.#currentLoaders[loadId].isFirstItem;\n      }\n      // callback\n      this.#augmentCallbackEvent(this.onloaditem, eventInfoItem)(event);\n      // update loader\n      if (typeof this.#currentLoaders[loadId] !== 'undefined' &&\n        this.#currentLoaders[loadId].isFirstItem) {\n        this.#currentLoaders[loadId].isFirstItem = false;\n      }\n    };\n    loader.onload = this.#augmentCallbackEvent(this.onload, eventInfo);\n    loader.onloadend = (event) => {\n      // reset current loader\n      delete this.#currentLoaders[loadId];\n      // callback\n      this.#augmentCallbackEvent(this.onloadend, eventInfo)(event);\n    };\n    loader.onerror = this.#augmentCallbackEvent(this.onerror, eventInfo);\n    loader.onabort = this.#augmentCallbackEvent(this.onabort, eventInfo);\n    // launch load\n    try {\n      loader.load(data, options);\n    } catch (error) {\n      this.onerror({\n        error: error,\n        loadid: loadId\n      });\n      this.onloadend({\n        loadid: loadId\n      });\n      return;\n    }\n  }\n\n  /**\n   * Augment a callback event: adds loadtype to the event\n   *  passed to a callback.\n   *\n   * @param {object} callback The callback to update.\n   * @param {object} info Info object to append to the event.\n   * @returns {object} A function representing the modified callback.\n   */\n  #augmentCallbackEvent(callback, info) {\n    return function (event) {\n      const keys = Object.keys(info);\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        event[key] = info[key];\n      }\n      callback(event);\n    };\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when an item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class LoadController\n","import {ListenerHandler} from '../utils/listen';\nimport {mergeObjects} from '../utils/operator';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from '../image/image';\n/* eslint-enable no-unused-vars */\n\n/*\n * Data (list of {image, meta}) controller.\n */\nexport class DataController {\n\n  /**\n   * List of {image, meta}.\n   *\n   * @type {object}\n   */\n  #data = {};\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the length of the data storage.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return Object.keys(this.#data).length;\n  }\n\n  /**\n   * Reset the class: empty the data storage.\n   */\n  reset() {\n    this.#data = [];\n  }\n\n  /**\n   * Get a data at a given index.\n   *\n   * @param {number} index The index of the data.\n   * @returns {object} The data.\n   */\n  get(index) {\n    return this.#data[index];\n  }\n\n  /**\n   * Set the image at a given index.\n   *\n   * @param {number} index The index of the data.\n   * @param {Image} image The image to set.\n   */\n  setImage(index, image) {\n    this.#data[index].image = image;\n    // fire image set\n    this.#fireEvent({\n      type: 'imageset',\n      value: [image],\n      dataid: index\n    });\n    // listen to image change\n    image.addEventListener('imagechange', this.#getFireEvent(index));\n  }\n\n  /**\n   * Add a new data.\n   *\n   * @param {number} index The index of the data.\n   * @param {Image} image The image.\n   * @param {object} meta The image meta.\n   */\n  addNew(index, image, meta) {\n    if (typeof this.#data[index] !== 'undefined') {\n      throw new Error('Index already used in storage: ' + index);\n    }\n    // store the new image\n    this.#data[index] = {\n      image: image,\n      meta: meta\n    };\n    // listen to image change\n    image.addEventListener('imagechange', this.#getFireEvent(index));\n  }\n\n  /**\n   * Update the current data.\n   *\n   * @param {number} index The index of the data.\n   * @param {Image} image The image.\n   * @param {object} meta The image meta.\n   */\n  update(index, image, meta) {\n    const dataToUpdate = this.#data[index];\n\n    // add slice to current image\n    dataToUpdate.image.appendSlice(image);\n\n    // update meta data\n    // TODO add time support\n    let idKey = '';\n    if (typeof meta['00020010'] !== 'undefined') {\n      // dicom case, use 'InstanceNumber'\n      idKey = '00200013';\n    } else {\n      idKey = 'imageUid';\n    }\n    dataToUpdate.meta = mergeObjects(\n      dataToUpdate.meta,\n      meta,\n      idKey,\n      'value');\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get a fireEvent function that adds the input index\n   * to the event value.\n   *\n   * @param {number} index The data index.\n   * @returns {Function} A fireEvent function.\n   */\n  #getFireEvent(index) {\n    return (event) => {\n      event.dataid = index;\n      this.#fireEvent(event);\n    };\n  }\n\n} // ImageController class\n","import {arrayEquals} from './array';\n\n/**\n * Merge two similar objects.\n * Objects need to be in the form of:\n * <code>\n * {\n *   idKey: {valueKey: [0]},\n *   key0: {valueKey: [\"abc\"]},\n *   key1: {valueKey: [33]}\n * }\n * </code>\n * Merged objects will be in the form of:\n * <code>\n * {\n *   idKey: {valueKey: [0,1,2], merged: true},\n *   key0: {valueKey: {\n *     0: [\"abc\"],\n *     1: [\"def\"],\n *     2: [\"ghi\"]\n *   }},\n *   key1: {valueKey: {\n *     0: [33],\n *     1: [44],\n *     2: [55]\n *   }}\n * }\n * </code>\n *\n * @param {object} obj1 The first object, can be the result of a previous merge.\n * @param {object} obj2 The second object.\n * @param {string} idKey The key to use as index for duplicate values.\n * @param {string} valueKey The key to use to access object values.\n * @returns {object} The merged object.\n */\nexport function mergeObjects(obj1, obj2, idKey, valueKey) {\n  const res = {};\n  // check id key\n  if (!idKey) {\n    throw new Error('Cannot merge object with an undefined id key: ' + idKey);\n  } else {\n    if (!Object.prototype.hasOwnProperty.call(obj1, idKey)) {\n      throw new Error('Id key not found in first object while merging: ' +\n        idKey + ', obj: ' + obj1);\n    }\n    if (!Object.prototype.hasOwnProperty.call(obj2, idKey)) {\n      throw new Error('Id key not found in second object while merging: ' +\n        idKey + ', obj: ' + obj2);\n    }\n  }\n  // check value key\n  if (!valueKey) {\n    throw new Error('Cannot merge object with an undefined value key: ' +\n      valueKey);\n  }\n\n  // check if merged object\n  let mergedObj1 = false;\n  if (Object.prototype.hasOwnProperty.call(obj1[idKey], 'merged') &&\n    obj1[idKey].merged) {\n    mergedObj1 = true;\n  }\n  // handle the id part\n  if (!Object.prototype.hasOwnProperty.call(obj1[idKey], valueKey)) {\n    throw new Error('Id value not found in first object while merging: ' +\n      idKey + ', valueKey: ' + valueKey + ', ojb: ' + obj1);\n  }\n  if (!Object.prototype.hasOwnProperty.call(obj2[idKey], valueKey)) {\n    throw new Error('Id value not found in second object while merging: ' +\n      idKey + ', valueKey: ' + valueKey + ', ojb: ' + obj2);\n  }\n  let id1 = obj1[idKey][valueKey];\n  const id2 = obj2[idKey][valueKey][0];\n  // update id key\n  res[idKey] = obj1[idKey];\n  if (mergedObj1) {\n    // check if array does not include id2\n    for (let k = 0; k < id1.length; ++k) {\n      if (id1[k] === id2) {\n        throw new Error('The first object already contains id2: ' +\n          id2 + ', id1: ' + id1);\n      }\n    }\n    res[idKey][valueKey].push(id2);\n  } else {\n    id1 = id1[0];\n    if (id1 === id2) {\n      throw new Error('Cannot merge object with same ids: ' +\n        id1 + ', id2: ' + id2);\n    }\n    // update merge object\n    res[idKey][valueKey].push(id2);\n    res[idKey].merged = true;\n  }\n\n  // get keys\n  const keys1 = Object.keys(obj1);\n  // keys2 without duplicates of keys1\n  const keys2 = Object.keys(obj2).filter(function (item) {\n    return keys1.indexOf(item) < 0;\n  });\n  const keys = keys1.concat(keys2);\n\n  // loop through keys\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    if (key !== idKey) {\n      // first\n      let value1;\n      let subValue1;\n      if (Object.prototype.hasOwnProperty.call(obj1, key)) {\n        value1 = obj1[key];\n        if (Object.prototype.hasOwnProperty.call(value1, valueKey)) {\n          subValue1 = value1[valueKey];\n        }\n      }\n      // second\n      let value2;\n      let subValue2;\n      if (Object.prototype.hasOwnProperty.call(obj2, key)) {\n        value2 = obj2[key];\n        if (Object.prototype.hasOwnProperty.call(value2, valueKey)) {\n          subValue2 = value2[valueKey];\n        }\n      }\n      // result value\n      let value;\n      // use existing to copy properties\n      if (typeof value1 !== 'undefined') {\n        value = value1;\n      } else if (typeof value2 !== 'undefined') {\n        value = value2;\n      }\n      // create merge object if different values\n      if (!arrayEquals(subValue1, subValue2)) {\n        // add to merged object or create new\n        if (mergedObj1) {\n          if (Array.isArray(subValue1)) {\n            // merged object with repeated value\n            // copy it with the index list\n            value[valueKey] = {};\n            for (let j = 0; j < id1.length; ++j) {\n              value[valueKey][id1[j]] = subValue1;\n            }\n          } else {\n            value[valueKey] = subValue1;\n          }\n          // add obj2 value\n          value[valueKey][id2] = subValue2;\n        } else {\n          // create merge object\n          const newValue = {};\n          newValue[id1] = subValue1;\n          newValue[id2] = subValue2;\n          value[valueKey] = newValue;\n        }\n      }\n      // store value in result object\n      res[key] = value;\n    }\n  }\n  return res;\n}\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Scroll wheel class: provides a wheel event handler\n *   that scroll the corresponding data.\n */\nexport class ScrollWheel {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Accumulated wheel event deltaY.\n   *\n   * @type {number}\n   */\n  #wheelDeltaY = 0;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel(event) {\n    // deltaMode (deltaY values on my machine...):\n    // - 0 (DOM_DELTA_PIXEL): chrome, deltaY mouse scroll = 53\n    // - 1 (DOM_DELTA_LINE): firefox, deltaY mouse scroll = 6\n    // - 2 (DOM_DELTA_PAGE): ??\n    // TODO: check scroll event\n    let scrollMin = 52;\n    if (event.deltaMode === 1) {\n      scrollMin = 5.99;\n    }\n    this.#wheelDeltaY += event.deltaY;\n    if (Math.abs(this.#wheelDeltaY) < scrollMin) {\n      return;\n    } else {\n      this.#wheelDeltaY = 0;\n    }\n\n    const up = event.deltaY < 0 ? true : false;\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const imageSize = viewController.getImageSize();\n    if (imageSize.canScroll3D()) {\n      if (up) {\n        viewController.incrementScrollIndex();\n      } else {\n        viewController.decrementScrollIndex();\n      }\n    } else if (imageSize.moreThanOne(3)) {\n      if (up) {\n        viewController.incrementIndex(3);\n      } else {\n        viewController.decrementIndex(3);\n      }\n    }\n  }\n\n} // ScrollWheel class\n","import {ScrollWheel} from './scrollWheel';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {WindowLevel as WL, validateWindowWidth} from '../image/windowLevel';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * WindowLevel tool: handle window/level related events.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n *   tools: {WindowLevel: {}}\n * });\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('WindowLevel');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class WindowLevel {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // set start flag\n    this.#started = true;\n    // store initial position\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    // check start flag\n    if (!this.#started) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n\n    // difference to last position\n    const diffX = event._x - this.x0;\n    const diffY = this.y0 - event._y;\n    // data range\n    const range = viewController.getImageRescaledDataRange();\n    // 1/1000 seems to give reasonable results...\n    const pixelToIntensity = (range.max - range.min) * 0.01;\n\n    // calculate new window level\n    const center = parseInt(viewController.getWindowLevel().center, 10);\n    const width = parseInt(viewController.getWindowLevel().width, 10);\n    const windowCenter = center + Math.round(diffY * pixelToIntensity);\n    let windowWidth = width + Math.round(diffX * pixelToIntensity);\n    // bound window width\n    windowWidth = validateWindowWidth(windowWidth);\n\n    // add the manual preset to the view\n    viewController.addWindowLevelPresets({\n      manual: {\n        wl: [new WL(windowCenter, windowWidth)],\n        name: 'manual'\n      }\n    });\n    viewController.setWindowLevelPreset('manual');\n\n    // store position\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    // set start flag\n    if (this.#started) {\n      this.#started = false;\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    // treat as mouse up\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle double click event.\n   *\n   * @param {object} event The double click event.\n   */\n  dblclick = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\n    const viewController = viewLayer.getViewController();\n    const image = this.#app.getImage(viewLayer.getDataIndex());\n\n    // update view controller\n    viewController.setWindowLevel(\n      image.getRescaledValueAtIndex(\n        viewController.getCurrentIndex().getWithNew2D(\n          index.get(0),\n          index.get(1)\n        )\n      ),\n      parseInt(viewController.getWindowLevel().width, 10));\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'WindowLevel';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // WindowLevel class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {precisionRound} from '../utils/string';\nimport {ScrollWheel} from './scrollWheel';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Scroll class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n *   tools: {Scroll: {}}\n * });\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Scroll');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323707.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323563.dcm'\n * ]);\n * @example <caption>Example with slider</caption>\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n *   tools: {Scroll: {}}\n * });\n * // create range\n * const range = document.createElement('input');\n * range.type = 'range';\n * range.min = 0;\n * range.id = 'sliceRange';\n * document.body.appendChild(range);\n * // update app on slider change\n * range.oninput = function () {\n *   const lg = app.getLayerGroupByDivId('layerGroup0');\n *   const vc = lg.getActiveViewLayer().getViewController();\n *   const index = vc.getCurrentIndex();\n *   const values = index.getValues();\n *   values[2] = this.value;\n *   vc.setCurrentIndex(new Index(values));\n * }\n * // activate tool and update range max on load\n * app.addEventListener('load', function () {\n *   app.setTool('Scroll');\n *   const size = app.getImage(0).getGeometry().getSize();\n *   range.max = size.get(2) - 1;\n * });\n * // update slider on slice change (for ex via mouse wheel)\n * app.addEventListener('positionchange', function () {\n *   const lg = app.getLayerGroupByDivId('layerGroup0');\n *   const vc = lg.getActiveViewLayer().getViewController();\n *   range.value = vc.getCurrentIndex().get(2);\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323707.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323563.dcm'\n * ]);\n */\nexport class Scroll {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * Touch timer ID (created by setTimeout).\n   *\n   * @type {number}\n   */\n  #touchTimerID;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Option to show or not a value tooltip on mousemove.\n   *\n   * @type {boolean}\n   */\n  #displayTooltip = false;\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // optional tooltip\n    this.#removeTooltipDiv();\n\n    // stop viewer if playing\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    if (viewController.isPlaying()) {\n      viewController.stop();\n    }\n    // start flag\n    this.#started = true;\n    // first position\n    this.x0 = event._x;\n    this.y0 = event._y;\n\n    // update controller position\n    const planePos = viewLayer.displayToPlanePos(event._x, event._y);\n    const position = viewController.getPositionFromPlanePoint(\n      planePos.x, planePos.y);\n    viewController.setCurrentPosition(position);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      // optional tooltip\n      if (this.#displayTooltip) {\n        this.#showTooltip(event);\n      }\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    // difference to last Y position\n    const diffY = event._y - this.y0;\n    const yMove = (Math.abs(diffY) > 15);\n    // do not trigger for small moves\n    if (yMove && viewController.canScroll()) {\n      // update view controller\n      if (diffY > 0) {\n        viewController.decrementScrollIndex();\n      } else {\n        viewController.incrementScrollIndex();\n      }\n    }\n\n    // difference to last X position\n    const diffX = event._x - this.x0;\n    const xMove = (Math.abs(diffX) > 15);\n    // do not trigger for small moves\n    const imageSize = viewController.getImageSize();\n    if (xMove && imageSize.moreThanOne(3)) {\n      // update view controller\n      if (diffX > 0) {\n        viewController.incrementIndex(3);\n      } else {\n        viewController.decrementIndex(3);\n      }\n    }\n\n    // reset origin point\n    if (xMove) {\n      this.x0 = event._x;\n    }\n    if (yMove) {\n      this.y0 = event._y;\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    if (this.#started) {\n      // stop recording\n      this.#started = false;\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n    // remove possible tooltip div\n    this.#removeTooltipDiv();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // long touch triggers the dblclick\n    // @ts-ignore\n    this.#touchTimerID = setTimeout(this.dblclick, 500);\n    // call mouse equivalent\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // abort timer if move\n    if (this.#touchTimerID !== null) {\n      clearTimeout(this.#touchTimerID);\n      this.#touchTimerID = null;\n    }\n    // call mouse equivalent\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // abort timer\n    if (this.#touchTimerID !== null) {\n      clearTimeout(this.#touchTimerID);\n      this.#touchTimerID = null;\n    }\n    // call mouse equivalent\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Scroll';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Handle double click.\n   *\n   * @param {object} event The key down event.\n   */\n  dblclick = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    viewController.play();\n  };\n\n  /**\n   * Displays a tooltip in a temparary `span`.\n   * Works with css to hide/show the span only on mouse hover.\n   *\n   * @param {object} event The mouse move event.\n   */\n  #showTooltip(event) {\n    // remove previous div\n    this.#removeTooltipDiv();\n\n    // get image value at position\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToPlanePos(event._x, event._y);\n    const position = viewController.getPositionFromPlanePoint(\n      planePos.x, planePos.y);\n    const value = viewController.getRescaledImageValue(position);\n\n    // create\n    if (typeof value !== 'undefined') {\n      const span = document.createElement('span');\n      span.id = 'scroll-tooltip';\n      // place span in layer group to avoid upper layer opacity\n      const layerDiv = document.getElementById(viewLayer.getId());\n      layerDiv.parentElement.appendChild(span);\n      // position tooltip\n      span.style.left = (event._x + 10) + 'px';\n      span.style.top = (event._y + 10) + 'px';\n      let text = precisionRound(value, 3).toString();\n      if (typeof viewController.getPixelUnit() !== 'undefined') {\n        text += ' ' + viewController.getPixelUnit();\n      }\n      span.appendChild(document.createTextNode(text));\n    }\n  }\n\n  /**\n   * Remove the tooltip html div.\n   */\n  #removeTooltipDiv() {\n    const div = document.getElementById('scroll-tooltip');\n    if (div) {\n      div.remove();\n    }\n  }\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // remove tooltip html when deactivating\n    if (!_bool) {\n      this.#removeTooltipDiv();\n    }\n  }\n\n  /**\n   * Set the tool live features: disaply tooltip.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.displayTooltip !== 'undefined') {\n      this.#displayTooltip = features.displayTooltip;\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // Scroll class\n","/**\n * Namespace for translation function.\n * (in a namespace to allow for override from client)\n */\nexport const i18n = {\n\n  /**\n   * Get the translated text.\n   *\n   * @param {string} key The key to the text entry.\n   * @returns {string|undefined} The translated text.\n   */\n  t(key) {\n    // defaut expects something like 'unit.cm2'\n    const unit = {\n      mm: 'mm',\n      cm2: 'cm²',\n      degree: '°'\n    };\n    const props = key.split('.');\n    if (props.length !== 2) {\n      throw new Error('Unexpected translation key length.');\n    }\n    if (props[0] !== 'unit') {\n      throw new Error('Unexpected translation key prefix.');\n    }\n    return unit[props[1]];\n  }\n\n};\n","import {Point2D} from './point';\nimport {i18n} from '../utils/i18n';\n\n/**\n * Line shape.\n */\nexport class Line {\n\n  /**\n   * Line begin point.\n   *\n   * @type {Point2D}\n   */\n  #begin;\n\n  /**\n   * Line end point.\n   *\n   * @type {Point2D}\n   */\n  #end;\n\n  /**\n   * @param {Point2D} begin A Point2D representing the beginning\n   *   of the line.\n   * @param {Point2D} end A Point2D representing the end of the line.\n   */\n  constructor(begin, end) {\n    this.#begin = begin;\n    this.#end = end;\n  }\n\n  /**\n   * Get the begin point of the line.\n   *\n   * @returns {Point2D} The beginning point of the line.\n   */\n  getBegin() {\n    return this.#begin;\n  }\n\n  /**\n   * Get the end point of the line.\n   *\n   * @returns {Point2D} The ending point of the line.\n   */\n  getEnd() {\n    return this.#end;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Line} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getBegin().equals(rhs.getBegin()) &&\n      this.getEnd().equals(rhs.getEnd());\n  }\n\n  /**\n   * Get the line delta in the X direction.\n   *\n   * @returns {number} The delta in the X direction.\n   */\n  getDeltaX() {\n    return this.getEnd().getX() - this.getBegin().getX();\n  }\n\n  /**\n   * Get the line delta in the Y direction.\n   *\n   * @returns {number} The delta in the Y direction.\n   */\n  getDeltaY() {\n    return this.getEnd().getY() - this.getBegin().getY();\n  }\n\n  /**\n   * Get the length of the line.\n   *\n   * @returns {number} The length of the line.\n   */\n  getLength() {\n    return Math.sqrt(\n      this.getDeltaX() * this.getDeltaX() +\n      this.getDeltaY() * this.getDeltaY()\n    );\n  }\n\n  /**\n   * Get the length of the line according to a  spacing.\n   *\n   * @param {number} spacingX The X spacing.\n   * @param {number} spacingY The Y spacing.\n   * @returns {number} The length of the line with spacing\n   *  or null for null spacings.\n   */\n  getWorldLength(spacingX, spacingY) {\n    let wlen = null;\n    if (spacingX !== null && spacingY !== null) {\n      const dxs = this.getDeltaX() * spacingX;\n      const dys = this.getDeltaY() * spacingY;\n      wlen = Math.sqrt(dxs * dxs + dys * dys);\n    }\n    return wlen;\n  }\n\n  /**\n   * Get the mid point of the line.\n   *\n   * @returns {Point2D} The mid point of the line.\n   */\n  getMidpoint() {\n    return new Point2D(\n      (this.getBegin().getX() + this.getEnd().getX()) / 2,\n      (this.getBegin().getY() + this.getEnd().getY()) / 2\n    );\n  }\n\n  /**\n   * Get the slope of the line.\n   *\n   * @returns {number} The slope of the line.\n   */\n  getSlope() {\n    return this.getDeltaY() / this.getDeltaX();\n  }\n\n  /**\n   * Get the intercept of the line.\n   *\n   * @returns {number} The slope of the line.\n   */\n  getIntercept() {\n    return (\n      this.getEnd().getX() * this.getBegin().getY() -\n      this.getBegin().getX() * this.getEnd().getY()\n    ) / this.getDeltaX();\n  }\n\n  /**\n   * Get the inclination of the line.\n   *\n   * @returns {number} The inclination of the line.\n   */\n  getInclination() {\n    // tan(theta) = slope\n    const angle =\n      Math.atan2(this.getDeltaY(), this.getDeltaX()) * 180 / Math.PI;\n    // shift?\n    return 180 - angle;\n  }\n\n  /**\n   * Quantify a line according to view information.\n   *\n   * @param {object} viewController The associated view controller.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController) {\n    const quant = {};\n    // length\n    const spacing = viewController.get2DSpacing();\n    const length = this.getWorldLength(spacing[0], spacing[1]);\n    if (length !== null) {\n      quant.length = {value: length, unit: i18n.t('unit.mm')};\n    }\n    // return\n    return quant;\n  }\n\n} // Line class\n\n/**\n * Get the angle between two lines in degree.\n *\n * @param {Line} line0 The first line.\n * @param {Line} line1 The second line.\n * @returns {number} The angle.\n */\nexport function getAngle(line0, line1) {\n  const dx0 = line0.getDeltaX();\n  const dy0 = line0.getDeltaY();\n  const dx1 = line1.getDeltaX();\n  const dy1 = line1.getDeltaY();\n  // dot = ||a||*||b||*cos(theta)\n  const dot = dx0 * dx1 + dy0 * dy1;\n  // cross = ||a||*||b||*sin(theta)\n  const det = dx0 * dy1 - dy0 * dx1;\n  // tan = sin / cos\n  const angle = Math.atan2(det, dot) * 180 / Math.PI;\n  // complementary angle\n  // shift?\n  return 360 - (180 - angle);\n}\n\n/**\n * Get a perpendicular line to an input one.\n *\n * @param {Line} line The line to be perpendicular to.\n * @param {Point2D} point The middle point of the perpendicular line.\n * @param {number} length The length of the perpendicular line.\n * @returns {object} A perpendicular line.\n */\nexport function getPerpendicularLine(line, point, length) {\n  // begin point\n  let beginX = 0;\n  let beginY = 0;\n  // end point\n  let endX = 0;\n  let endY = 0;\n\n  // check slope:\n  // 0 -> horizontal\n  // Infinite -> vertical (a/Infinite = 0)\n  if (line.getSlope() !== 0) {\n    // a0 * a1 = -1\n    const slope = -1 / line.getSlope();\n    // y0 = a1*x0 + b1 -> b1 = y0 - a1*x0\n    const intercept = point.getY() - slope * point.getX();\n\n    // 1. (x - x0)^2 + (y - y0)^2 = d^2\n    // 2. a = (y - y0) / (x - x0) -> y = a*(x - x0) + y0\n    // ->  (x - x0)^2 + m^2 * (x - x0)^2 = d^2\n    // -> x = x0 +- d / sqrt(1+m^2)\n\n    // length is the distance between begin and end,\n    // point is half way between both -> d = length / 2\n    const dx = length / (2 * Math.sqrt(1 + slope * slope));\n\n    // begin point\n    beginX = point.getX() - dx;\n    beginY = slope * beginX + intercept;\n    // end point\n    endX = point.getX() + dx;\n    endY = slope * endX + intercept;\n  } else {\n    // horizontal input line -> perpendicular is vertical!\n    // begin point\n    beginX = point.getX();\n    beginY = point.getY() - length / 2;\n    // end point\n    endX = point.getX();\n    endY = point.getY() + length / 2;\n  }\n  // perpendicalar line\n  return new Line(\n    new Point2D(beginX, beginY),\n    new Point2D(endX, endY));\n}\n","import {Point2D} from '../math/point';\nimport {Line} from '../math/line';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * ZoomAndPan class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n *   tools: {ZoomAndPan: {}}\n * });\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('ZoomAndPan');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class ZoomAndPan {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    this.#started = true;\n    // first position\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle two touch down event.\n   *\n   * @param {object} event The touch down event.\n   */\n  twotouchdown = (event) => {\n    this.#started = true;\n    // store first point\n    this.x0 = event._x;\n    this.y0 = event._y;\n    // first line\n    const point0 = new Point2D(event._x, event._y);\n    const point1 = new Point2D(event._x1, event._y1);\n    this.line0 = new Line(point0, point1);\n    this.midPoint = this.line0.getMidpoint();\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    // calculate translation\n    const tx = event._x - this.x0;\n    const ty = event._y - this.y0;\n    // apply translation\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planeOffset = viewLayer.displayToPlaneScale(tx, ty);\n    const offset3D = viewController.getOffset3DFromPlaneOffset(planeOffset);\n    layerGroup.addTranslation({\n      x: offset3D.getX(),\n      y: offset3D.getY(),\n      z: offset3D.getZ()\n    });\n    layerGroup.draw();\n    // reset origin point\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle two touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  twotouchmove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    const point0 = new Point2D(event._x, event._y);\n    const point1 = new Point2D(event._x1, event._y1);\n    const newLine = new Line(point0, point1);\n    const lineRatio = newLine.getLength() / this.line0.getLength();\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    if (lineRatio === 1) {\n      // scroll mode\n      // difference  to last position\n      const diffY = event._y - this.y0;\n      // do not trigger for small moves\n      if (Math.abs(diffY) < 15) {\n        return;\n      }\n      // update view controller\n      if (viewController.canScroll()) {\n        if (diffY > 0) {\n          viewController.incrementScrollIndex();\n        } else {\n          viewController.decrementScrollIndex();\n        }\n      }\n    } else {\n      // zoom mode\n      const zoom = (lineRatio - 1) / 10;\n      if (Math.abs(zoom) % 0.1 <= 0.05) {\n        const planePos = viewLayer.displayToMainPlanePos(\n          this.midPoint.getX(), this.midPoint.getY());\n        const center = viewController.getPlanePositionFromPlanePoint(planePos);\n        layerGroup.addScale(zoom, center);\n        layerGroup.draw();\n      }\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    if (this.#started) {\n      // stop recording\n      this.#started = false;\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touches = event.targetTouches;\n    if (touches.length === 1) {\n      this.mousedown(event);\n    } else if (touches.length === 2) {\n      this.twotouchdown(event);\n    }\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touches = event.targetTouches;\n    if (touches.length === 1) {\n      this.mousemove(event);\n    } else if (touches.length === 2) {\n      this.twotouchmove(event);\n    }\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    const step = -event.deltaY / 500;\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToMainPlanePos(event._x, event._y);\n    const center = viewController.getPlanePositionFromPlanePoint(planePos);\n    layerGroup.addScale(step, center);\n    layerGroup.draw();\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'ZoomAndPan';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // ZoomAndPan class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ScrollWheel} from './scrollWheel';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Opacity class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n *   tools: {Opacity: {}}\n * });\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Opacity');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class Opacity {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // start flag\n    this.#started = true;\n    // first position\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n\n    // difference to last X position\n    const diffX = event._x - this.x0;\n    const xMove = (Math.abs(diffX) > 15);\n    // do not trigger for small moves\n    if (xMove) {\n      const layerDetails = getLayerDetailsFromEvent(event);\n      const layerGroup =\n        this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n      const viewLayer = layerGroup.getActiveViewLayer();\n      const op = viewLayer.getOpacity();\n      viewLayer.setOpacity(op + (diffX / 200));\n      viewLayer.draw();\n\n      // reset origin point\n      this.x0 = event._x;\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    if (this.#started) {\n      // stop recording\n      this.#started = false;\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // call mouse equivalent\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // call mouse equivalent\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // call mouse equivalent\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Opacity';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // Opacity class\n","/**\n * Get the minimum, maximum, mean and standard deviation\n * of an array of values.\n * Note: could use {@link https://github.com/tmcw/simple-statistics}.\n *\n * @param {Array} array The array of values to extract stats from.\n * @param {Array} flags A list of stat values to calculate.\n * @returns {object} A stats object.\n */\nexport function getStats(array, flags) {\n  if (includesFullStatsFlags(flags)) {\n    return getFullStats(array);\n  } else {\n    return getSimpleStats(array);\n  }\n}\n\n/**\n * Does the input flag list contain a full stat element?\n *\n * @param {Array} flags A list of stat values to calculate.\n * @returns {boolean} True if one of the flags is a full stat flag.\n */\nfunction includesFullStatsFlags(flags) {\n  return typeof flags !== 'undefined' &&\n    flags !== null &&\n    (flags.includes('median') ||\n    flags.includes('p25') ||\n    flags.includes('p75'));\n}\n\n/**\n * Get simple stats: minimum, maximum, mean and standard deviation\n * of an array of values.\n *\n * @param {Array} array The array of values to extract stats from.\n * @returns {object} A simple stats object.\n */\nfunction getSimpleStats(array) {\n  let min = array[0];\n  let max = min;\n  let sum = 0;\n  let sumSqr = 0;\n  let val = 0;\n  const length = array.length;\n  for (let i = 0; i < length; ++i) {\n    val = array[i];\n    if (val < min) {\n      min = val;\n    } else if (val > max) {\n      max = val;\n    }\n    sum += val;\n    sumSqr += val * val;\n  }\n\n  const mean = sum / length;\n  // see http://en.wikipedia.org/wiki/Algorithms_for_calculating_variance\n  const variance = sumSqr / length - mean * mean;\n  const stdDev = Math.sqrt(variance);\n\n  return {\n    min: min,\n    max: max,\n    mean: mean,\n    stdDev: stdDev\n  };\n}\n\n/**\n * Get full stats: minimum, maximum, mean, standard deviation, median, 25%\n * and 75% percentile of an array of values.\n *\n * @param {Array} array The array of values to extract stats from.\n * @returns {object} A full stats object.\n */\nfunction getFullStats(array) {\n  // get simple stats\n  const stats = getSimpleStats(array);\n\n  // sort array... can get slow...\n  array.sort(function (a, b) {\n    return a - b;\n  });\n\n  stats.median = getPercentile(array, 0.5);\n  stats.p25 = getPercentile(array, 0.25);\n  stats.p75 = getPercentile(array, 0.75);\n\n  return stats;\n}\n\n/**\n * Get an arrays' percentile. Uses linear interpolation for percentiles\n * that lie between data points.\n * see https://en.wikipedia.org/wiki/Percentile (second variant interpolation)\n *\n * @param {Array} array The sorted array of values.\n * @param {number} ratio The percentile ratio [0-1].\n * @returns {number} The percentile,\n */\nfunction getPercentile(array, ratio) {\n  // check input\n  if (array.length === 0) {\n    throw new Error('Empty array provided for percentile calculation.');\n  }\n  if (ratio < 0 || ratio > 1) {\n    throw new Error(\n      'Invalid ratio provided for percentile calculation: ' + ratio);\n  }\n  // return min for ratio=0 amd max for ratio=1\n  if (ratio === 0) {\n    return array[0];\n  } else if (ratio === 1) {\n    return array[array.length - 1];\n  }\n  // general case: interpolate between indices if needed\n  const i = (array.length - 1) * ratio;\n  const i0 = Math.floor(i);\n  const v0 = array[i0];\n  const v1 = array[i0 + 1];\n  return v0 + (v1 - v0) * (i - i0);\n}\n\n/**\n * Unique ID generator.\n * See {@link http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript}\n * and this {@link http://stackoverflow.com/a/13403498 answer}.\n *\n * @returns {string} A unique ID.\n */\nexport function guid() {\n  return Math.random().toString(36).substring(2, 15);\n}\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {logger} from '../utils/logger';\nimport {getShapeDisplayName, ChangeGroupCommand} from './drawCommands';\nimport {validateAnchorPosition} from './draw';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the default anchor shape.\n *\n * @param {number} x The X position.\n * @param {number} y The Y position.\n * @param {string} id The shape id.\n * @param {object} style The application style.\n * @returns {object} The default anchor shape.\n */\nexport function getDefaultAnchor(x, y, id, style) {\n  const radius = style.applyZoomScale(3);\n  const absRadius = {\n    x: Math.abs(radius.x),\n    y: Math.abs(radius.y)\n  };\n  return new Konva.Ellipse({\n    x: x,\n    y: y,\n    stroke: '#999',\n    fill: 'rgba(100,100,100,0.7',\n    strokeWidth: style.getStrokeWidth(),\n    strokeScaleEnabled: false,\n    radius: absRadius,\n    radiusX: absRadius.x,\n    radiusY: absRadius.y,\n    name: 'anchor',\n    id: id.toString(),\n    dragOnTop: false,\n    draggable: true,\n    visible: false\n  });\n}\n\n/**\n * Shape editor.\n */\nexport class ShapeEditor {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Shape factory list\n   *\n   * @type {object}\n   */\n  #shapeFactoryList = null;\n\n  /**\n   * Current shape factory.\n   *\n   * @type {object}\n   */\n  #currentFactory = null;\n\n  /**\n   * Edited shape.\n   *\n   * @type {object}\n   */\n  #shape = null;\n\n  /**\n   * Edited view controller. Used for quantification update.\n   *\n   * @type {object}\n   */\n  #viewController = null;\n\n  /**\n   * Active flag.\n   *\n   * @type {boolean}\n   */\n  #isActive = false;\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Draw event callback.\n   *\n   * @type {eventFn}\n   */\n  #drawEventCallback = null;\n\n  /**\n   * Set the tool options.\n   *\n   * @param {Array} list The list of shape classes.\n   */\n  setFactoryList(list) {\n    this.#shapeFactoryList = list;\n  }\n\n  /**\n   * Set the shape to edit.\n   *\n   * @param {object} inshape The shape to edit.\n   */\n  setShape(inshape) {\n    this.#shape = inshape;\n    if (this.#shape) {\n      // remove old anchors\n      this.#removeAnchors();\n      // find a factory for the input shape\n      const group = this.#shape.getParent();\n      const keys = Object.keys(this.#shapeFactoryList);\n      this.#currentFactory = null;\n      for (let i = 0; i < keys.length; ++i) {\n        const factory = new this.#shapeFactoryList[keys[i]];\n        if (factory.isFactoryGroup(group)) {\n          this.#currentFactory = factory;\n          // stop at first find\n          break;\n        }\n      }\n      if (this.#currentFactory === null) {\n        throw new Error('Could not find a factory to update shape.');\n      }\n      // add new anchors\n      this.#addAnchors();\n    }\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {object} vc The associated view controller.\n   */\n  setViewController(vc) {\n    this.#viewController = vc;\n  }\n\n  /**\n   * Get the edited shape.\n   *\n   * @returns {object} The edited shape.\n   */\n  getShape() {\n    return this.#shape;\n  }\n\n  /**\n   * Get the active flag.\n   *\n   * @returns {boolean} The active flag.\n   */\n  isActive() {\n    return this.#isActive;\n  }\n\n  /**\n   * Set the draw event callback.\n   *\n   * @param {object} callback The callback.\n   */\n  setDrawEventCallback(callback) {\n    this.#drawEventCallback = callback;\n  }\n\n  /**\n   * Enable the editor. Redraws the layer.\n   */\n  enable() {\n    this.#isActive = true;\n    if (this.#shape) {\n      this.#setAnchorsVisible(true);\n      if (this.#shape.getLayer()) {\n        this.#shape.getLayer().draw();\n      }\n    }\n  }\n\n  /**\n   * Disable the editor. Redraws the layer.\n   */\n  disable() {\n    this.#isActive = false;\n    if (this.#shape) {\n      this.#setAnchorsVisible(false);\n      if (this.#shape.getLayer()) {\n        this.#shape.getLayer().draw();\n      }\n    }\n  }\n\n  /**\n   * Reset the anchors.\n   */\n  resetAnchors() {\n    // remove previous controls\n    this.#removeAnchors();\n    // add anchors\n    this.#addAnchors();\n    // set them visible\n    this.#setAnchorsVisible(true);\n  }\n\n  /**\n   * Apply a function on all anchors.\n   *\n   * @param {object} func A f(shape) function.\n   */\n  #applyFuncToAnchors(func) {\n    if (this.#shape && this.#shape.getParent()) {\n      const anchors = this.#shape.getParent().find('.anchor');\n      anchors.forEach(func);\n    }\n  }\n\n  /**\n   * Set anchors visibility.\n   *\n   * @param {boolean} flag The visible flag.\n   */\n  #setAnchorsVisible(flag) {\n    this.#applyFuncToAnchors(function (anchor) {\n      anchor.visible(flag);\n    });\n  }\n\n  /**\n   * Set anchors active.\n   *\n   * @param {boolean} flag The active (on/off) flag.\n   */\n  setAnchorsActive(flag) {\n    let func = null;\n    if (flag) {\n      func = (anchor) => {\n        this.#setAnchorOn(anchor);\n      };\n    } else {\n      func = (anchor) => {\n        this.#setAnchorOff(anchor);\n      };\n    }\n    this.#applyFuncToAnchors(func);\n  }\n\n  /**\n   * Remove anchors.\n   */\n  #removeAnchors() {\n    this.#applyFuncToAnchors(function (anchor) {\n      anchor.remove();\n    });\n  }\n\n  /**\n   * Add the shape anchors.\n   */\n  #addAnchors() {\n    // exit if no shape or no layer\n    if (!this.#shape || !this.#shape.getLayer()) {\n      return;\n    }\n    // get shape group\n    const group = this.#shape.getParent();\n\n    // activate and add anchors to group\n    const anchors =\n      this.#currentFactory.getAnchors(this.#shape, this.#app.getStyle());\n    for (let i = 0; i < anchors.length; ++i) {\n      // set anchor on\n      this.#setAnchorOn(anchors[i]);\n      // add the anchor to the group\n      group.add(anchors[i]);\n    }\n  }\n\n  /**\n   * Get a simple clone of the input anchor.\n   *\n   * @param {object} anchor The anchor to clone.\n   * @returns {object} A clone of the input anchor.\n   */\n  #getClone(anchor) {\n    // create closure to properties\n    const parent = anchor.getParent();\n    const id = anchor.id();\n    const x = anchor.x();\n    const y = anchor.y();\n    // create clone object\n    const clone = {};\n    clone.getParent = function () {\n      return parent;\n    };\n    clone.id = function () {\n      return id;\n    };\n    clone.x = function () {\n      return x;\n    };\n    clone.y = function () {\n      return y;\n    };\n    return clone;\n  }\n\n  /**\n   * Set the anchor on listeners.\n   *\n   * @param {object} anchor The anchor to set on.\n   */\n  #setAnchorOn(anchor) {\n    let startAnchor = null;\n\n    // command name based on shape type\n    const shapeDisplayName = getShapeDisplayName(this.#shape);\n\n    // drag start listener\n    anchor.on('dragstart.edit', (event) => {\n      const anchor = event.target;\n      startAnchor = this.#getClone(anchor);\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // drag move listener\n    anchor.on('dragmove.edit', (event) => {\n      const anchor = event.target;\n      const layerDetails = getLayerDetailsFromEvent(event.evt);\n      const layerGroup =\n        this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      // validate the anchor position\n      validateAnchorPosition(drawLayer.getBaseSize(), anchor);\n      // update shape\n      this.#currentFactory.update(\n        anchor, this.#app.getStyle(), this.#viewController);\n      // redraw\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // drag end listener\n    anchor.on('dragend.edit', (event) => {\n      const anchor = event.target;\n      const endAnchor = this.#getClone(anchor);\n      // store the change command\n      const chgcmd = new ChangeGroupCommand(\n        shapeDisplayName,\n        this.#currentFactory,\n        startAnchor,\n        endAnchor,\n        anchor.getLayer(),\n        this.#viewController,\n        this.#app.getStyle()\n      );\n      chgcmd.onExecute = this.#drawEventCallback;\n      chgcmd.onUndo = this.#drawEventCallback;\n      chgcmd.execute();\n      this.#app.addToUndoStack(chgcmd);\n      // reset start anchor\n      startAnchor = endAnchor;\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // mouse down listener\n    anchor.on('mousedown touchstart', (event) => {\n      const anchor = event.target;\n      anchor.moveToTop();\n    });\n    // mouse over styling\n    anchor.on('mouseover.edit', (event) => {\n      const anchor = event.target;\n      // style is handled by the group\n      anchor.stroke('#ddd');\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n    });\n    // mouse out styling\n    anchor.on('mouseout.edit', (event) => {\n      const anchor = event.target;\n      // style is handled by the group\n      anchor.stroke('#999');\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n    });\n  }\n\n  /**\n   * Set the anchor off listeners.\n   *\n   * @param {object} anchor The anchor to set off.\n   */\n  #setAnchorOff(anchor) {\n    anchor.off('dragstart.edit');\n    anchor.off('dragmove.edit');\n    anchor.off('dragend.edit');\n    anchor.off('mousedown touchstart');\n    anchor.off('mouseover.edit');\n    anchor.off('mouseout.edit');\n  }\n\n} // class Editor\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  getEventOffset,\n  prompt,\n  customUI\n} from '../gui/generic';\nimport {Point2D} from '../math/point';\nimport {guid} from '../math/stats';\nimport {logger} from '../utils/logger';\nimport {replaceFlags} from '../utils/string';\nimport {\n  getShapeDisplayName,\n  DrawGroupCommand,\n  DeleteGroupCommand,\n  MoveGroupCommand\n} from './drawCommands';\nimport {\n  canNodeChangeColour,\n  isNodeNameShape\n} from '../app/drawController';\nimport {ScrollWheel} from './scrollWheel';\nimport {ShapeEditor} from './editor';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Style} from '../gui/style';\nimport {LayerGroup} from '../gui/layerGroup';\n/* eslint-enable no-unused-vars */\n\n/**\n * Draw Debug flag.\n */\nexport const DRAW_DEBUG = false;\n\n/**\n * Drawing tool.\n *\n * This tool is responsible for the draw layer group structure. The layout is:\n *\n * drawLayer\n * |_ positionGroup: name=\"position-group\", id=\"#2-0#_#3-1\"\"\n *    |_ shapeGroup: name=\"{shape name}-group\", id=\"#\"\n *       |_ shape: name=\"shape\"\n *       |_ label: name=\"label\"\n *       |_ extra: line tick, protractor arc...\n *\n * Discussion:\n * - posGroup > shapeGroup\n *    pro: slice/frame display: 1 loop\n *    cons: multi-slice shape splitted in positionGroups\n * - shapeGroup > posGroup\n *    pros: more logical\n *    cons: slice/frame display: 2 loops\n */\nexport class Draw {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * Shape editor.\n   *\n   * @type {object}\n   */\n  #shapeEditor;\n\n  /**\n   * Trash draw: a cross.\n   *\n   * @type {object}\n   */\n  #trash;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n    this.#shapeEditor = new ShapeEditor(app);\n    // associate the event listeners of the editor\n    //  with those of the draw tool\n    this.#shapeEditor.setDrawEventCallback(this.#fireEvent);\n\n    this.#style = app.getStyle();\n\n    // trash cross\n    this.#trash = new Konva.Group();\n    // first line of the cross\n    const trashLine1 = new Konva.Line({\n      points: [-10, -10, 10, 10],\n      stroke: 'red'\n    });\n    // second line of the cross\n    const trashLine2 = new Konva.Line({\n      points: [10, -10, -10, 10],\n      stroke: 'red'\n    });\n    this.#trash.width(20);\n    this.#trash.height(20);\n    this.#trash.add(trashLine1);\n    this.#trash.add(trashLine2);\n  }\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Shape factory list\n   *\n   * @type {object}\n   */\n  #shapeFactoryList = null;\n\n  /**\n   * Current shape factory.\n   *\n   * @type {object}\n   */\n  #currentFactory = null;\n\n  /**\n   * Draw command.\n   *\n   * @type {object}\n   */\n  #command = null;\n\n  /**\n   * Current shape group.\n   *\n   * @type {object}\n   */\n  #tmpShapeGroup = null;\n\n  /**\n   * Shape name.\n   *\n   * @type {string}\n   */\n  #shapeName;\n\n  /**\n   * List of points.\n   *\n   * @type {Array}\n   */\n  #points = [];\n\n  /**\n   * Last selected point.\n   *\n   * @type {object}\n   */\n  #lastPoint = null;\n\n  /**\n   * Active shape, ie shape with mouse over.\n   *\n   * @type {object}\n   */\n  #activeShapeGroup;\n\n  /**\n   * Original mouse cursor.\n   *\n   * @type {string}\n   */\n  #originalCursor;\n\n  /**\n   * Mouse cursor.\n   *\n   * @type {string}\n   */\n  #mouseOverCursor = 'pointer';\n\n  /**\n   * Event listeners.\n   */\n  #listeners = {};\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // exit if a draw was started (handle at mouse move or up)\n    if (this.#started) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const drawLayer = layerGroup.getActiveDrawLayer();\n\n    // determine if the click happened in an existing shape\n    const stage = drawLayer.getKonvaStage();\n    const kshape = stage.getIntersection({\n      x: event._x,\n      y: event._y\n    });\n\n    // update scale\n    this.#style.setZoomScale(stage.scale());\n\n    if (kshape) {\n      const group = kshape.getParent();\n      const selectedShape = group.find('.shape')[0];\n      // reset editor if click on other shape\n      // (and avoid anchors mouse down)\n      if (selectedShape && selectedShape !== this.#shapeEditor.getShape()) {\n        this.#shapeEditor.disable();\n        this.#shapeEditor.setShape(selectedShape);\n        const viewController =\n          layerGroup.getActiveViewLayer().getViewController();\n        this.#shapeEditor.setViewController(viewController);\n        this.#shapeEditor.enable();\n      }\n    } else {\n      // disable edition\n      this.#shapeEditor.disable();\n      this.#shapeEditor.setShape(null);\n      this.#shapeEditor.setViewController(null);\n      // start storing points\n      this.#started = true;\n      // set factory\n      this.#currentFactory = new this.#shapeFactoryList[this.#shapeName]();\n      // clear array\n      this.#points = [];\n      // store point\n      const viewLayer = layerGroup.getActiveViewLayer();\n      const pos = viewLayer.displayToPlanePos(event._x, event._y);\n      this.#lastPoint = new Point2D(pos.x, pos.y);\n      this.#points.push(this.#lastPoint);\n    }\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    // exit if not started draw\n    if (!this.#started) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const pos = viewLayer.displayToPlanePos(event._x, event._y);\n\n    // draw line to current pos\n    if (Math.abs(pos.x - this.#lastPoint.getX()) > 0 ||\n      Math.abs(pos.y - this.#lastPoint.getY()) > 0) {\n      // clear last added point from the list (but not the first one)\n      // if it was marked as temporary\n      if (this.#points.length !== 1 &&\n        typeof this.#points[this.#points.length - 1].tmp !== 'undefined') {\n        this.#points.pop();\n      }\n      // current point\n      this.#lastPoint = new Point2D(pos.x, pos.y);\n      // mark it as temporary\n      this.#lastPoint.tmp = true;\n      // add it to the list\n      this.#points.push(this.#lastPoint);\n      // update points\n      this.#onNewPoints(this.#points, layerGroup);\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} event The mouse up event.\n   */\n  mouseup = (event) => {\n    // exit if not started draw\n    if (!this.#started) {\n      return;\n    }\n    // exit if no points\n    if (this.#points.length === 0) {\n      logger.warn('Draw mouseup but no points...');\n      return;\n    }\n\n    // do we have all the needed points\n    if (this.#points.length === this.#currentFactory.getNPoints()) {\n      // store points\n      const layerDetails = getLayerDetailsFromEvent(event);\n      const layerGroup =\n        this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n      this.#onFinalPoints(this.#points, layerGroup);\n      // reset flag\n      this.#started = false;\n    } else {\n      // remove temporary flag\n      if (typeof this.#points[this.#points.length - 1].tmp !== 'undefined') {\n        delete this.#points[this.#points.length - 1].tmp;\n      }\n    }\n  };\n\n  /**\n   * Handle double click event: some tools use it to finish interaction.\n   *\n   * @param {object} event The double click event.\n   */\n  dblclick = (event) => {\n    // only end by double click undefined NPoints\n    if (typeof this.#currentFactory.getNPoints() !== 'undefined') {\n      return;\n    }\n    // exit if not started draw\n    if (!this.#started) {\n      return;\n    }\n    // exit if no points\n    if (this.#points.length === 0) {\n      logger.warn('Draw dblclick but no points...');\n      return;\n    }\n\n    // store points\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    this.#onFinalPoints(this.#points, layerGroup);\n    // reset flag\n    this.#started = false;\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // exit if not started draw\n    if (!this.#started) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const pos = viewLayer.displayToPlanePos(event._x, event._y);\n\n    if (Math.abs(pos.x - this.#lastPoint.getX()) > 0 ||\n      Math.abs(pos.y - this.#lastPoint.getY()) > 0) {\n      // clear last added point from the list (but not the first one)\n      if (this.#points.length !== 1) {\n        this.#points.pop();\n      }\n      // current point\n      this.#lastPoint = new Point2D(pos.x, pos.y);\n      // add current one to the list\n      this.#points.push(this.#lastPoint);\n      // allow for anchor points\n      if (this.#points.length < this.#currentFactory.getNPoints()) {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n          this.#points.push(this.#lastPoint);\n        }, this.#currentFactory.getTimeout());\n      }\n      // update points\n      this.#onNewPoints(this.#points, layerGroup);\n    }\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    this.dblclick(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    // call app handler if we are not in the middle of a draw\n    if (!this.#started) {\n      event.context = 'Draw';\n      this.#app.onKeydown(event);\n    }\n    let konvaLayer;\n\n    // press delete or backspace key\n    if ((event.key === 'Delete' ||\n      event.key === 'Backspace') &&\n      this.#shapeEditor.isActive()) {\n      // get shape\n      const shapeGroup = this.#shapeEditor.getShape().getParent();\n      konvaLayer = shapeGroup.getLayer();\n      const shapeDisplayName = getShapeDisplayName(\n        shapeGroup.getChildren(isNodeNameShape)[0]);\n      // delete command\n      const delcmd = new DeleteGroupCommand(shapeGroup,\n        shapeDisplayName, konvaLayer);\n      delcmd.onExecute = this.#fireEvent;\n      delcmd.onUndo = this.#fireEvent;\n      delcmd.execute();\n      this.#app.addToUndoStack(delcmd);\n    }\n\n    // escape key: exit shape creation\n    if (event.key === 'Escape' && this.#tmpShapeGroup !== null) {\n      konvaLayer = this.#tmpShapeGroup.getLayer();\n      // reset temporary shape group\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n      // reset flag and points\n      this.#started = false;\n      this.#points = [];\n      // redraw\n      konvaLayer.draw();\n    }\n  };\n\n  /**\n   * Update the current draw with new points.\n   *\n   * @param {Array} tmpPoints The array of new points.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #onNewPoints(tmpPoints, layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n\n    // remove temporary shape draw\n    if (this.#tmpShapeGroup) {\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n    }\n\n    // create shape group\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    this.#tmpShapeGroup = this.#currentFactory.create(\n      tmpPoints, this.#style, viewController);\n    // do not listen during creation\n    const shape = this.#tmpShapeGroup.getChildren(isNodeNameShape)[0];\n    shape.listening(false);\n    konvaLayer.listening(false);\n    // draw shape\n    konvaLayer.add(this.#tmpShapeGroup);\n    konvaLayer.draw();\n  }\n\n  /**\n   * Create the final shape from a point list.\n   *\n   * @param {Array} finalPoints The array of points.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #onFinalPoints(finalPoints, layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n\n    // reset temporary shape group\n    if (this.#tmpShapeGroup) {\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n    }\n\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const drawController =\n      layerGroup.getActiveDrawLayer().getDrawController();\n\n    // create final shape\n    const finalShapeGroup = this.#currentFactory.create(\n      finalPoints, this.#style, viewController);\n    finalShapeGroup.id(guid());\n\n    // get the position group\n    const posGroup = drawController.getCurrentPosGroup();\n    // add shape group to position group\n    posGroup.add(finalShapeGroup);\n\n    // re-activate layer\n    konvaLayer.listening(true);\n    // draw shape command\n    this.#command = new DrawGroupCommand(\n      finalShapeGroup, this.#shapeName, konvaLayer);\n    this.#command.onExecute = this.#fireEvent;\n    this.#command.onUndo = this.#fireEvent;\n    // execute it\n    this.#command.execute();\n    // save it in undo stack\n    this.#app.addToUndoStack(this.#command);\n\n    // activate shape listeners\n    this.setShapeOn(finalShapeGroup, layerGroup);\n  }\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} flag The flag to activate or not.\n   */\n  activate(flag) {\n    // reset shape display properties\n    this.#shapeEditor.disable();\n    this.#shapeEditor.setShape(null);\n    this.#shapeEditor.setViewController(null);\n    // get the current draw layer\n    const layerGroup = this.#app.getActiveLayerGroup();\n    this.#activateCurrentPositionShapes(flag, layerGroup);\n    // listen to app change to update the draw layer\n    if (flag) {\n      // store cursor\n      this.#originalCursor = document.body.style.cursor;\n      // TODO: merge with drawController.activateDrawLayer?\n      this.#app.addEventListener('positionchange', () => {\n        this.#updateDrawLayer(layerGroup);\n      });\n      // same for colour\n      this.setFeatures({lineColour: this.#style.getLineColour()});\n    } else {\n      // reset shape and cursor\n      this.#resetActiveShapeGroup();\n      // reset local var\n      this.#originalCursor = undefined;\n      // remove listeners\n      this.#app.removeEventListener('positionchange', () => {\n        this.#updateDrawLayer(layerGroup);\n      });\n    }\n  }\n\n  /**\n   * Update the draw layer.\n   *\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #updateDrawLayer(layerGroup) {\n    // activate the shape at current position\n    this.#activateCurrentPositionShapes(true, layerGroup);\n  }\n\n  /**\n   * Activate shapes at current position.\n   *\n   * @param {boolean} visible Set the draw layer visible or not.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #activateCurrentPositionShapes(visible, layerGroup) {\n    const drawController =\n      layerGroup.getActiveDrawLayer().getDrawController();\n\n    // get shape groups at the current position\n    const shapeGroups =\n      drawController.getCurrentPosGroup().getChildren();\n\n    // set shape display properties\n    if (visible) {\n      // activate shape listeners\n      shapeGroups.forEach((group) => {\n        this.setShapeOn(group, layerGroup);\n      });\n    } else {\n      // de-activate shape listeners\n      shapeGroups.forEach((group) => {\n        this.#setShapeOff(group);\n      });\n    }\n    // draw\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n    if (shapeGroups.length !== 0) {\n      konvaLayer.listening(true);\n    }\n    konvaLayer.draw();\n  }\n\n  /**\n   * Set shape group off properties.\n   *\n   * @param {object} shapeGroup The shape group to set off.\n   */\n  #setShapeOff(shapeGroup) {\n    // mouse styling\n    shapeGroup.off('mouseover');\n    shapeGroup.off('mouseout');\n    // drag\n    shapeGroup.draggable(false);\n    shapeGroup.off('dragstart.draw');\n    shapeGroup.off('dragmove.draw');\n    shapeGroup.off('dragend.draw');\n    shapeGroup.off('dblclick');\n  }\n\n  /**\n   * Get the real position from an event.\n   * TODO: use layer method?\n   *\n   * @param {object} index The input index as {x,y}.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   * @returns {object} The real position in the image as {x,y}.\n   */\n  #getRealPosition(index, layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const stage = drawLayer.getKonvaStage();\n    return {\n      x: stage.offset().x + index.x / stage.scale().x,\n      y: stage.offset().y + index.y / stage.scale().y\n    };\n  }\n\n  /**\n   * Reset the active shape group and mouse cursor to their original state.\n   */\n  #resetActiveShapeGroup() {\n    if (typeof this.#originalCursor !== 'undefined') {\n      document.body.style.cursor = this.#originalCursor;\n    }\n    if (typeof this.#activeShapeGroup !== 'undefined') {\n      this.#activeShapeGroup.opacity(1);\n      const colour = this.#style.getLineColour();\n      this.#activeShapeGroup.getChildren(canNodeChangeColour).forEach(\n        function (ashape) {\n          ashape.stroke(colour);\n        }\n      );\n    }\n  }\n\n  /**\n   * Set shape group on properties.\n   *\n   * @param {object} shapeGroup The shape group to set on.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  setShapeOn(shapeGroup, layerGroup) {\n    // adapt shape and cursor when mouse over\n    const mouseOnShape = () => {\n      document.body.style.cursor = this.#mouseOverCursor;\n      shapeGroup.opacity(0.75);\n    };\n    // mouse over event hanlding\n    shapeGroup.on('mouseover', () => {\n      // save local vars\n      this.#activeShapeGroup = shapeGroup;\n      // adapt shape\n      mouseOnShape();\n    });\n    // mouse out event hanlding\n    shapeGroup.on('mouseout', () => {\n      // reset shape\n      this.#resetActiveShapeGroup();\n      // reset local vars\n      this.#activeShapeGroup = undefined;\n    });\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n\n    // make it draggable\n    shapeGroup.draggable(true);\n    // cache drag start position\n    let dragStartPos = {x: shapeGroup.x(), y: shapeGroup.y()};\n\n    // command name based on shape type\n    const shapeDisplayName = getShapeDisplayName(\n      shapeGroup.getChildren(isNodeNameShape)[0]);\n\n    let colour = null;\n\n    // drag start event handling\n    shapeGroup.on('dragstart.draw', (/*event*/) => {\n      // store colour\n      colour = shapeGroup.getChildren(isNodeNameShape)[0].stroke();\n      // display trash\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      const stage = drawLayer.getKonvaStage();\n      const scale = stage.scale();\n      const invscale = {x: 1 / scale.x, y: 1 / scale.y};\n      this.#trash.x(stage.offset().x + (stage.width() / (2 * scale.x)));\n      this.#trash.y(stage.offset().y + (stage.height() / (15 * scale.y)));\n      this.#trash.scale(invscale);\n      konvaLayer.add(this.#trash);\n      // deactivate anchors to avoid events on null shape\n      this.#shapeEditor.setAnchorsActive(false);\n      // draw\n      konvaLayer.draw();\n    });\n    // drag move event handling\n    shapeGroup.on('dragmove.draw', (event) => {\n      const group = event.target;\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      // validate the group position\n      validateGroupPosition(drawLayer.getBaseSize(), group);\n      // get appropriate factory\n      let factory;\n      const keys = Object.keys(this.#shapeFactoryList);\n      for (let i = 0; i < keys.length; ++i) {\n        factory = new this.#shapeFactoryList[keys[i]];\n        if (factory.isFactoryGroup(shapeGroup)) {\n          // stop at first find\n          break;\n        }\n      }\n      if (typeof factory === 'undefined') {\n        throw new Error('Cannot find factory to update quantification.');\n      }\n      // update quantification if possible\n      if (typeof factory.updateQuantification !== 'undefined') {\n        const vc = layerGroup.getActiveViewLayer().getViewController();\n        factory.updateQuantification(group, vc);\n      }\n      // highlight trash when on it\n      const offset = getEventOffset(event.evt)[0];\n      const eventPos = this.#getRealPosition(offset, layerGroup);\n      const trashHalfWidth = this.#trash.width() * this.#trash.scaleX() / 2;\n      const trashHalfHeight = this.#trash.height() * this.#trash.scaleY() / 2;\n      if (Math.abs(eventPos.x - this.#trash.x()) < trashHalfWidth &&\n        Math.abs(eventPos.y - this.#trash.y()) < trashHalfHeight) {\n        this.#trash.getChildren().forEach(function (tshape) {\n          tshape.stroke('orange');\n        });\n        // change the group shapes colour\n        shapeGroup.getChildren(canNodeChangeColour).forEach(\n          function (ashape) {\n            ashape.stroke('red');\n          });\n      } else {\n        this.#trash.getChildren().forEach(function (tshape) {\n          tshape.stroke('red');\n        });\n        // reset the group shapes colour\n        shapeGroup.getChildren(canNodeChangeColour).forEach(\n          function (ashape) {\n            if (typeof ashape.stroke !== 'undefined') {\n              ashape.stroke(colour);\n            }\n          });\n      }\n      // draw\n      konvaLayer.draw();\n    });\n    // drag end event handling\n    shapeGroup.on('dragend.draw', (event) => {\n      const group = event.target;\n      // remove trash\n      this.#trash.remove();\n      // activate(false) will also trigger a dragend.draw\n      if (typeof event === 'undefined' ||\n        typeof event.evt === 'undefined') {\n        return;\n      }\n      const pos = {x: group.x(), y: group.y()};\n      // delete case\n      const offset = getEventOffset(event.evt)[0];\n      const eventPos = this.#getRealPosition(offset, layerGroup);\n      const trashHalfWidth = this.#trash.width() * this.#trash.scaleX() / 2;\n      const trashHalfHeight = this.#trash.height() * this.#trash.scaleY() / 2;\n      if (Math.abs(eventPos.x - this.#trash.x()) < trashHalfWidth &&\n        Math.abs(eventPos.y - this.#trash.y()) < trashHalfHeight) {\n        // compensate for the drag translation\n        group.x(dragStartPos.x);\n        group.y(dragStartPos.y);\n        // disable editor\n        this.#shapeEditor.disable();\n        this.#shapeEditor.setShape(null);\n        this.#shapeEditor.setViewController(null);\n        // reset colour\n        shapeGroup.getChildren(canNodeChangeColour).forEach(\n          function (ashape) {\n            ashape.stroke(colour);\n          });\n        // reset cursor\n        document.body.style.cursor = this.#originalCursor;\n        // delete command\n        const delcmd = new DeleteGroupCommand(group,\n          shapeDisplayName, konvaLayer);\n        delcmd.onExecute = this.#fireEvent;\n        delcmd.onUndo = this.#fireEvent;\n        delcmd.execute();\n        this.#app.addToUndoStack(delcmd);\n      } else {\n        // save drag move\n        const translation = {\n          x: pos.x - dragStartPos.x,\n          y: pos.y - dragStartPos.y\n        };\n        if (translation.x !== 0 || translation.y !== 0) {\n          const mvcmd = new MoveGroupCommand(group,\n            shapeDisplayName, translation, konvaLayer);\n          mvcmd.onExecute = this.#fireEvent;\n          mvcmd.onUndo = this.#fireEvent;\n          this.#app.addToUndoStack(mvcmd);\n\n          // the move is handled by Konva, trigger an event manually\n          this.#fireEvent({\n            type: 'drawmove',\n            id: group.id()\n          });\n        }\n        // reset anchors\n        this.#shapeEditor.setAnchorsActive(true);\n        this.#shapeEditor.resetAnchors();\n      }\n      // draw\n      konvaLayer.draw();\n      // reset start position\n      dragStartPos = {x: group.x(), y: group.y()};\n    });\n    // double click handling: update label\n    shapeGroup.on('dblclick', (event) => {\n      const group = event.target;\n      // get the label object for this shape\n      const label = group.findOne('Label');\n      // should just be one\n      if (typeof label === 'undefined') {\n        throw new Error('Could not find the shape label.');\n      }\n      const ktext = label.getText();\n      // id for event\n      const groupId = group.id();\n\n      const onSaveCallback = (meta) => {\n        // store meta\n        ktext.meta = meta;\n        // update text expression\n        ktext.setText(replaceFlags(\n          ktext.meta.textExpr, ktext.meta.quantification));\n        label.setVisible(ktext.meta.textExpr.length !== 0);\n\n        // trigger event\n        this.#fireEvent({\n          type: 'drawchange',\n          id: groupId\n        });\n        // draw\n        konvaLayer.draw();\n      };\n\n      // call client dialog if defined\n      if (typeof customUI.openRoiDialog !== 'undefined') {\n        /**\n         * Open a dialogue to edit roi data. Defaults to undefined.\n         *\n         * @param {object} data The roi data.\n         * @param {Function} callback The callback to launch on dialogue exit.\n         */\n        customUI.openRoiDialog(ktext.meta, onSaveCallback);\n      } else {\n        // simple prompt for the text expression\n        const textExpr = prompt('Label', ktext.meta.textExpr);\n        if (textExpr !== null) {\n          ktext.meta.textExpr = textExpr;\n          onSaveCallback(ktext.meta);\n        }\n      }\n    });\n  }\n\n  /**\n   * Set the tool configuration options.\n   *\n   * @param {object} options The list of shape names amd classes.\n   */\n  setOptions(options) {\n    // save the options as the shape factory list\n    this.#shapeFactoryList = options;\n    // pass them to the editor\n    this.#shapeEditor.setFactoryList(options);\n  }\n\n  /**\n   * Get the type of tool options: here 'factory' since the shape\n   * list contains factories to create each possible shape.\n   *\n   * @returns {string} The type.\n   */\n  getOptionsType() {\n    return 'factory';\n  }\n\n  /**\n   * Set the tool live features: shape colour and shape name.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n    if (typeof features.shapeName !== 'undefined') {\n      // check if we have it\n      if (!this.hasShape(features.shapeName)) {\n        throw new Error('Unknown shape: \\'' + features.shapeName + '\\'');\n      }\n      this.#shapeName = features.shapeName;\n    }\n    if (typeof features.mouseOverCursor !== 'undefined') {\n      this.#mouseOverCursor = features.mouseOverCursor;\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return [\n      'drawcreate', 'drawchange', 'drawmove', 'drawdelete', 'drawlabelchange'\n    ];\n  }\n\n  /**\n   * Add an event listener on the app.\n   *\n   * @param {string} type The event type.\n   * @param {object} listener The method associated with the provided\n   *   event type.\n   */\n  addEventListener(type, listener) {\n    if (typeof this.#listeners[type] === 'undefined') {\n      this.#listeners[type] = [];\n    }\n    this.#listeners[type].push(listener);\n  }\n\n  /**\n   * Remove an event listener from the app.\n   *\n   * @param {string} type The event type.\n   * @param {object} listener The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, listener) {\n    if (typeof this.#listeners[type] === 'undefined') {\n      return;\n    }\n    for (let i = 0; i < this.#listeners[type].length; ++i) {\n      if (this.#listeners[type][i] === listener) {\n        this.#listeners[type].splice(i, 1);\n      }\n    }\n  }\n\n  // Private Methods -----------------------------------------------------------\n\n  /**\n   * Fire an event: call all associated listeners.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    if (typeof this.#listeners[event.type] === 'undefined') {\n      return;\n    }\n    for (let i = 0; i < this.#listeners[event.type].length; ++i) {\n      this.#listeners[event.type][i](event);\n    }\n  };\n\n  /**\n   * Check if the shape is in the shape list.\n   *\n   * @param {string} name The name of the shape.\n   * @returns {boolean} True if there is a factory for the shape.\n   */\n  hasShape(name) {\n    return typeof this.#shapeFactoryList[name] !== 'undefined';\n  }\n\n} // Draw class\n\n/**\n * Get the minimum position in a groups' anchors.\n *\n * @param {object} group The group that contains anchors.\n * @returns {object|undefined} The minimum position as {x,y}.\n */\nfunction getAnchorMin(group) {\n  const anchors = group.find('.anchor');\n  if (anchors.length === 0) {\n    return undefined;\n  }\n  let minX = anchors[0].x();\n  let minY = anchors[0].y();\n  for (let i = 0; i < anchors.length; ++i) {\n    minX = Math.min(minX, anchors[i].x());\n    minY = Math.min(minY, anchors[i].y());\n  }\n\n  return {x: minX, y: minY};\n}\n\n/**\n * Bound a node position.\n *\n * @param {object} node The node to bound the position.\n * @param {object} min The minimum position as {x,y}.\n * @param {object} max The maximum position as {x,y}.\n * @returns {boolean} True if the position was corrected.\n */\nfunction boundNodePosition(node, min, max) {\n  let changed = false;\n  if (node.x() < min.x) {\n    node.x(min.x);\n    changed = true;\n  } else if (node.x() > max.x) {\n    node.x(max.x);\n    changed = true;\n  }\n  if (node.y() < min.y) {\n    node.y(min.y);\n    changed = true;\n  } else if (node.y() > max.y) {\n    node.y(max.y);\n    changed = true;\n  }\n  return changed;\n}\n\n/**\n * Validate a group position.\n *\n * @param {object} stageSize The stage size {x,y}.\n * @param {object} group The group to evaluate.\n * @returns {boolean} True if the position was corrected.\n */\nfunction validateGroupPosition(stageSize, group) {\n  // if anchors get mixed, width/height can be negative\n  const shape = group.getChildren(isNodeNameShape)[0];\n  const anchorMin = getAnchorMin(group);\n  // handle no anchor: when dragging the label, the editor does\n  //   not activate\n  if (typeof anchorMin === 'undefined') {\n    return null;\n  }\n\n  const min = {\n    x: -anchorMin.x,\n    y: -anchorMin.y\n  };\n  const max = {\n    x: stageSize.x -\n      (anchorMin.x + Math.abs(shape.width())),\n    y: stageSize.y -\n      (anchorMin.y + Math.abs(shape.height()))\n  };\n\n  return boundNodePosition(group, min, max);\n}\n\n/**\n * Validate an anchor position.\n *\n * @param {object} stageSize The stage size {x,y}.\n * @param {object} anchor The anchor to evaluate.\n * @returns {boolean} True if the position was corrected.\n */\nexport function validateAnchorPosition(stageSize, anchor) {\n  const group = anchor.getParent();\n\n  const min = {\n    x: -group.x(),\n    y: -group.y()\n  };\n  const max = {\n    x: stageSize.x - group.x(),\n    y: stageSize.y - group.y()\n  };\n\n  return boundNodePosition(anchor, min, max);\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Region Of Interest shape.\n * Note: should be a closed path.\n */\nexport class ROI {\n\n  /**\n   * List of points.\n   *\n   * @type {Array}\n   */\n  #points = [];\n\n  /**\n   * Get a point of the list at a given index.\n   *\n   * @param {number} index The index of the point to get\n   *   (beware, no size check).\n   * @returns {Point2D} The Point2D at the given index.\n   */\n  getPoint(index) {\n    return this.#points[index];\n  }\n\n  /**\n   * Get the length of the point list.\n   *\n   * @returns {number} The length of the point list.\n   */\n  getLength() {\n    return this.#points.length;\n  }\n\n  /**\n   * Add a point to the ROI.\n   *\n   * @param {Point2D} point The Point2D to add.\n   */\n  addPoint(point) {\n    this.#points.push(point);\n  }\n\n  /**\n   * Add points to the ROI.\n   *\n   * @param {Array} rhs The array of POints2D to add.\n   */\n  addPoints(rhs) {\n    this.#points = this.#points.concat(rhs);\n  }\n\n} // ROI class\n","import {ROI} from '../math/roi';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultRoiLabelText = '';\n\n/**\n * ROI factory.\n */\nexport class RoiFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'roi-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number|undefined} The number of points.\n   */\n  getNPoints() {\n    // undefined to end with double click\n    return undefined;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 100;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a roi shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the line.\n   * @param {object} style The drawing style.\n   * @param {object} _viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(points, style, _viewController) {\n    // physical shape\n    const roi = new ROI();\n    // add input points to the ROI\n    roi.addPoints(points);\n    // points stored the Konvajs way\n    const arr = [];\n    for (let i = 0; i < roi.getLength(); ++i) {\n      arr.push(roi.getPoint(i).getX());\n      arr.push(roi.getPoint(i).getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: arr,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape',\n      closed: true\n    });\n\n    // text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // todo: allow overrride?\n    // if (typeof roiLabelText !== 'undefined') {\n    //   textExpr = roiLabelText;\n    // } else {\n    textExpr = defaultRoiLabelText;\n    // }\n    ktext.setText(textExpr);\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n\n    // label\n    const klabel = new Konva.Label({\n      x: roi.getPoint(0).getX(),\n      y: roi.getPoint(0).getY() + style.scale(10),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a roi shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    for (let i = 0; i < points.length; i = i + 2) {\n      const px = points[i] + shape.x();\n      const py = points[i + 1] + shape.y();\n      const name = i.toString();\n      anchors.push(getDefaultAnchor(\n        px, py, name, style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Update a roi shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kroi = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n\n    // update self\n    const point = group.getChildren(function (node) {\n      return node.id() === anchor.id();\n    })[0];\n    point.x(anchor.x());\n    point.y(anchor.y());\n    // update the roi point and compensate for possible drag\n    // (the anchor id is the index of the point in the list)\n    const points = kroi.points();\n    points[anchor.id()] = anchor.x() - kroi.x();\n    points[anchor.id() + 1] = anchor.y() - kroi.y();\n    kroi.points(points);\n\n    // update text\n    const ktext = klabel.getText();\n    ktext.setText(ktext.meta.textExpr);\n    // update position\n    const textPos = {\n      x: points[0] + kroi.x(),\n      y: points[1] + kroi.y() + style.scale(10)\n    };\n    klabel.position(textPos);\n  }\n\n} // class RoiFactory\n","import {DrawGroupCommand} from '../tools/drawCommands';\nimport {RoiFactory} from '../tools/roi';\nimport {guid} from '../math/stats';\nimport {Point2D} from '../math/point';\nimport {Style} from '../gui/style';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * The magic wand namespace.\n *\n * @external MagicWand\n * @see https://github.com/Tamersoul/magic-wand-js\n */\nimport MagicWand from 'magic-wand-tool';\n\n/**\n * Floodfill painting tool.\n */\nexport class Floodfill {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #blurRadius = 5;\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #simplifyTolerant = 0;\n\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #simplifyCount = 2000;\n\n  /**\n   * Canvas info\n   *\n   * @type {object}\n   */\n  #imageInfo = null;\n\n  /**\n   * Object created by MagicWand lib containing border points\n   *\n   * @type {object}\n   */\n  #mask = null;\n\n  /**\n   * threshold default tolerance of the tool border\n   *\n   * @type {number}\n   */\n  #initialthreshold = 10;\n\n  /**\n   * threshold tolerance of the tool border\n   *\n   * @type {number}\n   */\n  #currentthreshold = null;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n  /**\n   * Draw command.\n   *\n   * @type {object}\n   */\n  #command = null;\n\n  /**\n   * Current shape group.\n   *\n   * @type {object}\n   */\n  #shapeGroup = null;\n\n  /**\n   * Coordinates of the fist mousedown event.\n   *\n   * @type {object}\n   */\n  #initialpoint;\n\n  /**\n   * Floodfill border.\n   *\n   * @type {object}\n   */\n  #border = null;\n\n  /**\n   * List of parent points.\n   *\n   * @type {Array}\n   */\n  #parentPoints = [];\n\n  /**\n   * Assistant variable to paint border on all slices.\n   *\n   * @type {boolean}\n   */\n  #extender = false;\n\n  /**\n   * Timeout for painting on mousemove.\n   *\n   */\n  #painterTimeout;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style = new Style();\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Set extend option for painting border on all slices.\n   *\n   * @param {boolean} bool The option to set\n   */\n  setExtend(bool) {\n    this.#extender = bool;\n  }\n\n  /**\n   * Get extend option for painting border on all slices.\n   *\n   * @returns {boolean} The actual value of of the variable to use Floodfill\n   *   on museup.\n   */\n  getExtend() {\n    return this.#extender;\n  }\n\n  /**\n   * Get (x, y) coordinates referenced to the canvas\n   *\n   * @param {object} event The original event.\n   * @returns {object} The coordinates as a {x,y}.\n   */\n  #getCoord = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\n    return {\n      x: index.get(0),\n      y: index.get(1)\n    };\n  };\n\n  /**\n   * Calculate border.\n   *\n   * @param {object} points The input points.\n   * @param {number} threshold The threshold of the floodfill.\n   * @param {boolean} simple Return first points or a list.\n   * @returns {Array} The parent points.\n   */\n  #calcBorder(points, threshold, simple) {\n\n    this.#parentPoints = [];\n    const image = {\n      data: this.#imageInfo.data,\n      width: this.#imageInfo.width,\n      height: this.#imageInfo.height,\n      bytes: 4\n    };\n\n    this.#mask = MagicWand.floodFill(image, points.x, points.y, threshold);\n    this.#mask = MagicWand.gaussBlurOnlyBorder(this.#mask, this.#blurRadius);\n\n    let cs = MagicWand.traceContours(this.#mask);\n    cs = MagicWand.simplifyContours(\n      cs, this.#simplifyTolerant, this.#simplifyCount);\n\n    if (cs.length > 0 && cs[0].points[0].x) {\n      if (simple) {\n        return cs[0].points;\n      }\n      for (let j = 0, icsl = cs[0].points.length; j < icsl; j++) {\n        this.#parentPoints.push(new Point2D(\n          cs[0].points[j].x,\n          cs[0].points[j].y\n        ));\n      }\n      return this.#parentPoints;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Paint Floodfill.\n   *\n   * @param {object} point The start point.\n   * @param {number} threshold The border threshold.\n   * @param {object} layerGroup The origin layer group.\n   * @returns {boolean} False if no border.\n   */\n  #paintBorder(point, threshold, layerGroup) {\n    // Calculate the border\n    this.#border = this.#calcBorder(point, threshold, false);\n    // Paint the border\n    if (this.#border) {\n      const factory = new RoiFactory();\n      this.#shapeGroup = factory.create(this.#border, this.#style);\n      this.#shapeGroup.id(guid());\n\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      const drawController = drawLayer.getDrawController();\n\n      // get the position group\n      const posGroup = drawController.getCurrentPosGroup();\n      // add shape group to position group\n      posGroup.add(this.#shapeGroup);\n\n      // draw shape command\n      this.#command = new DrawGroupCommand(this.#shapeGroup, 'floodfill',\n        drawLayer.getKonvaLayer());\n      this.#command.onExecute = this.#fireEvent;\n      this.#command.onUndo = this.#fireEvent;\n      // // draw\n      this.#command.execute();\n      // save it in undo stack\n      this.#app.addToUndoStack(this.#command);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Create Floodfill in all the prev and next slices while border is found\n   *\n   * @param {number} ini The first slice to extend to.\n   * @param {number} end The last slice to extend to.\n   * @param {object} layerGroup The origin layer group.\n   */\n  extend(ini, end, layerGroup) {\n    //avoid errors\n    if (!this.#initialpoint) {\n      throw '\\'initialpoint\\' not found. User must click before use extend!';\n    }\n    // remove previous draw\n    if (this.#shapeGroup) {\n      this.#shapeGroup.destroy();\n    }\n\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n\n    const pos = viewController.getCurrentIndex();\n    const imageSize = viewController.getImageSize();\n    const threshold = this.#currentthreshold || this.#initialthreshold;\n\n    // Iterate over the next images and paint border on each slice.\n    for (let i = pos.get(2),\n      len = end\n        ? end : imageSize.get(2);\n      i < len; i++) {\n      if (!this.#paintBorder(this.#initialpoint, threshold, layerGroup)) {\n        break;\n      }\n      viewController.incrementIndex(2);\n    }\n    viewController.setCurrentPosition(pos);\n\n    // Iterate over the prev images and paint border on each slice.\n    for (let j = pos.get(2), jl = ini ? ini : 0; j > jl; j--) {\n      if (!this.#paintBorder(this.#initialpoint, threshold, layerGroup)) {\n        break;\n      }\n      viewController.decrementIndex(2);\n    }\n    viewController.setCurrentPosition(pos);\n  }\n\n  /**\n   * Modify tolerance threshold and redraw ROI.\n   *\n   * @param {number} modifyThreshold The new threshold.\n   * @param {object} shape The shape to update.\n   */\n  modifyThreshold(modifyThreshold, shape) {\n\n    if (!shape && this.#shapeGroup) {\n      shape = this.#shapeGroup.getChildren(function (node) {\n        return node.name() === 'shape';\n      })[0];\n    } else {\n      throw 'No shape found';\n    }\n\n    clearTimeout(this.#painterTimeout);\n    this.#painterTimeout = setTimeout(() => {\n      this.#border = this.#calcBorder(\n        this.#initialpoint, modifyThreshold, true);\n      if (!this.#border) {\n        return false;\n      }\n      const arr = [];\n      for (let i = 0, bl = this.#border.length; i < bl; ++i) {\n        arr.push(this.#border[i].x);\n        arr.push(this.#border[i].y);\n      }\n      shape.setPoints(arr);\n      const shapeLayer = shape.getLayer();\n      shapeLayer.draw();\n      this.onThresholdChange(modifyThreshold);\n    }, 100);\n  }\n\n  /**\n   * Event fired when threshold change\n   *\n   * @param {number} _value Current threshold\n   */\n  onThresholdChange(_value) {\n    // Defaults do nothing\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const drawLayer = layerGroup.getActiveDrawLayer();\n\n    this.#imageInfo = viewLayer.getImageData();\n    if (!this.#imageInfo) {\n      logger.error('No image found');\n      return;\n    }\n\n    // update zoom scale\n    this.#style.setZoomScale(\n      drawLayer.getKonvaLayer().getAbsoluteScale());\n\n    this.#started = true;\n    this.#initialpoint = this.#getCoord(event);\n    this.#paintBorder(this.#initialpoint, this.#initialthreshold, layerGroup);\n    this.onThresholdChange(this.#initialthreshold);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    const movedpoint = this.#getCoord(event);\n    this.#currentthreshold = Math.round(Math.sqrt(\n      Math.pow((this.#initialpoint.x - movedpoint.x), 2) +\n      Math.pow((this.#initialpoint.y - movedpoint.y), 2)) / 2);\n    this.#currentthreshold = this.#currentthreshold < this.#initialthreshold\n      ? this.#initialthreshold\n      : this.#currentthreshold - this.#initialthreshold;\n    this.modifyThreshold(this.#currentthreshold);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    this.#started = false;\n    // TODO: re-activate\n    // if (this.#extender) {\n    //   const layerDetails = getLayerDetailsFromEvent(event);\n    //   const layerGroup =\n    //     this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    //   this.extend(layerGroup);\n    // }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // treat as mouse down\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // treat as mouse move\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // treat as mouse up\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Floodfill';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool The flag to activate or not.\n   */\n  activate(bool) {\n    if (bool) {\n      // init with the app window scale\n      this.#style.setBaseScale(this.#app.getBaseScale());\n      // set the default to the first in the list\n      this.setFeatures({shapeColour: this.#style.getLineColour()});\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['drawcreate', 'drawchange', 'drawmove', 'drawdelete'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Set the tool live features: shape colour.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n  }\n\n} // Floodfill class\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Path shape.\n */\nexport class Path {\n\n  /**\n   * @param {Array} [inputPointArray] The list of Point2D that make\n   *   the path (optional).\n   * @param {Array} [inputControlPointIndexArray] The list of control\n   *  point of path, as indexes (optional).\n   * Note: first and last point do not need to be equal.\n   */\n  constructor(inputPointArray, inputControlPointIndexArray) {\n    /**\n     * List of points.\n     *\n     * @type {Array}\n     */\n    this.pointArray = inputPointArray ? inputPointArray.slice() : [];\n    /**\n     * List of control points.\n     *\n     * @type {Array}\n     */\n    this.controlPointIndexArray = inputControlPointIndexArray\n      ? inputControlPointIndexArray.slice() : [];\n  }\n\n  /**\n   * Get a point of the list.\n   *\n   * @param {number} index The index of the point\n   *   to get (beware, no size check).\n   * @returns {Point2D} The Point2D at the given index.\n   */\n  getPoint(index) {\n    return this.pointArray[index];\n  }\n\n  /**\n   * Is the given point a control point.\n   *\n   * @param {Point2D} point The Point2D to check.\n   * @returns {boolean} True if a control point.\n   */\n  isControlPoint(point) {\n    const index = this.pointArray.indexOf(point);\n    if (index !== -1) {\n      return this.controlPointIndexArray.indexOf(index) !== -1;\n    } else {\n      throw new Error('Error: isControlPoint called with not in list point.');\n    }\n  }\n\n  /**\n   * Get the length of the path.\n   *\n   * @returns {number} The length of the path.\n   */\n  getLength() {\n    return this.pointArray.length;\n  }\n\n  /**\n   * Add a point to the path.\n   *\n   * @param {Point2D} point The Point2D to add.\n   */\n  addPoint(point) {\n    this.pointArray.push(point);\n  }\n\n  /**\n   * Add a control point to the path.\n   *\n   * @param {Point2D} point The Point2D to make a control point.\n   */\n  addControlPoint(point) {\n    const index = this.pointArray.indexOf(point);\n    if (index !== -1) {\n      this.controlPointIndexArray.push(index);\n    } else {\n      throw new Error(\n        'Cannot mark a non registered point as control point.');\n    }\n  }\n\n  /**\n   * Add points to the path.\n   *\n   * @param {Array} newPointArray The list of Point2D to add.\n   */\n  addPoints(newPointArray) {\n    this.pointArray = this.pointArray.concat(newPointArray);\n  }\n\n  /**\n   * Append a Path to this one.\n   *\n   * @param {Path} other The Path to append.\n   */\n  appenPath(other) {\n    const oldSize = this.pointArray.length;\n    this.pointArray = this.pointArray.concat(other.pointArray);\n    const indexArray = [];\n    for (let i = 0; i < other.controlPointIndexArray.length; ++i) {\n      indexArray[i] = other.controlPointIndexArray[i] + oldSize;\n    }\n    this.controlPointIndexArray =\n      this.controlPointIndexArray.concat(indexArray);\n  }\n\n} // Path class\n","/**\n * Circular Bucket Queue.\n *\n * Returns input'd points in sorted order. All operations run in roughly O(1)\n * time (for input with small cost values), but it has a strict requirement:\n *\n * If the most recent point had a cost of c, any points added should have a cost\n * c' in the range c <= c' <= c + (capacity - 1).\n */\nexport class BucketQueue {\n\n  /**\n   * @param {number} bits Number of bits.\n   * @param {Function} cost_functor The cost functor.\n   */\n  constructor(bits, cost_functor) {\n    this.bucketCount = 1 << bits; // # of buckets = 2^bits\n    this.mask = this.bucketCount - 1; // 2^bits - 1 = index mask\n    this.size = 0;\n\n    this.loc = 0; // Current index in bucket list\n    // Cost defaults to item value\n    this.cost = (typeof (cost_functor) !== 'undefined')\n      ? cost_functor : function (item) {\n        return item;\n      };\n    this.buckets = this.buildArray(this.bucketCount);\n  }\n\n  push(item) {\n    // Prepend item to the list in the appropriate bucket\n    const bucket = this.getBucket(item);\n    item.next = this.buckets[bucket];\n    this.buckets[bucket] = item;\n\n    this.size++;\n  }\n\n  pop() {\n    if (this.size === 0) {\n      throw new Error('Cannot pop, bucketQueue is empty.');\n    }\n\n    // Find first empty bucket\n    while (this.buckets[this.loc] === null) {\n      this.loc = (this.loc + 1) % this.bucketCount;\n    }\n\n    // All items in bucket have same cost, return the first one\n    const ret = this.buckets[this.loc];\n    this.buckets[this.loc] = ret.next;\n    ret.next = null;\n\n    this.size--;\n    return ret;\n  }\n\n  // TODO: needs at least two items...\n  remove(item) {\n    // Tries to remove item from queue. Returns true on success, false otherwise\n    if (!item) {\n      return false;\n    }\n\n    // To find node, go to bucket and search through unsorted list.\n    const bucket = this.getBucket(item);\n    let node = this.buckets[bucket];\n\n    while (node !== null &&\n      !(node.next !== null &&\n      item.x === node.next.x &&\n      item.y === node.next.y)) {\n      node = node.next;\n    }\n\n    if (node === null) {\n      // Item not in list, ergo item not in queue\n      return false;\n    } else {\n      // Found item, do standard list node deletion\n      node.next = node.next.next;\n\n      this.size--;\n      return true;\n    }\n  }\n\n  isEmpty() {\n    return this.size === 0;\n  }\n\n  getBucket(item) {\n    // Bucket index is the masked cost\n    return this.cost(item) & this.mask;\n  }\n\n  buildArray(newSize) {\n    // Create array and initialze pointers to null\n    const buckets = new Array(newSize);\n\n    for (let i = 0; i < buckets.length; i++) {\n      buckets[i] = null;\n    }\n\n    return buckets;\n  }\n\n} // class BucketQueue\n","import {BucketQueue} from './bucketQueue';\n\n// Pre-created to reduce allocation in inner loops\nconst __twothirdpi = (2 / (3 * Math.PI));\n\n/**\n * @param {Array} data The input data.\n * @param {number} width The width of the output.\n * @param {number} height The height of the output.\n * @returns {object} A greyscale object\n */\nfunction computeGreyscale(data, width, height) {\n  // Returns 2D augmented array containing greyscale data\n  // Greyscale values found by averaging colour channels\n  // Input should be in a flat RGBA array, with values between 0 and 255\n  const greyscale = {\n    data: []\n  };\n\n  // Compute actual values\n  for (let y = 0; y < height; y++) {\n    greyscale.data[y] = [];\n\n    for (let x = 0; x < width; x++) {\n      const p = (y * width + x) * 4;\n      greyscale.data[y][x] = (data[p] + data[p + 1] + data[p + 2]) / (3 * 255);\n    }\n  }\n\n  // Augment with convenience functions\n  greyscale.dx = function (x, y) {\n    if (x + 1 === this.data[y].length) {\n      // If we're at the end, back up one\n      x--;\n    }\n    return this.data[y][x + 1] - this.data[y][x];\n  };\n\n  greyscale.dy = function (x, y) {\n    if (y + 1 === this.data.length) {\n      // If we're at the end, back up one\n      y--;\n    }\n    return this.data[y][x] - this.data[y + 1][x];\n  };\n\n  greyscale.gradMagnitude = function (x, y) {\n    const dx = this.dx(x, y);\n    const dy = this.dy(x, y);\n    return Math.sqrt(dx * dx + dy * dy);\n  };\n\n  greyscale.laplace = function (x, y) {\n    // Laplacian of Gaussian\n    let lap = -16 * this.data[y][x];\n    lap += this.data[y - 2][x];\n    lap += this.data[y - 1][x - 1] +\n      2 * this.data[y - 1][x] +\n      this.data[y - 1][x + 1];\n    lap += this.data[y][x - 2] +\n      2 * this.data[y][x - 1] +\n      2 * this.data[y][x + 1] +\n      this.data[y][x + 2];\n    lap += this.data[y + 1][x - 1] +\n      2 * this.data[y + 1][x] +\n      this.data[y + 1][x + 1];\n    lap += this.data[y + 2][x];\n\n    return lap;\n  };\n\n  return greyscale;\n}\n\n/**\n * @param {object} greyscale The input greyscale-\n * @returns {object} A gradient object\n */\nfunction computeGradient(greyscale) {\n  // Returns a 2D array of gradient magnitude values for greyscale. The values\n  // are scaled between 0 and 1, and then flipped, so that it works as a cost\n  // function.\n  const gradient = [];\n\n  let max = 0; // Maximum gradient found, for scaling purposes\n\n  let x = 0;\n  let y = 0;\n\n  for (y = 0; y < greyscale.data.length - 1; y++) {\n    gradient[y] = [];\n\n    for (x = 0; x < greyscale.data[y].length - 1; x++) {\n      gradient[y][x] = greyscale.gradMagnitude(x, y);\n      max = Math.max(gradient[y][x], max);\n    }\n\n    gradient[y][greyscale.data[y].length - 1] =\n      gradient[y][greyscale.data.length - 2];\n  }\n\n  gradient[greyscale.data.length - 1] = [];\n  for (let i = 0; i < gradient[0].length; i++) {\n    gradient[greyscale.data.length - 1][i] =\n      gradient[greyscale.data.length - 2][i];\n  }\n\n  // Flip and scale.\n  for (y = 0; y < gradient.length; y++) {\n    for (x = 0; x < gradient[y].length; x++) {\n      // @ts-ignore\n      gradient[y][x] = 1 - (gradient[y][x] / max);\n    }\n  }\n\n  return gradient;\n}\n\n/**\n * @param {object} greyscale The input greyscale.\n * @returns {object} A laplace object.\n */\nfunction computeLaplace(greyscale) {\n  // Returns a 2D array of Laplacian of Gaussian values\n  const laplace = [];\n\n  // Make the edges low cost here.\n\n  laplace[0] = [];\n  laplace[1] = [];\n  for (let i = 1; i < greyscale.data.length; i++) {\n    // Pad top, since we can't compute Laplacian\n    laplace[0][i] = 1;\n    laplace[1][i] = 1;\n  }\n\n  for (let y = 2; y < greyscale.data.length - 2; y++) {\n    laplace[y] = [];\n    // Pad left, ditto\n    laplace[y][0] = 1;\n    laplace[y][1] = 1;\n\n    for (let x = 2; x < greyscale.data[y].length - 2; x++) {\n      // Threshold needed to get rid of clutter.\n      laplace[y][x] = (greyscale.laplace(x, y) > 0.33) ? 0 : 1;\n    }\n\n    // Pad right, ditto\n    laplace[y][greyscale.data[y].length - 2] = 1;\n    laplace[y][greyscale.data[y].length - 1] = 1;\n  }\n\n  laplace[greyscale.data.length - 2] = [];\n  laplace[greyscale.data.length - 1] = [];\n  for (let j = 1; j < greyscale.data.length; j++) {\n    // Pad bottom, ditto\n    laplace[greyscale.data.length - 2][j] = 1;\n    laplace[greyscale.data.length - 1][j] = 1;\n  }\n\n  return laplace;\n}\n\n/**\n * Compute the X gradient.\n *\n * @param {object} greyscale The values.\n * @returns {Array} The gradient.\n */\nfunction computeGradX(greyscale) {\n  // Returns 2D array of x-gradient values for greyscale\n  const gradX = [];\n\n  for (let y = 0; y < greyscale.data.length; y++) {\n    gradX[y] = [];\n\n    for (let x = 0; x < greyscale.data[y].length - 1; x++) {\n      gradX[y][x] = greyscale.dx(x, y);\n    }\n\n    gradX[y][greyscale.data[y].length - 1] =\n      gradX[y][greyscale.data[y].length - 2];\n  }\n\n  return gradX;\n}\n\n/**\n * Compute the Y gradient.\n *\n * @param {object} greyscale The values.\n * @returns {Array} The gradient.\n */\nfunction computeGradY(greyscale) {\n  // Returns 2D array of y-gradient values for greyscale\n  const gradY = [];\n\n  for (let y = 0; y < greyscale.data.length - 1; y++) {\n    gradY[y] = [];\n\n    for (let x = 0; x < greyscale.data[y].length; x++) {\n      gradY[y][x] = greyscale.dy(x, y);\n    }\n  }\n\n  gradY[greyscale.data.length - 1] = [];\n  for (let i = 0; i < greyscale.data[0].length; i++) {\n    gradY[greyscale.data.length - 1][i] = gradY[greyscale.data.length - 2][i];\n  }\n\n  return gradY;\n}\n\n/**\n * Compute the gradient unit vector.\n *\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {number} px The point X.\n * @param {number} py The point Y.\n * @param {object} out The result.\n */\nfunction gradUnitVector(gradX, gradY, px, py, out) {\n  // Returns the gradient vector at (px,py), scaled to a magnitude of 1\n  const ox = gradX[py][px];\n  const oy = gradY[py][px];\n\n  let gvm = Math.sqrt(ox * ox + oy * oy);\n  gvm = Math.max(gvm, 1e-100); // To avoid possible divide-by-0 errors\n\n  out.x = ox / gvm;\n  out.y = oy / gvm;\n}\n\n/**\n * Compute the gradient direction.\n *\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {number} px The point X.\n * @param {number} py The point Y.\n * @param {number} qx The q X.\n * @param {number} qy The q Y.\n * @returns {number} The direction.\n */\nfunction gradDirection(gradX, gradY, px, py, qx, qy) {\n  const __dgpuv = {x: -1, y: -1};\n  const __gdquv = {x: -1, y: -1};\n  // Compute the gradiant direction, in radians, between to points\n  gradUnitVector(gradX, gradY, px, py, __dgpuv);\n  gradUnitVector(gradX, gradY, qx, qy, __gdquv);\n\n  let dp = __dgpuv.y * (qx - px) - __dgpuv.x * (qy - py);\n  let dq = __gdquv.y * (qx - px) - __gdquv.x * (qy - py);\n\n  // Make sure dp is positive, to keep things consistant\n  if (dp < 0) {\n    dp = -dp;\n    dq = -dq;\n  }\n\n  if (px !== qx && py !== qy) {\n    // We're going diagonally between pixels\n    dp *= Math.SQRT1_2;\n    dq *= Math.SQRT1_2;\n  }\n\n  return __twothirdpi * (Math.acos(dp) + Math.acos(dq));\n}\n\n/**\n * Compute the sides.\n *\n * @param {number} dist The distance.\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {object} greyscale The value.\n * @returns {object} The sides.\n */\nfunction computeSides(dist, gradX, gradY, greyscale) {\n  // Returns 2 2D arrays, containing inside and outside greyscale values.\n  // These greyscale values are the intensity just a little bit along the\n  // gradient vector, in either direction, from the supplied point. These\n  // values are used when using active-learning Intelligent Scissors\n\n  const sides = {};\n  sides.inside = [];\n  sides.outside = [];\n\n  const guv = {x: -1, y: -1}; // Current gradient unit vector\n\n  for (let y = 0; y < gradX.length; y++) {\n    sides.inside[y] = [];\n    sides.outside[y] = [];\n\n    for (let x = 0; x < gradX[y].length; x++) {\n      gradUnitVector(gradX, gradY, x, y, guv);\n\n      //(x, y) rotated 90 = (y, -x)\n\n      let ix = Math.round(x + dist * guv.y);\n      let iy = Math.round(y - dist * guv.x);\n      let ox = Math.round(x - dist * guv.y);\n      let oy = Math.round(y + dist * guv.x);\n\n      ix = Math.max(Math.min(ix, gradX[y].length - 1), 0);\n      ox = Math.max(Math.min(ox, gradX[y].length - 1), 0);\n      iy = Math.max(Math.min(iy, gradX.length - 1), 0);\n      oy = Math.max(Math.min(oy, gradX.length - 1), 0);\n\n      sides.inside[y][x] = greyscale.data[iy][ix];\n      sides.outside[y][x] = greyscale.data[oy][ox];\n    }\n  }\n\n  return sides;\n}\n\n/**\n * Gaussian blur an input buffer.\n *\n * @param {Array} buffer The input buffer.\n * @param {Array} out The result.\n */\nfunction gaussianBlur(buffer, out) {\n  // Smooth values over to fill in gaps in the mapping\n  out[0] = 0.4 * buffer[0] + 0.5 * buffer[1] + 0.1 * buffer[1];\n  out[1] = 0.25 * buffer[0] + 0.4 * buffer[1] + 0.25 * buffer[2] +\n    0.1 * buffer[3];\n\n  for (let i = 2; i < buffer.length - 2; i++) {\n    out[i] = 0.05 * buffer[i - 2] + 0.25 * buffer[i - 1] +\n      0.4 * buffer[i] + 0.25 * buffer[i + 1] + 0.05 * buffer[i + 2];\n  }\n\n  const len = buffer.length;\n  out[len - 2] = 0.25 * buffer[len - 1] + 0.4 * buffer[len - 2] +\n    0.25 * buffer[len - 3] + 0.1 * buffer[len - 4];\n  out[len - 1] = 0.4 * buffer[len - 1] + 0.5 * buffer[len - 2] +\n    0.1 * buffer[len - 3];\n}\n\n/**\n * Scissors\n *\n * Ref: Eric N. Mortensen, William A. Barrett, Interactive Segmentation with\n *   Intelligent Scissors, Graphical Models and Image Processing, Volume 60,\n *   Issue 5, September 1998, Pages 349-384, ISSN 1077-3169,\n *   DOI: 10.1006/gmip.1998.0480.\n *\n * {@link http://www.sciencedirect.com/science/article/B6WG4-45JB8WN-9/2/6fe59d8089fd1892c2bfb82283065579}\n *\n * Highly inspired from {@link http://code.google.com/p/livewire-javascript/}\n */\nexport class Scissors {\n\n  constructor() {\n    this.width = -1;\n    this.height = -1;\n\n    this.curPoint = null; // Corrent point we're searching on.\n    this.searchGranBits = 8; // Bits of resolution for BucketQueue.\n    this.searchGran = 1 << this.searchGranBits; //bits.\n    this.pointsPerPost = 500;\n\n    // Precomputed image data. All in ranges 0 >= x >= 1 and\n    //   all inverted (1 - x).\n    this.greyscale = null; // Greyscale of image\n    this.laplace = null; // Laplace zero-crossings (either 0 or 1).\n    this.gradient = null; // Gradient magnitudes.\n    this.gradX = null; // X-differences.\n    this.gradY = null; // Y-differences.\n\n    // Matrix mapping point => parent along shortest-path to root.\n    this.parents = null;\n\n    this.working = false; // Currently computing shortest paths?\n\n    // Begin Training:\n    this.trained = false;\n    this.trainingPoints = null;\n\n    this.edgeWidth = 2;\n    this.trainingLength = 32;\n\n    this.edgeGran = 256;\n    this.edgeTraining = null;\n\n    this.gradPointsNeeded = 32;\n    this.gradGran = 1024;\n    this.gradTraining = null;\n\n    this.insideGran = 256;\n    this.insideTraining = null;\n\n    this.outsideGran = 256;\n    this.outsideTraining = null;\n  }\n  // End Training\n\n\n  // Begin training methods //\n  getTrainingIdx(granularity, value) {\n    return Math.round((granularity - 1) * value);\n  }\n\n  getTrainedEdge(edge) {\n    return this.edgeTraining[this.getTrainingIdx(this.edgeGran, edge)];\n  }\n\n  getTrainedGrad(grad) {\n    return this.gradTraining[this.getTrainingIdx(this.gradGran, grad)];\n  }\n\n  getTrainedInside(inside) {\n    return this.insideTraining[this.getTrainingIdx(this.insideGran, inside)];\n  }\n\n  getTrainedOutside(outside) {\n    return this.outsideTraining[this.getTrainingIdx(this.outsideGran, outside)];\n  }\n  // End training methods //\n\n  setWorking(working) {\n    // Sets working flag\n    this.working = working;\n  }\n\n  setDimensions(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  setData(data) {\n    if (this.width === -1 || this.height === -1) {\n      // The width and height should have already been set\n      throw new Error('Dimensions have not been set.');\n    }\n\n    this.greyscale = computeGreyscale(data, this.width, this.height);\n    this.laplace = computeLaplace(this.greyscale);\n    this.gradient = computeGradient(this.greyscale);\n    this.gradX = computeGradX(this.greyscale);\n    this.gradY = computeGradY(this.greyscale);\n\n    const sides = computeSides(\n      this.edgeWidth, this.gradX, this.gradY, this.greyscale);\n    this.inside = sides.inside;\n    this.outside = sides.outside;\n    this.edgeTraining = [];\n    this.gradTraining = [];\n    this.insideTraining = [];\n    this.outsideTraining = [];\n  }\n\n  findTrainingPoints(p) {\n    // Grab the last handful of points for training\n    const points = [];\n\n    if (this.parents !== null) {\n      for (let i = 0; i < this.trainingLength && p; i++) {\n        points.push(p);\n        p = this.parents[p.y][p.x];\n      }\n    }\n\n    return points;\n  }\n\n  resetTraining() {\n    this.trained = false; // Training is ignored with this flag set\n  }\n\n  doTraining(p) {\n    // Compute training weights and measures\n    this.trainingPoints = this.findTrainingPoints(p);\n\n    if (this.trainingPoints.length < 8) {\n      return; // Not enough points, I think. It might crash if length = 0.\n    }\n\n    const buffer = [];\n    this.calculateTraining(\n      buffer, this.edgeGran, this.greyscale, this.edgeTraining);\n    this.calculateTraining(\n      buffer, this.gradGran, this.gradient, this.gradTraining);\n    this.calculateTraining(\n      buffer, this.insideGran, this.inside, this.insideTraining);\n    this.calculateTraining(\n      buffer, this.outsideGran, this.outside, this.outsideTraining);\n\n    if (this.trainingPoints.length < this.gradPointsNeeded) {\n      // If we have two few training points, the gradient weight map might not\n      // be smooth enough, so average with normal weights.\n      this.addInStaticGrad(this.trainingPoints.length, this.gradPointsNeeded);\n    }\n\n    this.trained = true;\n  }\n\n  calculateTraining(\n    buffer, granularity, input, output) {\n    let i = 0;\n    // Build a map of raw-weights to trained-weights by favoring input values\n    buffer.length = granularity;\n    for (i = 0; i < granularity; i++) {\n      buffer[i] = 0;\n    }\n\n    let maxVal = 1;\n    for (i = 0; i < this.trainingPoints.length; i++) {\n      const p = this.trainingPoints[i];\n      const idx = this.getTrainingIdx(granularity, input[p.y][p.x]);\n      buffer[idx] += 1;\n\n      maxVal = Math.max(maxVal, buffer[idx]);\n    }\n\n    // Invert and scale.\n    for (i = 0; i < granularity; i++) {\n      buffer[i] = 1 - buffer[i] / maxVal;\n    }\n\n    // Blur it, as suggested. Gets rid of static.\n    gaussianBlur(buffer, output);\n  }\n\n  addInStaticGrad(have, need) {\n    // Average gradient raw-weights to trained-weights map with standard weight\n    // map so that we don't end up with something to spiky\n    for (let i = 0; i < this.gradGran; i++) {\n      this.gradTraining[i] = Math.min(\n        this.gradTraining[i],\n        1 - i * (need - have) / (need * this.gradGran)\n      );\n    }\n  }\n\n  gradDirection(px, py, qx, qy) {\n    return gradDirection(this.gradX, this.gradY, px, py, qx, qy);\n  }\n\n  dist(px, py, qx, qy) {\n    // The grand culmunation of most of the code: the weighted distance function\n    let grad = this.gradient[qy][qx];\n\n    if (px === qx || py === qy) {\n      // The distance is Euclidean-ish; non-diagonal edges should be shorter\n      grad *= Math.SQRT1_2;\n    }\n\n    const lap = this.laplace[qy][qx];\n    const dir = this.gradDirection(px, py, qx, qy);\n\n    if (this.trained) {\n      // Apply training magic\n      const gradT = this.getTrainedGrad(grad);\n      const edgeT = this.getTrainedEdge(this.greyscale.data[py][px]);\n      const insideT = this.getTrainedInside(this.inside[py][px]);\n      const outsideT = this.getTrainedOutside(this.outside[py][px]);\n\n      return 0.3 * gradT + 0.3 * lap + 0.1 * (dir + edgeT + insideT + outsideT);\n    } else {\n      // Normal weights\n      return 0.43 * grad + 0.43 * lap + 0.11 * dir;\n    }\n  }\n\n  adj(p) {\n    const list = [];\n\n    const sx = Math.max(p.x - 1, 0);\n    const sy = Math.max(p.y - 1, 0);\n    const ex = Math.min(p.x + 1, this.greyscale.data[0].length - 1);\n    const ey = Math.min(p.y + 1, this.greyscale.data.length - 1);\n\n    let idx = 0;\n    for (let y = sy; y <= ey; y++) {\n      for (let x = sx; x <= ex; x++) {\n        if (x !== p.x || y !== p.y) {\n          list[idx++] = {x: x, y: y};\n        }\n      }\n    }\n\n    return list;\n  }\n\n  #costFunction = (p) => {\n    return Math.round(this.searchGran * this.cost[p.y][p.x]);\n  };\n\n  setPoint(sp) {\n    this.setWorking(true);\n\n    this.curPoint = sp;\n\n    let x = 0;\n    let y = 0;\n\n    this.visited = [];\n    for (y = 0; y < this.height; y++) {\n      this.visited[y] = [];\n      for (x = 0; x < this.width; x++) {\n        this.visited[y][x] = false;\n      }\n    }\n\n    this.parents = [];\n    for (y = 0; y < this.height; y++) {\n      this.parents[y] = [];\n    }\n\n    this.cost = [];\n    for (y = 0; y < this.height; y++) {\n      this.cost[y] = [];\n      for (x = 0; x < this.width; x++) {\n        this.cost[y][x] = Number.MAX_VALUE;\n      }\n    }\n    this.cost[sp.y][sp.x] = 0;\n\n    this.pq = new BucketQueue(this.searchGranBits, this.#costFunction);\n    this.pq.push(sp);\n  }\n\n  doWork() {\n    if (!this.working) {\n      return;\n    }\n\n    this.timeout = null;\n\n    let pointCount = 0;\n    const newPoints = [];\n    while (!this.pq.isEmpty() && pointCount < this.pointsPerPost) {\n      const p = this.pq.pop();\n      newPoints.push(p);\n      newPoints.push(this.parents[p.y][p.x]);\n\n      this.visited[p.y][p.x] = true;\n\n      const adjList = this.adj(p);\n      for (let i = 0; i < adjList.length; i++) {\n        const q = adjList[i];\n\n        const pqCost = this.cost[p.y][p.x] + this.dist(p.x, p.y, q.x, q.y);\n\n        if (pqCost < this.cost[q.y][q.x]) {\n          if (this.cost[q.y][q.x] !== Number.MAX_VALUE) {\n            // Already in PQ, must remove it so we can re-add it.\n            this.pq.remove(q);\n          }\n\n          this.cost[q.y][q.x] = pqCost;\n          this.parents[q.y][q.x] = p;\n          this.pq.push(q);\n        }\n      }\n\n      pointCount++;\n    }\n\n    return newPoints;\n  }\n\n} // Scissors class\n","import {Style} from '../gui/style';\nimport {Point2D} from '../math/point';\nimport {Path} from '../math/path';\nimport {Scissors} from '../math/scissors';\nimport {guid} from '../math/stats';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {RoiFactory} from '../tools/roi';\nimport {DrawGroupCommand} from '../tools/drawCommands';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Livewire painting tool.\n */\nexport class Livewire {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Draw command.\n   *\n   * @type {object}\n   */\n  #command = null;\n\n  /**\n   * Current shape group.\n   *\n   * @type {object}\n   */\n  #shapeGroup = null;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style = new Style();\n\n  /**\n   * Path storage. Paths are stored in reverse order.\n   *\n   * @type {Path}\n   */\n  #path = new Path();\n\n  /**\n   * Current path storage. Paths are stored in reverse order.\n   *\n   * @type {Path}\n   */\n  #currentPath = new Path();\n\n  /**\n   * List of parent points.\n   *\n   * @type {Array}\n   */\n  #parentPoints = [];\n\n  /**\n   * Tolerance.\n   *\n   * @type {number}\n   */\n  #tolerance = 5;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Clear the parent points list.\n   *\n   * @param {object} imageSize The image size.\n   */\n  #clearParentPoints(imageSize) {\n    const nrows = imageSize.get(1);\n    for (let i = 0; i < nrows; ++i) {\n      this.#parentPoints[i] = [];\n    }\n  }\n\n  /**\n   * Clear the stored paths.\n   */\n  #clearPaths() {\n    this.#path = new Path();\n    this.#currentPath = new Path();\n  }\n\n  /**\n   * Scissor representation.\n   *\n   * @type {Scissors}\n   */\n  #scissors = new Scissors();\n\n  /**\n   * Finish a livewire (roi) shape.\n   */\n  #finishShape() {\n    // fire creation event (was not propagated during draw)\n    this.#fireEvent({\n      type: 'drawcreate',\n      id: this.#shapeGroup.id()\n    });\n    // listen\n    this.#command.onExecute = this.#fireEvent;\n    this.#command.onUndo = this.#fireEvent;\n    // save command in undo stack\n    this.#app.addToUndoStack(this.#command);\n    // set flag\n    this.#started = false;\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const imageSize = viewLayer.getViewController().getImageSize();\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\n\n    // first time\n    if (!this.#started) {\n      this.#started = true;\n      this.x0 = index.get(0);\n      this.y0 = index.get(1);\n      // clear vars\n      this.#clearPaths();\n      this.#clearParentPoints(imageSize);\n      this.#shapeGroup = null;\n      // update zoom scale\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      this.#style.setZoomScale(\n        drawLayer.getKonvaLayer().getAbsoluteScale());\n      // do the training from the first point\n      const p = {x: index.get(0), y: index.get(1)};\n      this.#scissors.doTraining(p);\n      // add the initial point to the path\n      const p0 = new Point2D(index.get(0), index.get(1));\n      this.#path.addPoint(p0);\n      this.#path.addControlPoint(p0);\n    } else {\n      // final point: at 'tolerance' of the initial point\n      if ((Math.abs(index.get(0) - this.x0) < this.#tolerance) &&\n        (Math.abs(index.get(1) - this.y0) < this.#tolerance)) {\n        // finish\n        this.#finishShape();\n      } else {\n        // anchor point\n        this.#path = this.#currentPath;\n        this.#clearParentPoints(imageSize);\n        const pn = {x: index.get(0), y: index.get(1)};\n        this.#scissors.doTraining(pn);\n        this.#path.addControlPoint(this.#currentPath.getPoint(0));\n      }\n    }\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\n\n    // set the point to find the path to\n    let p = {x: index.get(0), y: index.get(1)};\n    this.#scissors.setPoint(p);\n    // do the work\n    let results = [];\n    let stop = false;\n    while (!this.#parentPoints[p.y][p.x] && !stop) {\n      results = this.#scissors.doWork();\n\n      if (results.length === 0) {\n        stop = true;\n      } else {\n        // fill parents\n        for (let i = 0; i < results.length - 1; i += 2) {\n          const _p = results[i];\n          const _q = results[i + 1];\n          this.#parentPoints[_p.y][_p.x] = _q;\n        }\n      }\n    }\n\n    // get the path\n    this.#currentPath = new Path();\n    stop = false;\n    while (p && !stop) {\n      this.#currentPath.addPoint(new Point2D(p.x, p.y));\n      if (!this.#parentPoints[p.y]) {\n        stop = true;\n      } else {\n        if (!this.#parentPoints[p.y][p.x]) {\n          stop = true;\n        } else {\n          p = this.#parentPoints[p.y][p.x];\n        }\n      }\n    }\n    this.#currentPath.appenPath(this.#path);\n\n    // remove previous draw\n    if (this.#shapeGroup) {\n      this.#shapeGroup.destroy();\n    }\n    // create shape\n    const factory = new RoiFactory();\n    this.#shapeGroup = factory.create(\n      this.#currentPath.pointArray, this.#style);\n    this.#shapeGroup.id(guid());\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const drawController = drawLayer.getDrawController();\n\n    // get the position group\n    const posGroup = drawController.getCurrentPosGroup();\n    // add shape group to position group\n    posGroup.add(this.#shapeGroup);\n\n    // draw shape command\n    this.#command = new DrawGroupCommand(this.#shapeGroup, 'livewire',\n      drawLayer.getKonvaLayer());\n    // draw\n    this.#command.execute();\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup(_event) {\n    // nothing to do\n  }\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    // treat as mouse up\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle double click event.\n   *\n   * @param {object} _event The double click event.\n   */\n  dblclick = (_event) => {\n    this.#finishShape();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // treat as mouse down\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // treat as mouse move\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // treat as mouse up\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Livewire';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool The flag to activate or not.\n   */\n  activate(bool) {\n    // start scissors if displayed\n    if (bool) {\n      const layerGroup = this.#app.getActiveLayerGroup();\n      const viewLayer = layerGroup.getActiveViewLayer();\n\n      //scissors = new Scissors();\n      const imageSize = viewLayer.getViewController().getImageSize();\n      this.#scissors.setDimensions(\n        imageSize.get(0),\n        imageSize.get(1));\n      this.#scissors.setData(viewLayer.getImageData().data);\n\n      // init with the app window scale\n      this.#style.setBaseScale(this.#app.getBaseScale());\n      // set the default to the first in the list\n      this.setFeatures({shapeColour: this.#style.getLineColour()});\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['drawcreate', 'drawchange', 'drawmove', 'drawdelete'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Set the tool live features: shape colour.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n  }\n\n} // Livewire class\n","import {i18n} from '../utils/i18n';\nimport {getStats} from './stats';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Circle shape.\n */\nexport class Circle {\n\n  /**\n   * Circle centre.\n   *\n   * @type {Point2D}\n   */\n  #centre;\n\n  /**\n   * Circle radius.\n   *\n   * @type {number}\n   */\n  #radius;\n\n  /**\n   * @param {Point2D} centre A Point2D representing the centre\n   *   of the circle.\n   * @param {number} radius The radius of the circle.\n   */\n  constructor(centre, radius) {\n    this.#centre = centre;\n    this.#radius = radius;\n  }\n\n  /**\n   * Get the centre (point) of the circle.\n   *\n   * @returns {Point2D} The center (point) of the circle.\n   */\n  getCenter() {\n    return this.#centre;\n  }\n\n  /**\n   * Get the radius of the circle.\n   *\n   * @returns {number} The radius of the circle.\n   */\n  getRadius() {\n    return this.#radius;\n  }\n\n\n  /**\n   * Check for equality.\n   *\n   * @param {Circle} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter().equals(rhs.getCenter()) &&\n      this.getRadius() === rhs.getRadius();\n  }\n\n  /**\n   * Get the surface of the circle.\n   *\n   * @returns {number} The surface of the circle.\n   */\n  getSurface() {\n    return Math.PI * this.getRadius() * this.getRadius();\n  }\n\n  /**\n   * Get the surface of the circle according to a spacing.\n   *\n   * @param {number} spacingX The X spacing.\n   * @param {number} spacingY The Y spacing.\n   * @returns {number} The surface of the circle multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacingX, spacingY) {\n    return mulABC(this.getSurface(), spacingX, spacingY);\n  }\n\n  /**\n   * Get the rounded limits of the circle.\n   * (see https://en.wikipedia.org/wiki/Circle#Equations)\n   * Circle formula: x*x + y*y = r*r\n   * => y = (+-) sqrt(r*r - x*x)\n   *\n   * @returns {Array} The rounded limits.\n   */\n  getRound() {\n    const centerX = this.getCenter().getX();\n    const centerY = this.getCenter().getY();\n    const radius = this.getRadius();\n    const rSquare = Math.pow(radius, 2);\n    // Y bounds\n    const minY = centerY - radius;\n    const maxY = centerY + radius;\n    const regions = [];\n    // loop through lines and store limits\n    for (let y = minY; y < maxY; ++y) {\n      const diff = rSquare - Math.pow(y - centerY, 2);\n      // remove small values (possibly negative)\n      if (Math.abs(diff) < 1e-7) {\n        continue;\n      }\n      const transX = Math.sqrt(diff);\n      // remove small values\n      if (transX < 0.5) {\n        continue;\n      }\n      regions.push([\n        [Math.round(centerX - transX), Math.round(y)],\n        [Math.round(centerX + transX), Math.round(y)]\n      ]);\n    }\n    return regions;\n  }\n\n  /**\n   * Quantify an circle according to view information.\n   *\n   * @param {ViewController} viewController The associated view\n   *   controller.\n   * @param {Array} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // surface\n    const spacing = viewController.get2DSpacing();\n    const surface = this.getWorldSurface(spacing[0], spacing[1]);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n.t('unit.cm2')};\n    }\n\n    // pixel quantification\n    if (viewController.canQuantifyImage()) {\n      const regions = this.getRound();\n      if (regions.length !== 0) {\n        const values = viewController.getImageVariableRegionValues(regions);\n        const quantif = getStats(values, flags);\n        quant.min = {value: quantif.min, unit: ''};\n        quant.max = {value: quantif.max, unit: ''};\n        quant.mean = {value: quantif.mean, unit: ''};\n        quant.stdDev = {value: quantif.stdDev, unit: ''};\n        if (typeof quantif.median !== 'undefined') {\n          quant.median = {value: quantif.median, unit: ''};\n        }\n        if (typeof quantif.p25 !== 'undefined') {\n          quant.p25 = {value: quantif.p25, unit: ''};\n        }\n        if (typeof quantif.p75 !== 'undefined') {\n          quant.p75 = {value: quantif.p75, unit: ''};\n        }\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Circle class\n","import {Circle} from '../math/circle';\nimport {Point2D} from '../math/point';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {getDefaultAnchor} from './editor';\nimport {DRAW_DEBUG} from './draw';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultCircleLabelText = '{surface}';\n\n/**\n * Circle factory.\n */\nexport class CircleFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'circle-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a circle shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the circle.\n   * @param {object} style The drawing style.\n   * @param {object} viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(\n    points, style, viewController) {\n    // calculate radius\n    const a = Math.abs(points[0].getX() - points[1].getX());\n    const b = Math.abs(points[0].getY() - points[1].getY());\n    const radius = Math.round(Math.sqrt(a * a + b * b));\n    // physical shape\n    const circle = new Circle(points[0], radius);\n    // draw shape\n    const kshape = new Konva.Circle({\n      x: circle.getCenter().getX(),\n      y: circle.getCenter().getY(),\n      radius: circle.getRadius(),\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // TODO: allow override?\n    // if (typeof circleLabelText !== 'undefined') {\n    //   textExpr = circleLabelText;\n    // } else {\n    textExpr = defaultCircleLabelText;\n    // }\n    const quant = circle.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // augment text with meta data\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: circle.getCenter().getX(),\n      y: circle.getCenter().getY(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this.#getShadowCircle(circle);\n    }\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    if (kshadow) {\n      group.add(kshadow);\n    }\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a circle shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const centerX = shape.x();\n    const centerY = shape.y();\n    const radius = shape.radius();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      centerX - radius, centerY, 'left', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX + radius, centerY, 'right', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX, centerY - radius, 'bottom', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX, centerY + radius, 'top', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a circle shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} _style The app style.\n   * @param {object} viewController The associated view controller.\n   */\n  update(anchor, _style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kcircle = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    // find special points\n    const left = group.getChildren(function (node) {\n      return node.id() === 'left';\n    })[0];\n    const right = group.getChildren(function (node) {\n      return node.id() === 'right';\n    })[0];\n    const bottom = group.getChildren(function (node) {\n      return node.id() === 'bottom';\n    })[0];\n    const top = group.getChildren(function (node) {\n      return node.id() === 'top';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // circle center\n    const center = {\n      x: kcircle.x(),\n      y: kcircle.y()\n    };\n\n    let radius;\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'left':\n      radius = center.x - anchor.x();\n      // force y\n      left.y(right.y());\n      // update others\n      right.x(center.x + radius);\n      bottom.y(center.y - radius);\n      top.y(center.y + radius);\n      break;\n    case 'right':\n      radius = anchor.x() - center.x;\n      // force y\n      right.y(left.y());\n      // update others\n      left.x(center.x - radius);\n      bottom.y(center.y - radius);\n      top.y(center.y + radius);\n      break;\n    case 'bottom':\n      radius = center.y - anchor.y();\n      // force x\n      bottom.x(top.x());\n      // update others\n      left.x(center.x - radius);\n      right.x(center.x + radius);\n      top.y(center.y + radius);\n      break;\n    case 'top':\n      radius = anchor.y() - center.y;\n      // force x\n      top.x(bottom.x());\n      // update others\n      left.x(center.x - radius);\n      right.x(center.x + radius);\n      bottom.y(center.y - radius);\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n\n    // update shape: just update the radius\n    kcircle.radius(Math.abs(radius));\n    // new circle\n    const centerPoint = new Point2D(\n      group.x() + center.x,\n      group.y() + center.y\n    );\n    const circle = new Circle(centerPoint, radius);\n\n    // debug shadow\n    if (kshadow) {\n      // remove previous\n      kshadow.destroy();\n      // add new\n      group.add(this.#getShadowCircle(circle, group));\n    }\n\n    // update label position\n    const textPos = {x: center.x, y: center.y};\n    klabel.position(textPos);\n\n    // update quantification\n    this.#updateCircleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Circle.\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this.#updateCircleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Circle (as a static\n   *   function to be used in update).\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  #updateCircleQuantification(\n    group, viewController) {\n    // associated shape\n    const kcircle = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n\n    // positions: add possible group offset\n    const centerPoint = new Point2D(\n      group.x() + kcircle.x(),\n      group.y() + kcircle.y()\n    );\n    // circle\n    const circle = new Circle(centerPoint, kcircle.radius());\n\n    // update text\n    const ktext = klabel.getText();\n    const quantification = circle.quantify(\n      viewController,\n      getFlags(ktext.meta.textExpr));\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\n    // update meta\n    ktext.meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Circle} circle The circle to shadow.\n   * @param {object} group The associated group.\n   * @returns {object} The shadow konva group.\n   */\n  #getShadowCircle(circle, group) {\n    // possible group offset\n    let offsetX = 0;\n    let offsetY = 0;\n    if (typeof group !== 'undefined') {\n      offsetX = group.x();\n      offsetY = group.y();\n    }\n    const kshadow = new Konva.Group();\n    kshadow.name('shadow');\n    const regions = circle.getRound();\n    for (let i = 0; i < regions.length; ++i) {\n      const region = regions[i];\n      const minX = region[0][0];\n      const minY = region[0][1];\n      const maxX = region[1][0];\n      const pixelLine = new Konva.Rect({\n        x: minX - offsetX,\n        y: minY - offsetY,\n        width: maxX - minX,\n        height: 1,\n        fill: 'grey',\n        strokeWidth: 0,\n        strokeScaleEnabled: false,\n        opacity: 0.3,\n        name: 'shadow-element'\n      });\n      kshadow.add(pixelLine);\n    }\n    return kshadow;\n  }\n\n} // class CircleFactory\n","import {i18n} from '../utils/i18n';\nimport {getStats} from './stats';\nimport {Index} from './index';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Ellipse shape.\n */\nexport class Ellipse {\n\n  /**\n   * Ellipse centre.\n   *\n   * @type {Point2D}\n   */\n  #centre;\n\n  /**\n   * Ellipse horizontal radius.\n   *\n   * @type {number}\n   */\n  #a;\n\n  /**\n   * Ellipse vertical radius.\n   *\n   * @type {number}\n   */\n  #b;\n\n  /**\n   * @param {Point2D} centre A Point2D representing the centre\n   *   of the ellipse.\n   * @param {number} a The radius of the ellipse on the horizontal axe.\n   * @param {number} b The radius of the ellipse on the vertical axe.\n   */\n  constructor(centre, a, b) {\n    this.#centre = centre;\n    this.#a = a;\n    this.#b = b;\n  }\n\n  /**\n   * Get the centre (point) of the ellipse.\n   *\n   * @returns {Point2D} The center (point) of the ellipse.\n   */\n  getCenter() {\n    return this.#centre;\n  }\n\n  /**\n   * Get the radius of the ellipse on the horizontal axe.\n   *\n   * @returns {number} The radius of the ellipse on the horizontal axe.\n   */\n  getA() {\n    return this.#a;\n  }\n\n  /**\n   * Get the radius of the ellipse on the vertical axe.\n   *\n   * @returns {number} The radius of the ellipse on the vertical axe.\n   */\n  getB() {\n    return this.#b;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Ellipse} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter().equals(rhs.getCenter()) &&\n      this.getA() === rhs.getA() &&\n      this.getB() === rhs.getB();\n  }\n\n  /**\n   * Get the surface of the ellipse.\n   *\n   * @returns {number} The surface of the ellipse.\n   */\n  getSurface() {\n    return Math.PI * this.getA() * this.getB();\n  }\n\n  /**\n   * Get the surface of the ellipse according to a spacing.\n   *\n   * @param {number} spacingX The X spacing.\n   * @param {number} spacingY The Y spacing.\n   * @returns {number} The surface of the ellipse multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacingX, spacingY) {\n    return mulABC(this.getSurface(), spacingX, spacingY);\n  }\n\n  /**\n   * Get the rounded limits of the ellipse.\n   * (see https://en.wikipedia.org/wiki/Ellipse#Standard_equation)\n   * Ellipse formula: x*x / a*a + y*y / b*b = 1\n   * => y = (+-)(b/a) * sqrt(a*a - x*x)\n   *\n   * @returns {Array} The rounded limits.\n   */\n  getRound() {\n    const centerX = this.getCenter().getX();\n    const centerY = this.getCenter().getY();\n    const radiusX = this.getA();\n    const radiusY = this.getB();\n    const radiusRatio = radiusX / radiusY;\n    const rySquare = Math.pow(radiusY, 2);\n    // Y bounds\n    const minY = centerY - radiusY;\n    const maxY = centerY + radiusY;\n    const regions = [];\n    // loop through lines and store limits\n    for (let y = minY; y < maxY; ++y) {\n      const diff = rySquare - Math.pow(y - centerY, 2);\n      // remove small values (possibly negative)\n      if (Math.abs(diff) < 1e-7) {\n        continue;\n      }\n      const transX = radiusRatio * Math.sqrt(diff);\n      // remove small values\n      if (transX < 0.5) {\n        continue;\n      }\n      regions.push([\n        [Math.round(centerX - transX), Math.round(y)],\n        [Math.round(centerX + transX), Math.round(y)]\n      ]);\n    }\n    return regions;\n  }\n\n  /**\n   * Quantify an ellipse according to view information.\n   *\n   * @param {ViewController} viewController The associated view\n   *   controller.\n   * @param {Array} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // surface\n    const spacing = viewController.get2DSpacing();\n    const surface = this.getWorldSurface(spacing[0], spacing[1]);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n.t('unit.cm2')};\n    }\n\n    // pixel quantification\n    if (viewController.canQuantifyImage()) {\n      const regions = this.getRound();\n      if (regions.length !== 0) {\n        const values = viewController.getImageVariableRegionValues(regions);\n        const quantif = getStats(values, flags);\n        quant.min = {value: quantif.min, unit: ''};\n        quant.max = {value: quantif.max, unit: ''};\n        quant.mean = {value: quantif.mean, unit: ''};\n        quant.stdDev = {value: quantif.stdDev, unit: ''};\n        if (typeof quantif.median !== 'undefined') {\n          quant.median = {value: quantif.median, unit: ''};\n        }\n        if (typeof quantif.p25 !== 'undefined') {\n          quant.p25 = {value: quantif.p25, unit: ''};\n        }\n        if (typeof quantif.p75 !== 'undefined') {\n          quant.p75 = {value: quantif.p75, unit: ''};\n        }\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Ellipse class\n\n/**\n * Get the indices that form a ellpise.\n *\n * @param {Index} center The ellipse center.\n * @param {Array} radius The 2 ellipse radiuses.\n * @param {Array} dir The 2 ellipse directions.\n * @returns {Array} The indices of the ellipse.\n */\nexport function getEllipseIndices(center, radius, dir) {\n  const centerValues = center.getValues();\n  // keep all values for possible extra dimensions\n  const values = centerValues.slice();\n  const indices = [];\n  const radiusI = radius[0];\n  const radiusJ = radius[1];\n  const radiusRatio = radiusI / radiusJ;\n  const radiusJ2 = Math.pow(radiusJ, 2);\n  const di = dir[0];\n  const dj = dir[1];\n  // deduce 4 positions from top right\n  for (let j = 0; j < radiusJ; ++j) {\n    // right triangle formed by radiuses, j and len\n    // ellipse: i*i / a*a + j*j / b*b = 1\n    // -> i = a/b * sqrt(b*b - j*j)\n    const len = Math.round(\n      radiusRatio * Math.sqrt(radiusJ2 - Math.pow(j, 2)));\n    const jmax = centerValues[dj] + j;\n    const jmin = centerValues[dj] - j;\n    for (let i = 0; i < len; ++i) {\n      const imax = centerValues[di] + i;\n      const imin = centerValues[di] - i;\n\n      // right\n      values[di] = imax;\n      // right - top\n      values[dj] = jmax;\n      indices.push(new Index(values.slice()));\n      // right - bottom\n      if (jmin !== jmax) {\n        values[dj] = jmin;\n        indices.push(new Index(values.slice()));\n      }\n\n      // left\n      if (imin !== imax) {\n        values[di] = imin;\n        // left - top\n        values[dj] = jmax;\n        indices.push(new Index(values.slice()));\n        // left - bottom\n        if (jmin !== jmax) {\n          values[dj] = jmin;\n          indices.push(new Index(values.slice()));\n        }\n      }\n    }\n  }\n  return indices;\n}\n","import {DRAW_DEBUG} from './draw';\nimport {getDefaultAnchor} from './editor';\nimport {Ellipse} from '../math/ellipse';\nimport {Point2D} from '../math/point';\nimport {logger} from '../utils/logger';\nimport {getFlags, replaceFlags} from '../utils/string';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultEllipseLabelText = '{surface}';\n\n/**\n * Ellipse factory.\n */\nexport class EllipseFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'ellipse-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create an ellipse shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the ellipse.\n   * @param {object} style The drawing style.\n   * @param {object} viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(\n    points, style, viewController) {\n    // calculate radius\n    const a = Math.abs(points[0].getX() - points[1].getX());\n    const b = Math.abs(points[0].getY() - points[1].getY());\n    // physical shape\n    const ellipse = new Ellipse(points[0], a, b);\n    // draw shape\n    const radius = {x: ellipse.getA(), y: ellipse.getB()};\n    const kshape = new Konva.Ellipse({\n      x: ellipse.getCenter().getX(),\n      y: ellipse.getCenter().getY(),\n      radius: radius,\n      radiusX: radius.x,\n      radiusY: radius.y,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // TODO: allow override?\n    // if (typeof ellipseLabelText !== 'undefined') {\n    //   textExpr = ellipseLabelText;\n    // } else {\n    textExpr = defaultEllipseLabelText;\n    // }\n    const quant = ellipse.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: ellipse.getCenter().getX(),\n      y: ellipse.getCenter().getY(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this.#getShadowEllipse(ellipse);\n    }\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    if (kshadow) {\n      group.add(kshadow);\n    }\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update an ellipse shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const ellipseX = shape.x();\n    const ellipseY = shape.y();\n    const radius = shape.radius();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      ellipseX - radius.x, ellipseY - radius.y, 'topLeft', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX + radius.x, ellipseY - radius.y, 'topRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX + radius.x, ellipseY + radius.y, 'bottomRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX - radius.x, ellipseY + radius.y, 'bottomLeft', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update an ellipse shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} _style The app style.\n   * @param {object} viewController The associated view controller.\n   */\n  update(anchor, _style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kellipse = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // find special points\n    const topLeft = group.getChildren(function (node) {\n      return node.id() === 'topLeft';\n    })[0];\n    const topRight = group.getChildren(function (node) {\n      return node.id() === 'topRight';\n    })[0];\n    const bottomRight = group.getChildren(function (node) {\n      return node.id() === 'bottomRight';\n    })[0];\n    const bottomLeft = group.getChildren(function (node) {\n      return node.id() === 'bottomLeft';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'topLeft':\n      topLeft.x(anchor.x());\n      topLeft.y(anchor.y());\n      topRight.y(anchor.y());\n      bottomLeft.x(anchor.x());\n      break;\n    case 'topRight':\n      topRight.x(anchor.x());\n      topRight.y(anchor.y());\n      topLeft.y(anchor.y());\n      bottomRight.x(anchor.x());\n      break;\n    case 'bottomRight':\n      bottomRight.x(anchor.x());\n      bottomRight.y(anchor.y());\n      bottomLeft.y(anchor.y());\n      topRight.x(anchor.x());\n      break;\n    case 'bottomLeft':\n      bottomLeft.x(anchor.x());\n      bottomLeft.y(anchor.y());\n      bottomRight.y(anchor.y());\n      topLeft.x(anchor.x());\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n    // update shape\n    const radiusX = (topRight.x() - topLeft.x()) / 2;\n    const radiusY = (bottomRight.y() - topRight.y()) / 2;\n    const center = {\n      x: topLeft.x() + radiusX,\n      y: topRight.y() + radiusY\n    };\n    kellipse.position(center);\n    const radiusAbs = {x: Math.abs(radiusX), y: Math.abs(radiusY)};\n    if (radiusAbs) {\n      kellipse.radius(radiusAbs);\n    }\n    // new ellipse\n    const centerPoint = new Point2D(\n      group.x() + center.x,\n      group.y() + center.y\n    );\n    const ellipse = new Ellipse(centerPoint, radiusAbs.x, radiusAbs.y);\n\n    // debug shadow\n    if (kshadow) {\n      // remove previous\n      kshadow.destroy();\n      // add new\n      group.add(this.#getShadowEllipse(ellipse, group));\n    }\n\n    // update label position\n    const textPos = {x: center.x, y: center.y};\n    klabel.position(textPos);\n\n    // update quantification\n    this.#updateEllipseQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of an Ellipse.\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this.#updateEllipseQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of an Ellipse (as a static\n   *   function to be used in update).\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  #updateEllipseQuantification(group, viewController) {\n    // associated shape\n    const kellipse = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n\n    // positions: add possible group offset\n    const centerPoint = new Point2D(\n      group.x() + kellipse.x(),\n      group.y() + kellipse.y()\n    );\n    // circle\n    const ellipse = new Ellipse(\n      centerPoint, kellipse.radius().x, kellipse.radius().y);\n\n    // update text\n    const ktext = klabel.getText();\n    const quantification = ellipse.quantify(\n      viewController,\n      getFlags(ktext.meta.textExpr));\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\n    // update meta\n    ktext.meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Ellipse} ellipse The ellipse to shadow.\n   * @param {object} group The associated group.\n   * @returns {object} The shadow konva group.\n   */\n  #getShadowEllipse(ellipse, group) {\n    // possible group offset\n    let offsetX = 0;\n    let offsetY = 0;\n    if (typeof group !== 'undefined') {\n      offsetX = group.x();\n      offsetY = group.y();\n    }\n    const kshadow = new Konva.Group();\n    kshadow.name('shadow');\n    const regions = ellipse.getRound();\n    for (let i = 0; i < regions.length; ++i) {\n      const region = regions[i];\n      const minX = region[0][0];\n      const minY = region[0][1];\n      const maxX = region[1][0];\n      const pixelLine = new Konva.Rect({\n        x: minX - offsetX,\n        y: minY - offsetY,\n        width: maxX - minX,\n        height: 1,\n        fill: 'grey',\n        strokeWidth: 0,\n        strokeScaleEnabled: false,\n        opacity: 0.3,\n        name: 'shadow-element'\n      });\n      kshadow.add(pixelLine);\n    }\n    return kshadow;\n  }\n\n} // class EllipseFactory\n","import {Point2D} from './point';\nimport {getStats} from './stats';\nimport {i18n} from '../utils/i18n';\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Rectangle shape.\n */\nexport class Rectangle {\n\n  /**\n   * Rectangle begin point.\n   *\n   * @type {Point2D}\n   */\n  #begin;\n\n  /**\n   * Rectangle end point.\n   *\n   * @type {Point2D}\n   */\n  #end;\n\n  /**\n   * @param {Point2D} begin A Point2D representing the beginning\n   *   of the rectangle.\n   * @param {Point2D} end A Point2D representing the end\n   *   of the rectangle.\n   */\n  constructor(begin, end) {\n    this.#begin = new Point2D(\n      Math.min(begin.getX(), end.getX()),\n      Math.min(begin.getY(), end.getY())\n    );\n    this.#end = new Point2D(\n      Math.max(begin.getX(), end.getX()),\n      Math.max(begin.getY(), end.getY())\n    );\n  }\n\n  /**\n   * Get the begin point of the rectangle.\n   *\n   * @returns {Point2D} The begin point of the rectangle\n   */\n  getBegin() {\n    return this.#begin;\n  }\n\n  /**\n   * Get the end point of the rectangle.\n   *\n   * @returns {Point2D} The end point of the rectangle\n   */\n  getEnd() {\n    return this.#end;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Rectangle} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getBegin().equals(rhs.getBegin()) &&\n      this.getEnd().equals(rhs.getEnd());\n  }\n\n  /**\n   * Get the surface of the rectangle.\n   *\n   * @returns {number} The surface of the rectangle.\n   */\n  getSurface() {\n    const begin = this.getBegin();\n    const end = this.getEnd();\n    return Math.abs(end.getX() - begin.getX()) *\n      Math.abs(end.getY() - begin.getY());\n  }\n\n  /**\n   * Get the surface of the rectangle according to a spacing.\n   *\n   * @param {number} spacingX The X spacing.\n   * @param {number} spacingY The Y spacing.\n   * @returns {number} The surface of the rectangle multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacingX, spacingY) {\n    return mulABC(this.getSurface(), spacingX, spacingY);\n  }\n\n  /**\n   * Get the real width of the rectangle.\n   *\n   * @returns {number} The real width of the rectangle.\n   */\n  getRealWidth() {\n    return this.getEnd().getX() - this.getBegin().getX();\n  }\n\n  /**\n   * Get the real height of the rectangle.\n   *\n   * @returns {number} The real height of the rectangle.\n   */\n  getRealHeight() {\n    return this.getEnd().getY() - this.getBegin().getY();\n  }\n\n  /**\n   * Get the width of the rectangle.\n   *\n   * @returns {number} The width of the rectangle.\n   */\n  getWidth() {\n    return Math.abs(this.getRealWidth());\n  }\n\n  /**\n   * Get the height of the rectangle.\n   *\n   * @returns {number} The height of the rectangle.\n   */\n  getHeight() {\n    return Math.abs(this.getRealHeight());\n  }\n\n  /**\n   * Get the rounded limits of the rectangle.\n   *\n   * @returns {object} The rounded limits.\n   */\n  getRound() {\n    return {\n      min: this.getBegin().getRound(),\n      max: this.getEnd().getRound()\n    };\n  }\n\n  /**\n   * Quantify a rectangle according to view information.\n   *\n   * @param {object} viewController The associated view controller.\n   * @param {Array} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // surface\n    const spacing = viewController.get2DSpacing();\n    const surface = this.getWorldSurface(spacing[0], spacing[1]);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n.t('unit.cm2')};\n    }\n\n    // pixel quantification\n    if (viewController.canQuantifyImage()) {\n      const round = this.getRound();\n      const values = viewController.getImageRegionValues(round.min, round.max);\n      const quantif = getStats(values, flags);\n      quant.min = {value: quantif.min, unit: ''};\n      quant.max = {value: quantif.max, unit: ''};\n      quant.mean = {value: quantif.mean, unit: ''};\n      quant.stdDev = {value: quantif.stdDev, unit: ''};\n      if (typeof quantif.median !== 'undefined') {\n        quant.median = {value: quantif.median, unit: ''};\n      }\n      if (typeof quantif.p25 !== 'undefined') {\n        quant.p25 = {value: quantif.p25, unit: ''};\n      }\n      if (typeof quantif.p75 !== 'undefined') {\n        quant.p75 = {value: quantif.p75, unit: ''};\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Rectangle class\n","import {Rectangle} from '../math/rectangle';\nimport {Point2D} from '../math/point';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {DRAW_DEBUG} from './draw';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultRectangleLabelText = '{surface}';\n\n/**\n * Rectangle factory.\n */\nexport class RectangleFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'rectangle-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a rectangle shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the rectangle.\n   * @param {object} style The drawing style.\n   * @param {object} viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const rectangle = new Rectangle(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Rect({\n      x: rectangle.getBegin().getX(),\n      y: rectangle.getBegin().getY(),\n      width: rectangle.getWidth(),\n      height: rectangle.getHeight(),\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // label text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // TODO: allow override?\n    // if (typeof rectangleLabelText !== 'undefined') {\n    //   textExpr = rectangleLabelText;\n    // } else {\n    textExpr = defaultRectangleLabelText;\n    // }\n    const quant = rectangle.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: rectangle.getBegin().getX(),\n      y: rectangle.getEnd().getY(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this.#getShadowRectangle(rectangle);\n    }\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    if (kshadow) {\n      group.add(kshadow);\n    }\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a rectangle shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const rectX = shape.x();\n    const rectY = shape.y();\n    const rectWidth = shape.width();\n    const rectHeight = shape.height();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      rectX, rectY, 'topLeft', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX + rectWidth, rectY, 'topRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX + rectWidth, rectY + rectHeight, 'bottomRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX, rectY + rectHeight, 'bottomLeft', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a rectangle shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} viewController The associated view controller.\n   */\n  update(anchor, style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const krect = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // find special points\n    const topLeft = group.getChildren(function (node) {\n      return node.id() === 'topLeft';\n    })[0];\n    const topRight = group.getChildren(function (node) {\n      return node.id() === 'topRight';\n    })[0];\n    const bottomRight = group.getChildren(function (node) {\n      return node.id() === 'bottomRight';\n    })[0];\n    const bottomLeft = group.getChildren(function (node) {\n      return node.id() === 'bottomLeft';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'topLeft':\n      topLeft.x(anchor.x());\n      topLeft.y(anchor.y());\n      topRight.y(anchor.y());\n      bottomLeft.x(anchor.x());\n      break;\n    case 'topRight':\n      topRight.x(anchor.x());\n      topRight.y(anchor.y());\n      topLeft.y(anchor.y());\n      bottomRight.x(anchor.x());\n      break;\n    case 'bottomRight':\n      bottomRight.x(anchor.x());\n      bottomRight.y(anchor.y());\n      bottomLeft.y(anchor.y());\n      topRight.x(anchor.x());\n      break;\n    case 'bottomLeft':\n      bottomLeft.x(anchor.x());\n      bottomLeft.y(anchor.y());\n      bottomRight.y(anchor.y());\n      topLeft.x(anchor.x());\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n    // update shape\n    krect.position(topLeft.position());\n    const width = topRight.x() - topLeft.x();\n    const height = bottomLeft.y() - topLeft.y();\n    if (width && height) {\n      krect.size({width: width, height: height});\n    }\n    // positions: add possible group offset\n    const p2d0 = new Point2D(\n      group.x() + topLeft.x(),\n      group.y() + topLeft.y()\n    );\n    const p2d1 = new Point2D(\n      group.x() + bottomRight.x(),\n      group.y() + bottomRight.y()\n    );\n    // new rect\n    const rect = new Rectangle(p2d0, p2d1);\n\n    // debug shadow based on round (used in quantification)\n    if (kshadow) {\n      const round = rect.getRound();\n      const rWidth = round.max.getX() - round.min.getX();\n      const rHeight = round.max.getY() - round.min.getY();\n      kshadow.position({\n        x: round.min.getX() - group.x(),\n        y: round.min.getY() - group.y()\n      });\n      kshadow.size({width: rWidth, height: rHeight});\n    }\n\n    // update label position\n    const textPos = {\n      x: rect.getBegin().getX() - group.x(),\n      y: rect.getEnd().getY() - group.y()\n    };\n    klabel.position(textPos);\n\n    // update quantification\n    this.#updateRectangleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Rectangle.\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this.#updateRectangleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Rectangle (as a static\n   *   function to be used in update).\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  #updateRectangleQuantification(group, viewController) {\n    // associated shape\n    const krect = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n\n    // positions: add possible group offset\n    const p2d0 = new Point2D(\n      group.x() + krect.x(),\n      group.y() + krect.y()\n    );\n    const p2d1 = new Point2D(\n      p2d0.getX() + krect.width(),\n      p2d0.getY() + krect.height()\n    );\n    // rectangle\n    const rect = new Rectangle(p2d0, p2d1);\n\n    // update text\n    const ktext = klabel.getText();\n    const quantification = rect.quantify(\n      viewController,\n      getFlags(ktext.meta.textExpr));\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\n    // update meta\n    ktext.meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {object} rectangle The rectangle to shadow.\n   * @returns {object} The shadow konva shape.\n   */\n  #getShadowRectangle(rectangle) {\n    const round = rectangle.getRound();\n    const rWidth = round.max.getX() - round.min.getX();\n    const rHeight = round.max.getY() - round.min.getY();\n    return new Konva.Rect({\n      x: round.min.getX(),\n      y: round.min.getY(),\n      width: rWidth,\n      height: rHeight,\n      fill: 'grey',\n      strokeWidth: 0,\n      strokeScaleEnabled: false,\n      opacity: 0.3,\n      name: 'shadow'\n    });\n  }\n\n} // class RectangleFactory\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\n/* eslint-enable no-unused-vars */\n\n/**\n * Threshold an image between an input minimum and maximum.\n */\nexport class Threshold {\n  /**\n   * Threshold minimum.\n   *\n   * @type {number}\n   */\n  #min = 0;\n\n  /**\n   * Threshold maximum.\n   *\n   * @type {number}\n   */\n  #max = 0;\n\n  /**\n   * Get the threshold minimum.\n   *\n   * @returns {number} The threshold minimum.\n   */\n  getMin() {\n    return this.#min;\n  }\n\n  /**\n   * Set the threshold minimum.\n   *\n   * @param {number} val The threshold minimum.\n   */\n  setMin(val) {\n    this.#min = val;\n  }\n\n  /**\n   * Get the threshold maximum.\n   *\n   * @returns {number} The threshold maximum.\n   */\n  getMax() {\n    return this.#max;\n  }\n\n  /**\n   * Set the threshold maximum.\n   *\n   * @param {number} val The threshold maximum.\n   */\n  setMax(val) {\n    this.#max = val;\n  }\n\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Threshold';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} image The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    const imageMin = image.getDataRange().min;\n    const threshFunction = (value) => {\n      if (value < this.getMin() || value > this.getMax()) {\n        return imageMin;\n      } else {\n        return value;\n      }\n    };\n    return image.transform(threshFunction);\n  }\n\n} // class Threshold\n\n/**\n * Sharpen an image using a sharpen convolution matrix.\n */\nexport class Sharpen {\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Sharpen';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} image The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    /* eslint-disable array-element-newline */\n    return image.convolute2D([\n      0, -1, 0,\n      -1, 5, -1,\n      0, -1, 0\n    ]);\n    /* eslint-enable array-element-newline */\n  }\n\n} // class Sharpen\n\n/**\n * Apply a Sobel filter to an image.\n */\nexport class Sobel {\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Sobel';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} image The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    /* eslint-disable array-element-newline */\n    const gradX = image.convolute2D([\n      1, 0, -1,\n      2, 0, -2,\n      1, 0, -1\n    ]);\n    const gradY = image.convolute2D([\n      1, 2, 1,\n      0, 0, 0,\n      -1, -2, -1\n    ]);\n    /* eslint-enable array-element-newline */\n    return gradX.compose(gradY, function (x, y) {\n      return Math.sqrt(x * x + y * y);\n    });\n  }\n\n} // class Sobel\n","import {ListenerHandler} from '../utils/listen';\nimport {\n  Threshold as ThresholdFilter,\n  Sobel as SobelFilter,\n  Sharpen as SharpenFilter\n} from '../image/filter';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Filter tool.\n */\nexport class Filter {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Filter list\n   *\n   * @type {object}\n   */\n  #filterList = null;\n\n  /**\n   * Selected filter.\n   *\n   * @type {object}\n   */\n  #selectedFilter = 0;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool Flag to activate or not.\n   */\n  activate(bool) {\n    // setup event listening\n    for (const key in this.#filterList) {\n      if (bool) {\n        this.#filterList[key].addEventListener('filterrun', this.#fireEvent);\n        this.#filterList[key].addEventListener('filter-undo', this.#fireEvent);\n      } else {\n        this.#filterList[key].removeEventListener(\n          'filterrun', this.#fireEvent);\n        this.#filterList[key].removeEventListener(\n          'filter-undo', this.#fireEvent);\n      }\n    }\n  }\n\n  /**\n   * Set the tool options.\n   *\n   * @param {object} options The list of filter names amd classes.\n   */\n  setOptions(options) {\n    this.#filterList = {};\n    // try to instanciate filters from the options\n    for (const key in options) {\n      this.#filterList[key] = new options[key](this.#app);\n    }\n  }\n\n  /**\n   * Get the type of tool options: here 'instance' since the filter\n   * list contains instances of each possible filter.\n   *\n   * @returns {string} The type.\n   */\n  getOptionsType() {\n    return 'instance';\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // setup event listening\n    for (const key in this.#filterList) {\n      this.#filterList[key].init();\n    }\n  }\n\n  /**\n   * Handle keydown event.\n   *\n   * @param {object} event The keydown event.\n   */\n  keydown = (event) => {\n    event.context = 'Filter';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['filterrun', 'filterundo'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get the selected filter.\n   *\n   * @returns {object} The selected filter.\n   */\n  getSelectedFilter() {\n    return this.#selectedFilter;\n  }\n\n  /**\n   * Set the tool live features: filter name.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.filterName !== 'undefined') {\n      // check if we have it\n      if (!this.hasFilter(features.filterName)) {\n        throw new Error('Unknown filter: \\'' + features.filterName + '\\'');\n      }\n      // de-activate last selected\n      if (this.#selectedFilter) {\n        this.#selectedFilter.activate(false);\n      }\n      // enable new one\n      this.#selectedFilter = this.#filterList[features.filterName];\n      // activate the selected filter\n      this.#selectedFilter.activate(true);\n    }\n    if (typeof features.run !== 'undefined' && features.run) {\n      let args = {};\n      if (typeof features.runArgs !== 'undefined') {\n        args = features.runArgs;\n      }\n      this.getSelectedFilter().run(args);\n    }\n  }\n\n  /**\n   * Get the list of filters.\n   *\n   * @returns {Array} The list of filter objects.\n   */\n  getFilterList() {\n    return this.#filterList;\n  }\n\n  /**\n   * Check if a filter is in the filter list.\n   *\n   * @param {string} name The name to check.\n   * @returns {string} The filter list element for the given name.\n   */\n  hasFilter(name) {\n    return this.#filterList[name];\n  }\n\n} // class Filter\n\n/**\n * Threshold filter tool.\n */\nexport class Threshold {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Associated filter.\n   *\n   * @type {object}\n   */\n  #filter = new ThresholdFilter();\n\n  /**\n   * Flag to know wether to reset the image or not.\n   *\n   * @type {boolean}\n   */\n  #resetImage = true;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} bool Flag to activate or not.\n   */\n  activate(bool) {\n    // reset the image when the tool is activated\n    if (bool) {\n      this.#resetImage = true;\n    }\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} args The filter arguments.\n   */\n  run(args) {\n    this.#filter.setMin(args.min);\n    this.#filter.setMax(args.max);\n    // reset the image if asked\n    if (this.#resetImage) {\n      this.#filter.setOriginalImage(this.#app.getLastImage());\n      this.#resetImage = false;\n    }\n    const command = new RunFilterCommand(this.#filter, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *  event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class Threshold\n\n/**\n * Sharpen filter tool.\n */\nexport class Sharpen {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} _bool Flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} _args The filter arguments.\n   */\n  run(_args) {\n    const filter = new SharpenFilter();\n    filter.setOriginalImage(this.#app.getLastImage());\n    const command = new RunFilterCommand(filter, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // filter.Sharpen\n\n/**\n * Sobel filter tool.\n */\nexport class Sobel {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} _bool Flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} _args The filter arguments.\n   */\n  run(_args) {\n    const filter = new SobelFilter();\n    filter.setOriginalImage(this.#app.getLastImage());\n    const command = new RunFilterCommand(filter, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *  event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class filter.Sobel\n\n/**\n * Run filter command.\n */\nexport class RunFilterCommand {\n\n  /**\n   * The filter to run.\n   *\n   * @type {object}\n   */\n  #filter;\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {object} filter The filter to run.\n   * @param {App} app The associated application.\n   */\n  constructor(filter, app) {\n    this.#filter = filter;\n    this.#app = app;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Filter-' + this.#filter.getName();\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires RunFilterCommand#filterrun\n   */\n  execute() {\n    // run filter and set app image\n    this.#app.setLastImage(this.#filter.update());\n    // update display\n    this.#app.render(0); //todo: fix\n    /**\n     * Filter run event.\n     *\n     * @event RunFilterCommand#filterrun\n     * @type {object}\n     * @property {string} type The event type: filterrun.\n     * @property {number} id The id of the run command.\n     */\n    const event = {\n      type: 'filterrun',\n      id: this.getName()\n    };\n    // callback\n    this.onExecute(event);\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires RunFilterCommand#filterundo\n   */\n  undo() {\n    // reset the image\n    this.#app.setLastImage(this.#filter.getOriginalImage());\n    // update display\n    this.#app.render(0); //todo: fix\n    /**\n     * Filter undo event.\n     *\n     * @event RunFilterCommand#filterundo\n     * @type {object}\n     * @property {string} type The event type: filterundo.\n     * @property {number} id The id of the undone run command.\n     */\n    const event = {\n      type: 'filterundo',\n      id: this.getName()\n    }; // callback\n    this.onUndo(event);\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // RunFilterCommand class\n","import {WindowLevel} from './windowLevel';\nimport {Scroll} from './scroll';\nimport {ZoomAndPan} from './zoomPan';\nimport {Opacity} from './opacity';\nimport {Draw} from './draw';\nimport {Floodfill} from './floodfill';\nimport {Livewire} from './livewire';\n\nimport {ArrowFactory} from './arrow';\nimport {CircleFactory} from './circle';\nimport {EllipseFactory} from './ellipse';\nimport {FreeHandFactory} from './freeHand';\nimport {ProtractorFactory} from './protractor';\nimport {RectangleFactory} from './rectangle';\nimport {RoiFactory} from './roi';\nimport {RulerFactory} from './ruler';\n\nimport {Filter, Threshold, Sobel, Sharpen} from './filter';\n\nexport const toolList = {\n  WindowLevel,\n  Scroll,\n  ZoomAndPan,\n  Opacity,\n  Draw,\n  Filter,\n  Floodfill,\n  Livewire\n};\n\nexport const toolOptions = {\n  draw: {\n    ArrowFactory,\n    CircleFactory,\n    EllipseFactory,\n    FreeHandFactory,\n    ProtractorFactory,\n    RectangleFactory,\n    RoiFactory,\n    RulerFactory\n  },\n  filter: {\n    Threshold,\n    Sobel,\n    Sharpen\n  }\n};","import {Point2D} from '../math/point';\nimport {Line, getPerpendicularLine, getAngle} from '../math/line';\nimport {getDefaultAnchor} from './editor';\n\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultArrowLabelText = '';\n\n/**\n * Arrow factory.\n */\nexport class ArrowFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'line-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create an arrow shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the line.\n   * @param {object} style The drawing style.\n   * @param {object} _viewController The associated view controller.\n   * @returns {object} The Konva object.\n   */\n  create(points, style, _viewController) {\n    // physical shape\n    const line = new Line(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Line({\n      points: [line.getBegin().getX(),\n        line.getBegin().getY(),\n        line.getEnd().getX(),\n        line.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // larger hitfunc\n    const linePerp0 = getPerpendicularLine(\n      line, points[0], style.scale(10));\n    const linePerp1 = getPerpendicularLine(\n      line, points[1], style.scale(10));\n    kshape.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kshape);\n    });\n    // triangle\n    const beginTy = new Point2D(\n      line.getBegin().getX(),\n      line.getBegin().getY() - 10);\n    const verticalLine = new Line(line.getBegin(), beginTy);\n    const angle = getAngle(line, verticalLine);\n    const angleRad = angle * Math.PI / 180;\n    const radius = 5 * style.getScaledStrokeWidth();\n    const kpoly = new Konva.RegularPolygon({\n      x: line.getBegin().getX() + radius * Math.sin(angleRad),\n      y: line.getBegin().getY() + radius * Math.cos(angleRad),\n      sides: 3,\n      radius: radius,\n      rotation: -angle,\n      fill: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-triangle'\n    });\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // TODO: allow override?\n    // if (typeof arrowLabelText !== 'undefined') {\n    //   textExpr = arrowLabelText;\n    // } else {\n    textExpr = defaultArrowLabelText;\n    // }\n    ktext.setText(textExpr);\n    // augment text with meta data\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n    // label\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const klabel = new Konva.Label({\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y,\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kpoly);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update an arrow shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update an arrow shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated triangle shape\n    const ktriangle = group.getChildren(function (node) {\n      return node.name() === 'shape-triangle';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n      // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, ex, ey]);\n    // new line\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(end.x(), end.y());\n    const line = new Line(p2d0, p2d1);\n    // larger hitfunc\n    const p2b = new Point2D(bx, by);\n    const p2e = new Point2D(ex, ey);\n    const linePerp0 = getPerpendicularLine(line, p2b, 10);\n    const linePerp1 = getPerpendicularLine(line, p2e, 10);\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n    // udate triangle\n    const beginTy = new Point2D(\n      line.getBegin().getX(),\n      line.getBegin().getY() - 10);\n    const verticalLine = new Line(line.getBegin(), beginTy);\n    const angle = getAngle(line, verticalLine);\n    const angleRad = angle * Math.PI / 180;\n    ktriangle.x(\n      line.getBegin().getX() + ktriangle.radius() * Math.sin(angleRad));\n    ktriangle.y(\n      line.getBegin().getY() + ktriangle.radius() * Math.cos(angleRad));\n    ktriangle.rotation(-angle);\n\n    // update text\n    const ktext = klabel.getText();\n    ktext.setText(ktext.meta.textExpr);\n    // update position\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const textPos = {\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n  }\n\n} // class ArrowFactory\n","import {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultFreeHandLabelText = '';\n\n/**\n * FreeHand factory.\n */\nexport class FreeHandFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'freeHand-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number|undefined} The number of points.\n   */\n  getNPoints() {\n    // undefined to end with double click\n    return undefined;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 25;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a roi shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the line.\n   * @param {object} style The drawing style.\n   * @param {object} _viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(\n    points, style, _viewController) {\n    // points stored the Konvajs way\n    const arr = [];\n    for (let i = 0; i < points.length; ++i) {\n      arr.push(points[i].getX());\n      arr.push(points[i].getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: arr,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape',\n      tension: 0.5\n    });\n\n    // text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // TODO: allow override?\n    // if (typeof freeHandLabelText !== 'undefined') {\n    //   textExpr = freeHandLabelText;\n    // } else {\n    textExpr = defaultFreeHandLabelText;\n    // }\n    ktext.setText(textExpr);\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n\n    // label\n    const klabel = new Konva.Label({\n      x: points[0].getX(),\n      y: points[0].getY() + style.scale(10),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a free hand shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    for (let i = 0; i < points.length; i = i + 2) {\n      const px = points[i] + shape.x();\n      const py = points[i + 1] + shape.y();\n      const name = i.toString();\n      anchors.push(getDefaultAnchor(\n        px, py, name, style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Update a FreeHand shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n\n    // update self\n    const point = group.getChildren(function (node) {\n      return node.id() === anchor.id();\n    })[0];\n    point.x(anchor.x());\n    point.y(anchor.y());\n    // update the roi point and compensate for possible drag\n    // (the anchor id is the index of the point in the list)\n    const points = kline.points();\n    points[anchor.id()] = anchor.x() - kline.x();\n    points[anchor.id() + 1] = anchor.y() - kline.y();\n    // concat to make Konva think it is a new array\n    kline.points(points.concat());\n\n    // update text\n    const ktext = klabel.getText();\n    ktext.setText(ktext.meta.textExpr);\n    // update position\n    const textPos = {\n      x: points[0] + kline.x(),\n      y: points[1] + kline.y() + style.scale(10)\n    };\n    klabel.position(textPos);\n  }\n\n} // class FreeHandFactory\n","import {Line, getAngle} from '../math/line';\nimport {Point2D} from '../math/point';\nimport {replaceFlags} from '../utils/string';\nimport {i18n} from '../utils/i18n';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultProtractorLabelText = '{angle}';\n\n/**\n * Protractor factory.\n */\nexport class ProtractorFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'protractor-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 3;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 500;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a protractor shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the protractor.\n   * @param {object} style The drawing style.\n   * @param {object} _viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(points, style, _viewController) {\n    // physical shape\n    const line0 = new Line(points[0], points[1]);\n    // points stored the Konvajs way\n    const pointsArray = [];\n    for (let i = 0; i < points.length; ++i) {\n      pointsArray.push(points[i].getX());\n      pointsArray.push(points[i].getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: pointsArray,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    // text and decoration\n    if (points.length === 3) {\n      const line1 = new Line(points[1], points[2]);\n      // larger hitfunc\n      kshape.hitFunc(function (context) {\n        context.beginPath();\n        context.moveTo(points[0].getX(), points[0].getY());\n        context.lineTo(points[1].getX(), points[1].getY());\n        context.lineTo(points[2].getX(), points[2].getY());\n        context.closePath();\n        context.fillStrokeShape(kshape);\n      });\n      // quantification\n      let angle = getAngle(line0, line1);\n      let inclination = line0.getInclination();\n      if (angle > 180) {\n        angle = 360 - angle;\n        inclination += angle;\n      }\n\n      // quantification\n      const ktext = new Konva.Text({\n        fontSize: style.getFontSize(),\n        fontFamily: style.getFontFamily(),\n        fill: style.getLineColour(),\n        padding: style.getTextPadding(),\n        shadowColor: style.getShadowLineColour(),\n        shadowOffset: style.getShadowOffset(),\n        name: 'text'\n      });\n      let textExpr = '';\n      // TODO: allow override?\n      // if (typeof protractorLabelText !== 'undefined') {\n      //   textExpr = protractorLabelText;\n      // } else {\n      textExpr = defaultProtractorLabelText;\n      // }\n      const quant = {\n        angle: {\n          value: angle,\n          unit: i18n.t('unit.degree')\n        }\n      };\n      ktext.setText(replaceFlags(textExpr, quant));\n      // augment text with meta\n      // @ts-ignore\n      ktext.meta = {\n        textExpr: textExpr,\n        quantification: quant\n      };\n\n      // label\n      const midX =\n        (line0.getMidpoint().getX() + line1.getMidpoint().getX()) / 2;\n      const midY =\n        (line0.getMidpoint().getY() + line1.getMidpoint().getY()) / 2;\n      const klabel = new Konva.Label({\n        x: midX,\n        y: midY - style.applyZoomScale(15).y,\n        scale: style.applyZoomScale(1),\n        visible: textExpr.length !== 0,\n        name: 'label'\n      });\n      klabel.add(ktext);\n      klabel.add(new Konva.Tag({\n        fill: style.getLineColour(),\n        opacity: style.getTagOpacity()\n      }));\n\n      // arc\n      const radius = Math.min(line0.getLength(), line1.getLength()) * 33 / 100;\n      const karc = new Konva.Arc({\n        innerRadius: radius,\n        outerRadius: radius,\n        stroke: style.getLineColour(),\n        strokeWidth: style.getStrokeWidth(),\n        strokeScaleEnabled: false,\n        angle: angle,\n        rotation: -inclination,\n        x: points[1].getX(),\n        y: points[1].getY(),\n        name: 'shape-arc'\n      });\n      // add to group\n      group.add(klabel);\n      group.add(karc);\n    }\n    // add shape to group\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    // return group\n    return group;\n  }\n\n  /**\n   * Get anchors to update a protractor shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'mid', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[4] + shape.x(), points[5] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a protractor shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // associated arc\n    const karc = group.getChildren(function (node) {\n      return node.name() === 'shape-arc';\n    })[0];\n      // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const mid = group.getChildren(function (node) {\n      return node.id() === 'mid';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n      // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'mid':\n      mid.x(anchor.x());\n      mid.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const mx = mid.x() - kline.x();\n    const my = mid.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, mx, my, ex, ey]);\n    // larger hitfunc\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(bx, by);\n      context.lineTo(mx, my);\n      context.lineTo(ex, ey);\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n    // update text\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(mid.x(), mid.y());\n    const p2d2 = new Point2D(end.x(), end.y());\n    const line0 = new Line(p2d0, p2d1);\n    const line1 = new Line(p2d1, p2d2);\n    let angle = getAngle(line0, line1);\n    let inclination = line0.getInclination();\n    if (angle > 180) {\n      angle = 360 - angle;\n      inclination += angle;\n    }\n\n    // update text\n    const ktext = klabel.getText();\n    const quantification = {\n      angle: {value: angle, unit: i18n.t('unit.degree')}\n    };\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\n    // update meta\n    ktext.meta.quantification = quantification;\n    // update position\n    const midX = (line0.getMidpoint().getX() + line1.getMidpoint().getX()) / 2;\n    const midY = (line0.getMidpoint().getY() + line1.getMidpoint().getY()) / 2;\n    const textPos = {\n      x: midX,\n      y: midY - style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n\n    // arc\n    const radius = Math.min(line0.getLength(), line1.getLength()) * 33 / 100;\n    karc.innerRadius(radius);\n    karc.outerRadius(radius);\n    karc.angle(angle);\n    karc.rotation(-inclination);\n    const arcPos = {x: mid.x(), y: mid.y()};\n    karc.position(arcPos);\n  }\n\n} // class ProtractorFactory\n","import {Line, getPerpendicularLine} from '../math/line';\nimport {Point2D} from '../math/point';\nimport {replaceFlags} from '../utils/string';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultRulerLabelText = '{length}';\n\n/**\n * Ruler factory.\n */\nexport class RulerFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'ruler-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a ruler shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the line.\n   * @param {object} style The drawing style.\n   * @param {object} viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const line = new Line(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Line({\n      points: [line.getBegin().getX(),\n        line.getBegin().getY(),\n        line.getEnd().getX(),\n        line.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n\n    const tickLen = style.scale(10);\n\n    // tick begin\n    const linePerp0 = getPerpendicularLine(line, points[0], tickLen);\n    const ktick0 = new Konva.Line({\n      points: [linePerp0.getBegin().getX(),\n        linePerp0.getBegin().getY(),\n        linePerp0.getEnd().getX(),\n        linePerp0.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-tick0'\n    });\n\n    // tick end\n    const linePerp1 = getPerpendicularLine(line, points[1], tickLen);\n    const ktick1 = new Konva.Line({\n      points: [linePerp1.getBegin().getX(),\n        linePerp1.getBegin().getY(),\n        linePerp1.getEnd().getX(),\n        linePerp1.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-tick1'\n    });\n\n    // larger hitfunc\n    kshape.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kshape);\n    });\n\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // TODO: allow override?\n    // if (typeof rulerLabelText !== 'undefined') {\n    //   textExpr = rulerLabelText;\n    // } else {\n    textExpr = defaultRulerLabelText;\n    // }\n    const quant = line.quantify(viewController);\n    ktext.setText(replaceFlags(textExpr, quant));\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n\n    // label\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const klabel = new Konva.Label({\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y,\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(ktick0);\n    group.add(ktick1);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a ruler shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a ruler shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} viewController The associated view controller.\n   */\n  update(anchor, style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated tick0\n    const ktick0 = group.getChildren(function (node) {\n      return node.name() === 'shape-tick0';\n    })[0];\n      // associated tick1\n    const ktick1 = group.getChildren(function (node) {\n      return node.name() === 'shape-tick1';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n      // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, ex, ey]);\n    // new line\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(end.x(), end.y());\n    const line = new Line(p2d0, p2d1);\n    // tick\n    const p2b = new Point2D(bx, by);\n    const p2e = new Point2D(ex, ey);\n    const linePerp0 = getPerpendicularLine(line, p2b, style.scale(10));\n    ktick0.points([linePerp0.getBegin().getX(),\n      linePerp0.getBegin().getY(),\n      linePerp0.getEnd().getX(),\n      linePerp0.getEnd().getY()]);\n    const linePerp1 = getPerpendicularLine(line, p2e, style.scale(10));\n    ktick1.points([linePerp1.getBegin().getX(),\n      linePerp1.getBegin().getY(),\n      linePerp1.getEnd().getX(),\n      linePerp1.getEnd().getY()]);\n    // larger hitfunc\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n\n    // update text\n    const ktext = klabel.getText();\n    const quantification = line.quantify(viewController);\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\n    // update meta\n    ktext.meta.quantification = quantification;\n    // update position\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const textPos = {\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n  }\n\n} // class RulerFactory\n","import {viewEventNames} from '../image/view';\nimport {ViewFactory} from '../image/viewFactory';\nimport {lut} from '../image/luts';\nimport {getMatrixFromName} from '../math/matrix';\nimport {Point3D} from '../math/point';\nimport {Stage} from '../gui/stage';\nimport {Style} from '../gui/style';\nimport {getViewOrientation} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {State} from '../io/state';\nimport {logger} from '../utils/logger';\nimport {getUriQuery, decodeQuery} from '../utils/uri';\nimport {UndoStack} from '../tools/undo';\nimport {ToolboxController} from './toolboxController';\nimport {LoadController} from './loadController';\nimport {DataController} from './dataController';\n\nimport {toolList, toolOptions} from '../tools';\nimport {binderList} from '../gui/stage';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {LayerGroup} from '../gui/layerGroup';\nimport {Image} from '../image/image';\n/* eslint-enable no-unused-vars */\n\n/**\n * Main application class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]}\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class App {\n\n  // app options\n  #options = null;\n\n  // data controller\n  #dataController = null;\n\n  // toolbox controller\n  #toolboxController = null;\n\n  // load controller\n  #loadController = null;\n\n  // stage\n  #stage = null;\n\n  // UndoStack\n  #undoStack = null;\n\n  // Generic style\n  #style = new Style();\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the image.\n   *\n   * @param {number} index The data index.\n   * @returns {Image} The associated image.\n   */\n  getImage(index) {\n    return this.#dataController.get(index).image;\n  }\n\n  /**\n   * Get the last loaded image.\n   *\n   * @returns {Image} The image.\n   */\n  getLastImage() {\n    return this.#dataController.get(this.#dataController.length() - 1).image;\n  }\n\n  /**\n   * Set the image at the given index.\n   *\n   * @param {number} index The data index.\n   * @param {Image} img The associated image.\n   */\n  setImage(index, img) {\n    this.#dataController.setImage(index, img);\n  }\n\n  /**\n   * Set the last image.\n   *\n   * @param {Image} img The associated image.\n   */\n  setLastImage(img) {\n    this.#dataController.setImage(this.#dataController.length() - 1, img);\n  }\n\n  /**\n   * Add a new image.\n   *\n   * @param {Image} image The new image.\n   * @param {object} meta The image meta.\n   * @returns {number} The new image id.\n   */\n  addNewImage(image, meta) {\n    const id = this.#dataController.length();\n\n    // load start event\n    this.#fireEvent({\n      type: 'loadstart',\n      loadtype: 'image',\n      source: 'internal',\n      loadid: id\n    });\n\n    // add image to data controller\n    this.#dataController.addNew(id, image, meta);\n\n    // load item event\n    this.#fireEvent({\n      type: 'loaditem',\n      loadtype: 'image',\n      data: meta,\n      source: 'internal',\n      loadid: id,\n      isfirstitem: true\n    });\n\n    // optional render\n    if (this.#options.viewOnFirstLoadItem) {\n      this.render(id);\n    }\n\n    // load events\n    this.#fireEvent({\n      type: 'load',\n      loadtype: 'image',\n      source: 'internal',\n      loadid: id\n    });\n    this.#fireEvent({\n      type: 'loadend',\n      loadtype: 'image',\n      source: 'internal',\n      loadid: id\n    });\n\n    return id;\n  }\n\n  /**\n   * Get the meta data.\n   *\n   * @param {number} index The data index.\n   * @returns {object} The list of meta data.\n   */\n  getMetaData(index) {\n    return this.#dataController.get(index).meta;\n  }\n\n  /**\n   * Get the number of loaded data.\n   *\n   * @returns {number} The number.\n   */\n  getNumberOfLoadedData() {\n    return this.#dataController.length();\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @returns {boolean} True if the data has a third dimension greater than one.\n   */\n  canScroll() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    return controller.canScroll();\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if the data is monochrome.\n   */\n  canWindowLevel() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    return controller.canWindowLevel();\n  }\n\n  /**\n   * Get the layer scale on top of the base scale.\n   *\n   * @returns {object} The scale as {x,y}.\n   */\n  getAddedScale() {\n    return this.#stage.getActiveLayerGroup().getAddedScale();\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {object} The scale as {x,y}.\n   */\n  getBaseScale() {\n    return this.#stage.getActiveLayerGroup().getBaseScale();\n  }\n\n  /**\n   * Get the layer offset.\n   *\n   * @returns {object} The offset.\n   */\n  getOffset() {\n    return this.#stage.getActiveLayerGroup().getOffset();\n  }\n\n  /**\n   * Get the toolbox controller.\n   *\n   * @returns {object} The controller.\n   */\n  getToolboxController() {\n    return this.#toolboxController;\n  }\n\n  /**\n   * Get the active layer group.\n   * The layer is available after the first loaded item.\n   *\n   * @returns {LayerGroup} The layer group.\n   */\n  getActiveLayerGroup() {\n    return this.#stage.getActiveLayerGroup();\n  }\n\n  /**\n   * Get the view layers associated to a data index.\n   * The layer are available after the first loaded item.\n   *\n   * @param {number} index The data index.\n   * @returns {Array} The layers.\n   */\n  getViewLayersByDataIndex(index) {\n    return this.#stage.getViewLayersByDataIndex(index);\n  }\n\n  /**\n   * Get the draw layers associated to a data index.\n   * The layer are available after the first loaded item.\n   *\n   * @param {number} index The data index.\n   * @returns {Array} The layers.\n   */\n  getDrawLayersByDataIndex(index) {\n    return this.#stage.getDrawLayersByDataIndex(index);\n  }\n\n  /**\n   * Get a layer group by div id.\n   * The layer is available after the first loaded item.\n   *\n   * @param {string} divId The div id.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroupByDivId(divId) {\n    return this.#stage.getLayerGroupByDivId(divId);\n  }\n\n  /**\n   * Get the number of layer groups.\n   *\n   * @returns {number} The number of groups.\n   */\n  getNumberOfLayerGroups() {\n    return this.#stage.getNumberOfLayerGroups();\n  }\n\n  /**\n   * Get the app style.\n   *\n   * @returns {object} The app style.\n   */\n  getStyle() {\n    return this.#style;\n  }\n\n  /**\n   * Add a command to the undo stack.\n   *\n   * @param {object} cmd The command to add.\n   * @fires UndoStack#undoadd\n   */\n  addToUndoStack = (cmd) => {\n    if (this.#undoStack !== null) {\n      this.#undoStack.add(cmd);\n    }\n  };\n\n  /**\n   * Initialise the application.\n   *\n   * @param {object} opt The application option with:\n   * - `dataViewConfigs`: data indexed object containing the data view\n   *   configurations in the form of a list of objects containing:\n   *   - divId: the HTML div id\n   *   - orientation: optional 'axial', 'coronal' or 'sagittal' orientation\n   *     string (default undefined keeps the original slice order)\n   * - `binders`: array of layerGroup binders\n   * - `tools`: tool name indexed object containing individual tool\n   *   configurations in the form of a list of objects containing:\n   *   - options: array of tool options\n   * - `viewOnFirstLoadItem`: boolean flag to trigger the first data render\n   *   after the first loaded data or not\n   * - `defaultCharacterSet`: the default chraracter set string used for DICOM\n   *   parsing\n   * @example\n   * // create the dwv app\n   * const app = new dwv.App();\n   * // initialise\n   * app.init({\n   *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n   *   viewOnFirstLoadItem: false\n   * });\n   * // render button\n   * const button = document.createElement('button');\n   * button.id = 'render';\n   * button.disabled = true;\n   * button.appendChild(document.createTextNode('render'));\n   * document.body.appendChild(button);\n   * app.addEventListener('load', function () {\n   *   const button = document.getElementById('render');\n   *   button.disabled = false;\n   *   button.onclick = function () {\n   *     // render data #0\n   *     app.render(0);\n   *   };\n   * });\n   * // load dicom data\n   * app.loadURLs([\n   *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n   * ]);\n   */\n  init(opt) {\n    // store\n    this.#options = opt;\n    // defaults\n    if (typeof this.#options.viewOnFirstLoadItem === 'undefined') {\n      this.#options.viewOnFirstLoadItem = true;\n    }\n\n    // undo stack\n    this.#undoStack = new UndoStack();\n    this.#undoStack.addEventListener('undoadd', this.#fireEvent);\n    this.#undoStack.addEventListener('undo', this.#fireEvent);\n    this.#undoStack.addEventListener('redo', this.#fireEvent);\n\n    // tools\n    if (this.#options.tools && this.#options.tools.length !== 0) {\n      // setup the tool list\n      const appToolList = {};\n      const keys = Object.keys(this.#options.tools);\n      for (let t = 0; t < keys.length; ++t) {\n        const toolName = keys[t];\n        // find the tool in the Tools list\n        if (typeof toolList[toolName] !== 'undefined') {\n          // create tool instance\n          appToolList[toolName] = new toolList[toolName](this);\n          // register listeners\n          if (typeof appToolList[toolName].addEventListener !== 'undefined') {\n            const names = appToolList[toolName].getEventNames();\n            for (let j = 0; j < names.length; ++j) {\n              appToolList[toolName].addEventListener(names[j], this.#fireEvent);\n            }\n          }\n          // tool options\n          const toolParams = this.#options.tools[toolName];\n          if (typeof toolParams.options !== 'undefined') {\n            let type = 'raw';\n            if (typeof appToolList[toolName].getOptionsType !== 'undefined') {\n              type = appToolList[toolName].getOptionsType();\n            }\n            let appToolOptions = toolParams.options;\n            if (type === 'instance' || type === 'factory') {\n              appToolOptions = {};\n              for (let i = 0; i < toolParams.options.length; ++i) {\n                const optionName = toolParams.options[i];\n                let optionClassName = optionName;\n                if (type === 'factory') {\n                  optionClassName += 'Factory';\n                }\n                const toolNamespace = toolName.charAt(0).toLowerCase() +\n                  toolName.slice(1);\n                if (typeof toolOptions[toolNamespace][optionClassName] !==\n                  'undefined') {\n                  appToolOptions[optionName] =\n                    toolOptions[toolNamespace][optionClassName];\n                } else {\n                  logger.warn('Could not find option class for: ' +\n                    optionName);\n                }\n              }\n            }\n            appToolList[toolName].setOptions(appToolOptions);\n          }\n        } else {\n          logger.warn('Could not initialise unknown tool: ' + toolName);\n        }\n      }\n      // add tools to the controller\n      this.#toolboxController = new ToolboxController(appToolList);\n    }\n\n    // create load controller\n    this.#loadController =\n      new LoadController(this.#options.defaultCharacterSet);\n    this.#loadController.onloadstart = this.#onloadstart;\n    this.#loadController.onprogress = this.#onloadprogress;\n    this.#loadController.onloaditem = this.#onloaditem;\n    this.#loadController.onload = this.#onload;\n    this.#loadController.onloadend = this.#onloadend;\n    this.#loadController.onerror = this.#onloaderror;\n    this.#loadController.onabort = this.#onloadabort;\n\n    // create data controller\n    this.#dataController = new DataController();\n    // create stage\n    this.#stage = new Stage();\n    if (typeof this.#options.binders !== 'undefined') {\n      this.#stage.setBinders(this.#options.binders);\n    }\n  }\n\n  /**\n   * Reset the application.\n   */\n  reset() {\n    // clear objects\n    this.#dataController.reset();\n    this.#stage.empty();\n    // reset undo/redo\n    if (this.#undoStack) {\n      this.#undoStack = new UndoStack();\n      this.#undoStack.addEventListener('undoadd', this.#fireEvent);\n      this.#undoStack.addEventListener('undo', this.#fireEvent);\n      this.#undoStack.addEventListener('redo', this.#fireEvent);\n    }\n  }\n\n  /**\n   * Reset the layout of the application.\n   */\n  resetLayout() {\n    this.#stage.reset();\n    this.#stage.draw();\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  // load API [begin] -------------------------------------------------------\n\n  /**\n   * Load a list of files. Can be image files or a state file.\n   *\n   * @param {FileList} files The list of files to load.\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#loaderror\n   * @fires App#loadabort\n   */\n  loadFiles = (files) => {\n    if (files.length === 0) {\n      logger.warn('Ignoring empty input file list.');\n      return;\n    }\n    this.#loadController.loadFiles(files);\n  };\n\n  /**\n   * Load a list of URLs. Can be image files or a state file.\n   *\n   * @param {Array} urls The list of urls to load.\n   * @param {object} [options] The options object, can contain:\n   *  - requestHeaders: an array of {name, value} to use as request headers\n   *  - withCredentials: boolean xhr.withCredentials flag to pass to the request\n   *  - batchSize: the size of the request url batch\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#loaderror\n   * @fires App#loadabort\n   */\n  loadURLs = (urls, options) => {\n    if (urls.length === 0) {\n      logger.warn('Ignoring empty input url list.');\n      return;\n    }\n    this.#loadController.loadURLs(urls, options);\n  };\n\n  /**\n   * Load from an input uri.\n   *\n   * @param {string} uri The input uri, for example: 'window.location.href'.\n   * @param {object} [options] Optional url request options.\n   */\n  loadFromUri = (uri, options) => {\n    const query = getUriQuery(uri);\n\n    // load end callback: loads the state.\n    const onLoadEnd = (/*event*/) => {\n      this.removeEventListener('loadend', onLoadEnd);\n      this.loadURLs([query.state]);\n    };\n\n    // check query\n    if (query && typeof query.input !== 'undefined') {\n      // optional display state\n      if (typeof query.state !== 'undefined') {\n        // queue after main data load\n        this.addEventListener('loadend', onLoadEnd);\n      }\n      // load base image\n      decodeQuery(query, this.loadURLs, options);\n    }\n    // no else to allow for empty uris\n  };\n\n  /**\n   * Load a list of ArrayBuffers.\n   *\n   * @param {Array} data The list of ArrayBuffers to load\n   *   in the form of [{name: \"\", filename: \"\", data: data}].\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#loaderror\n   * @fires App#loadabort\n   */\n  loadImageObject = (data) => {\n    this.#loadController.loadImageObject(data);\n  };\n\n  /**\n   * Abort the current load.\n   */\n  abortLoad() {\n    this.#loadController.abort();\n  }\n\n  // load API [end] ---------------------------------------------------------\n\n  /**\n   * Fit the display to the data of each layer group.\n   * To be called once the image is loaded.\n   */\n  fitToContainer() {\n    this.#stage.syncLayerGroupScale();\n  }\n\n  /**\n   * Init the Window/Level display\n   */\n  initWLDisplay() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    controller.initialise();\n  }\n\n  /**\n   * Get the layer group configuration from a data index.\n   * Defaults to div id 'layerGroup' if no association object has been set.\n   *\n   * @param {number} dataIndex The data index.\n   * @returns {Array} The list of associated configs.\n   */\n  #getViewConfigs(dataIndex) {\n    // check options\n    if (this.#options.dataViewConfigs === null ||\n      typeof this.#options.dataViewConfigs === 'undefined') {\n      throw new Error('No available data view configuration');\n    }\n    let configs = [];\n    if (typeof this.#options.dataViewConfigs['*'] !== 'undefined') {\n      configs = this.#options.dataViewConfigs['*'];\n    } else if (\n      typeof this.#options.dataViewConfigs[dataIndex] !== 'undefined') {\n      configs = this.#options.dataViewConfigs[dataIndex];\n    }\n    return configs;\n  }\n\n  /**\n   * Get the data view config.\n   * Carefull, returns a reference, do not modify without resetting.\n   *\n   * @returns {object} The configuration list.\n   */\n  getDataViewConfig() {\n    return this.#options.dataViewConfigs;\n  }\n\n  /**\n   * Set the data view configuration (see the init options for details).\n   *\n   * @param {object} configs The configuration list.\n   */\n  setDataViewConfig(configs) {\n    // clean up\n    this.#stage.empty();\n    // set new\n    this.#options.dataViewConfigs = configs;\n    // create layer groups\n    this.#createLayerGroups(configs);\n  }\n\n  /**\n   * Create layer groups according to a data view config:\n   * adds them to stage and bind them.\n   *\n   * @param {object} dataViewConfigs The data view config.\n   */\n  #createLayerGroups(dataViewConfigs) {\n    const dataKeys = Object.keys(dataViewConfigs);\n    const divIds = [];\n    for (let i = 0; i < dataKeys.length; ++i) {\n      const dataConfigs = dataViewConfigs[dataKeys[i]];\n      for (let j = 0; j < dataConfigs.length; ++j) {\n        const viewConfig = dataConfigs[j];\n        // view configs can contain the same divIds, avoid duplicating\n        if (!divIds.includes(viewConfig.divId)) {\n          // create new layer group\n          const element = document.getElementById(viewConfig.divId);\n          const layerGroup = this.#stage.addLayerGroup(element);\n          // bind events\n          this.#bindLayerGroupToApp(layerGroup);\n          // optional orientation\n          if (typeof viewConfig.orientation !== 'undefined') {\n            layerGroup.setTargetOrientation(\n              getMatrixFromName(viewConfig.orientation));\n          }\n          divIds.push(viewConfig.divId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Set the layer groups binders.\n   *\n   * @param {Array} list The list of binder names.\n   */\n  setLayerGroupsBinders(list) {\n    // create instances\n    const instances = [];\n    for (let i = 0; i < list.length; ++i) {\n      if (typeof binderList[list[i]] !== 'undefined') {\n        instances.push(new binderList[list[i]]);\n      }\n    }\n    // pass to stage\n    this.#stage.setBinders(instances);\n  }\n\n  /**\n   * Render the current data.\n   *\n   * @param {number} dataIndex The data index to render.\n   */\n  render(dataIndex) {\n    if (typeof dataIndex === 'undefined' || dataIndex === null) {\n      throw new Error('Cannot render without data index');\n    }\n\n    // create layer groups if not done yet\n    // (create all to allow for ratio sync)\n    if (this.#stage.getNumberOfLayerGroups() === 0) {\n      this.#createLayerGroups(this.#options.dataViewConfigs);\n    }\n\n    // loop on all configs\n    const viewConfigs = this.#getViewConfigs(dataIndex);\n    // nothing to do if no view config\n    if (viewConfigs.length === 0) {\n      logger.info('Not rendering data: ' + dataIndex +\n        ' (no data view config)');\n      return;\n    }\n    for (let i = 0; i < viewConfigs.length; ++i) {\n      const config = viewConfigs[i];\n      const layerGroup =\n      this.#stage.getLayerGroupByDivId(config.divId);\n      // layer group must exist\n      if (!layerGroup) {\n        throw new Error('No layer group for ' + config.divId);\n      }\n      // initialise or add view\n      // warn: needs a loaded DOM\n      if (layerGroup.getViewLayersByDataIndex(dataIndex).length === 0) {\n        if (layerGroup.getNumberOfLayers() === 0) {\n          this.#initialiseBaseLayers(dataIndex, config);\n        } else {\n          this.#addViewLayer(dataIndex, config);\n        }\n      }\n      // draw\n      layerGroup.draw();\n    }\n  }\n\n  /**\n   * Zoom to the layers.\n   *\n   * @param {number} step The step to add to the current zoom.\n   * @param {number} cx The zoom center X coordinate.\n   * @param {number} cy The zoom center Y coordinate.\n   */\n  zoom(step, cx, cy) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    const viewController = layerGroup.getActiveViewLayer().getViewController();\n    const k = viewController.getCurrentScrollPosition();\n    const center = new Point3D(cx, cy, k);\n    layerGroup.addScale(step, center);\n    layerGroup.draw();\n  }\n\n  /**\n   * Apply a translation to the layers.\n   *\n   * @param {number} tx The translation along X.\n   * @param {number} ty The translation along Y.\n   */\n  translate(tx, ty) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    layerGroup.addTranslation({x: tx, y: ty});\n    layerGroup.draw();\n  }\n\n  /**\n   * Set the image layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    viewLayer.setOpacity(alpha);\n    viewLayer.draw();\n  }\n\n  /**\n   * Set the drawings on the current stage.\n   *\n   * @param {Array} drawings An array of drawings.\n   * @param {Array} drawingsDetails An array of drawings details.\n   */\n  setDrawings(drawings, drawingsDetails) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const drawController =\n      layerGroup.getActiveDrawLayer().getDrawController();\n\n    drawController.setDrawings(\n      drawings, drawingsDetails, this.#fireEvent, this.addToUndoStack);\n\n    drawController.activateDrawLayer(\n      viewController.getCurrentOrientedIndex(),\n      viewController.getScrollIndex());\n  }\n\n  /**\n   * Get the JSON state of the app.\n   *\n   * @returns {object} The state of the app as a JSON object.\n   */\n  getState() {\n    const state = new State();\n    return state.toJSON(this);\n  }\n\n  // Handler Methods -----------------------------------------------------------\n\n  /**\n   * Handle resize: fit the display to the window.\n   * To be called once the image is loaded.\n   * Can be connected to a window 'resize' event.\n   */\n  onResize = () => {\n    this.fitToContainer();\n  };\n\n  /**\n   * Key down callback. Meant to be used in tools.\n   *\n   * @param {KeyboardEvent} event The key down event.\n   * @fires App#keydown\n   */\n  onKeydown = (event) => {\n    /**\n     * Key down event.\n     *\n     * @event App#keydown\n     * @type {KeyboardEvent}\n     * @property {string} type The event type: keydown.\n     * @property {string} context The tool where the event originated.\n     */\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Key down event handler example.\n   * - CRTL-Z: undo\n   * - CRTL-Y: redo\n   * - CRTL-ARROW_LEFT: next element on fourth dim\n   * - CRTL-ARROW_UP: next element on third dim\n   * - CRTL-ARROW_RIGHT: previous element on fourth dim\n   * - CRTL-ARROW_DOWN: previous element on third dim\n   *\n   * @param {KeyboardEvent} event The key down event.\n   * @fires UndoStack#undo\n   * @fires UndoStack#redo\n   */\n  defaultOnKeydown = (event) => {\n    if (event.ctrlKey) {\n      if (event.shiftKey) {\n        const viewController =\n          this.#stage.getActiveLayerGroup()\n            .getActiveViewLayer().getViewController();\n        const size = viewController.getImageSize();\n        if (event.key === 'ArrowLeft') { // crtl-shift-arrow-left\n          if (size.moreThanOne(3)) {\n            viewController.decrementIndex(3);\n          }\n        } else if (event.key === 'ArrowUp') { // crtl-shift-arrow-up\n          if (viewController.canScroll()) {\n            viewController.incrementScrollIndex();\n          }\n        } else if (event.key === 'ArrowRight') { // crtl-shift-arrow-right\n          if (size.moreThanOne(3)) {\n            viewController.incrementIndex(3);\n          }\n        } else if (event.key === 'ArrowDown') { // crtl-shift-arrow-down\n          if (viewController.canScroll()) {\n            viewController.decrementScrollIndex();\n          }\n        }\n      } else if (event.key === 'y') { // crtl-y\n        this.#undoStack.redo();\n      } else if (event.key === 'z') { // crtl-z\n        this.#undoStack.undo();\n      } else if (event.key === ' ') { // crtl-space\n        for (let i = 0; i < this.#stage.getNumberOfLayerGroups(); ++i) {\n          this.#stage.getLayerGroup(i).setShowCrosshair(\n            !this.#stage.getLayerGroup(i).getShowCrosshair()\n          );\n        }\n      }\n    }\n  };\n\n  // Internal members shortcuts-----------------------------------------------\n\n  /**\n   * Reset the display\n   */\n  resetDisplay() {\n    this.resetLayout();\n    this.initWLDisplay();\n  }\n\n  /**\n   * Reset the app zoom.s\n   */\n  resetZoom() {\n    this.resetLayout();\n  }\n\n  /**\n   * Set the colour map.\n   *\n   * @param {string} colourMap The colour map name.\n   */\n  setColourMap(colourMap) {\n    const viewController =\n      this.#stage.getActiveLayerGroup()\n        .getActiveViewLayer().getViewController();\n    viewController.setColourMapFromName(colourMap);\n  }\n\n  /**\n   * Set the window/level preset.\n   *\n   * @param {object} preset The window/level preset.\n   */\n  setWindowLevelPreset(preset) {\n    const viewController =\n      this.#stage.getActiveLayerGroup()\n        .getActiveViewLayer().getViewController();\n    viewController.setWindowLevelPreset(preset);\n  }\n\n  /**\n   * Set the tool\n   *\n   * @param {string} tool The tool.\n   */\n  setTool(tool) {\n    // bind tool to active layer\n    for (let i = 0; i < this.#stage.getNumberOfLayerGroups(); ++i) {\n      const layerGroup = this.#stage.getLayerGroup(i);\n      // draw or view layer\n      let layer = null;\n      if (tool === 'Draw' ||\n        tool === 'Livewire' ||\n        tool === 'Floodfill') {\n        layer = layerGroup.getActiveDrawLayer();\n      } else {\n        layer = layerGroup.getActiveViewLayer();\n      }\n      if (layer) {\n        this.#toolboxController.bindLayer(layer, layerGroup.getDivId());\n      }\n    }\n\n    // set toolbox tool\n    this.#toolboxController.setSelectedTool(tool);\n  }\n\n  /**\n   * Set the tool live features.\n   *\n   * @param {object} list The list of features.\n   */\n  setToolFeatures(list) {\n    this.#toolboxController.setToolFeatures(list);\n  }\n\n  /**\n   * Undo the last action\n   *\n   * @fires UndoStack#undo\n   */\n  undo() {\n    this.#undoStack.undo();\n  }\n\n  /**\n   * Redo the last action\n   *\n   * @fires UndoStack#redo\n   */\n  redo() {\n    this.#undoStack.redo();\n  }\n\n  /**\n   * Get the undo stack size.\n   *\n   * @returns {number} The size of the stack.\n   */\n  getStackSize() {\n    return this.#undoStack.getStackSize();\n  }\n\n  /**\n   * Get the current undo stack index.\n   *\n   * @returns {number} The stack index.\n   */\n  getCurrentStackIndex() {\n    return this.#undoStack.getCurrentStackIndex();\n  }\n\n  // Private Methods -----------------------------------------------------------\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Data load start callback.\n   *\n   * @param {object} event The load start event.\n   */\n  #onloadstart = (event) => {\n    /**\n     * Load start event.\n     *\n     * @event App#loadstart\n     * @type {object}\n     * @property {string} type The event type: loadstart.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadstart';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load progress callback.\n   *\n   * @param {object} event The progress event.\n   */\n  #onloadprogress = (event) => {\n    /**\n     * Load progress event.\n     *\n     * @event App#loadprogress\n     * @type {object}\n     * @property {string} type The event type: loadprogress.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {number} loaded The loaded percentage.\n     * @property {number} total The total percentage.\n     */\n    event.type = 'loadprogress';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load callback.\n   *\n   * @param {object} event The load event.\n   */\n  #onloaditem = (event) => {\n    // check event\n    if (typeof event.data === 'undefined') {\n      logger.error('Missing loaditem event data.');\n    }\n    if (typeof event.loadtype === 'undefined') {\n      logger.error('Missing loaditem event load type.');\n    }\n\n    const isFirstLoadItem = event.isfirstitem;\n\n    let eventMetaData = null;\n    if (event.loadtype === 'image') {\n      if (isFirstLoadItem) {\n        this.#dataController.addNew(\n          event.loadid, event.data.image, event.data.info);\n      } else {\n        this.#dataController.update(\n          event.loadid, event.data.image, event.data.info);\n      }\n      eventMetaData = event.data.info;\n    } else if (event.loadtype === 'state') {\n      const state = new State();\n      state.apply(this, state.fromJSON(event.data));\n      eventMetaData = 'state';\n    }\n\n    /**\n     * Load item event: fired when a load item is successfull.\n     *\n     * @event App#loaditem\n     * @type {object}\n     * @property {string} type The event type: loaditem.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {object} data The loaded meta data.\n     */\n    this.#fireEvent({\n      type: 'loaditem',\n      data: eventMetaData,\n      source: event.source,\n      loadtype: event.loadtype,\n      loadid: event.loadid,\n      isfirstitem: event.isfirstitem,\n      warn: event.warn\n    });\n\n    // render if first and flag allows\n    if (event.loadtype === 'image' &&\n    this.#getViewConfigs(event.loadid).length !== 0 &&\n      isFirstLoadItem && this.#options.viewOnFirstLoadItem) {\n      this.render(event.loadid);\n    }\n  };\n\n  /**\n   * Data load callback.\n   *\n   * @param {object} event The load event.\n   */\n  #onload = (event) => {\n    /**\n     * Load event: fired when a load finishes successfully.\n     *\n     * @event App#load\n     * @type {object}\n     * @property {string} type The event type: load.\n     * @property {string} loadType The load type: image or state.\n     */\n    event.type = 'load';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load end callback.\n   *\n   * @param {object} event The load end event.\n   */\n  #onloadend = (event) => {\n    /**\n     * Main load end event: fired when the load finishes,\n     *   successfully or not.\n     *\n     * @event App#loadend\n     * @type {object}\n     * @property {string} type The event type: loadend.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadend';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load error callback.\n   *\n   * @param {object} event The error event.\n   */\n  #onloaderror = (event) => {\n    /**\n     * Load error event.\n     *\n     * @event App#loaderror\n     * @type {object}\n     * @property {string} type The event type: error.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {object} error The error.\n     * @property {object} target The event target.\n     */\n    event.type = 'loaderror';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load abort callback.\n   *\n   * @param {object} event The abort event.\n   */\n  #onloadabort = (event) => {\n    /**\n     * Load abort event.\n     *\n     * @event App#loadabort\n     * @type {object}\n     * @property {string} type The event type: abort.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadabort';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Bind layer group events to app.\n   *\n   * @param {object} group The layer group.\n   */\n  #bindLayerGroupToApp(group) {\n    // propagate layer group events\n    group.addEventListener('zoomchange', this.#fireEvent);\n    group.addEventListener('offsetchange', this.#fireEvent);\n    // propagate viewLayer events\n    group.addEventListener('renderstart', this.#fireEvent);\n    group.addEventListener('renderend', this.#fireEvent);\n    // propagate view events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      group.addEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // propagate drawLayer events\n    if (this.#toolboxController && this.#toolboxController.hasTool('Draw')) {\n      group.addEventListener('drawcreate', this.#fireEvent);\n      group.addEventListener('drawdelete', this.#fireEvent);\n    }\n  }\n\n  /**\n   * Initialise the layers.\n   * To be called once the DICOM data has been loaded.\n   *\n   * @param {number} dataIndex The data index.\n   * @param {object} dataViewConfig The data view config.\n   */\n  #initialiseBaseLayers(dataIndex, dataViewConfig) {\n    // add layers\n    this.#addViewLayer(dataIndex, dataViewConfig);\n\n    // initialise the toolbox\n    if (this.#toolboxController) {\n      this.#toolboxController.init();\n    }\n  }\n\n  /**\n   * Add a view layer.\n   *\n   * @param {number} dataIndex The data index.\n   * @param {object} dataViewConfig The data view config.\n   */\n  #addViewLayer(dataIndex, dataViewConfig) {\n    const data = this.#dataController.get(dataIndex);\n    if (!data) {\n      throw new Error('Cannot initialise layer with data id: ' + dataIndex);\n    }\n    const layerGroup = this.#stage.getLayerGroupByDivId(dataViewConfig.divId);\n    if (!layerGroup) {\n      throw new Error('Cannot initialise layer with group id: ' +\n        dataViewConfig.divId);\n    }\n    const imageGeometry = data.image.getGeometry();\n\n    // un-bind\n    this.#stage.unbindLayerGroups();\n\n    // create and setup view\n    const viewFactory = new ViewFactory();\n    const view = viewFactory.create(data.meta, data.image);\n    const viewOrientation = getViewOrientation(\n      imageGeometry.getOrientation(),\n      layerGroup.getTargetOrientation()\n    );\n    view.setOrientation(viewOrientation);\n\n    // make pixel of value 0 transparent for segmentation\n    // (assuming RGB data)\n    if (data.image.getMeta().Modality === 'SEG') {\n      view.setAlphaFunction(function (value /*, index*/) {\n        if (value[0] === 0 &&\n          value[1] === 0 &&\n          value[2] === 0) {\n          return 0;\n        } else {\n          return 0xff;\n        }\n      });\n    }\n\n    // colour map\n    if (typeof dataViewConfig.colourMap !== 'undefined') {\n      view.setColourMap(dataViewConfig.colourMap);\n    }\n\n    const isBaseLayer = layerGroup.getNumberOfLayers() === 0;\n\n    // opacity\n    let opacity = 1;\n    // do we have more than one layer\n    // (the layer has not been added to the layer group yet)\n    if (!isBaseLayer) {\n      opacity = 0.5;\n      // set color map if non was provided\n      if (typeof dataViewConfig.colourMap === 'undefined') {\n        view.setColourMap(lut.rainbow);\n      }\n    }\n\n    // view layer\n    const viewLayer = layerGroup.addViewLayer();\n    viewLayer.setView(view, dataIndex);\n    const size2D = imageGeometry.getSize(viewOrientation).get2D();\n    const spacing2D = imageGeometry.getSpacing(viewOrientation).get2D();\n    viewLayer.initialise(size2D, spacing2D, opacity);\n    const viewController = viewLayer.getViewController();\n\n    // listen to controller events\n    if (data.image.getMeta().Modality === 'SEG') {\n      viewController.addEventListener('masksegmentdelete', this.#fireEvent);\n      viewController.addEventListener('masksegmentredraw', this.#fireEvent);\n    }\n\n    // listen to image changes\n    this.#dataController.addEventListener('imageset', viewLayer.onimageset);\n    this.#dataController.addEventListener('imagechange', (event) => {\n      viewLayer.onimagechange(event);\n      this.render(event.dataid);\n    });\n\n    // bind\n    this.#stage.bindLayerGroups();\n    if (this.#toolboxController) {\n      this.#toolboxController.bindLayer(viewLayer, layerGroup.getDivId());\n    }\n\n    // optional draw layer\n    let drawLayer;\n    if (this.#toolboxController && this.#toolboxController.hasTool('Draw')) {\n      drawLayer = layerGroup.addDrawLayer();\n      drawLayer.initialise(size2D, spacing2D, dataIndex);\n      drawLayer.setPlaneHelper(viewLayer.getViewController().getPlaneHelper());\n    }\n\n    // sync layers position\n    const value = [\n      viewController.getCurrentIndex().getValues(),\n      viewController.getCurrentPosition().getValues()\n    ];\n    layerGroup.updateLayersToPositionChange({\n      value: value,\n      srclayerid: viewLayer.getId()\n    });\n\n    // sync layer groups\n    this.#stage.syncLayerGroupScale();\n\n    // major orientation axis\n    const major = imageGeometry.getOrientation().getThirdColMajorDirection();\n\n    // view layer offset (done before scale)\n    viewLayer.setOffset(layerGroup.getOffset());\n    // extra flip offset for oriented views...\n    if (typeof dataViewConfig.orientation !== 'undefined') {\n      if (major === 2) {\n        // flip offset Y for axial aquired data\n        if (dataViewConfig.orientation !== 'axial') {\n          viewLayer.addFlipOffsetY();\n          if (typeof drawLayer !== 'undefined') {\n            drawLayer.addFlipOffsetY();\n          }\n        }\n      } else if (major === 0) {\n        // flip offset X for sagittal aquired data\n        if (dataViewConfig.orientation !== 'sagittal') {\n          viewLayer.addFlipOffsetX();\n          if (typeof drawLayer !== 'undefined') {\n            drawLayer.addFlipOffsetX();\n          }\n        }\n      }\n    }\n\n    // view layer scale\n    // only flip scale for base layers\n    if (isBaseLayer) {\n      if (typeof dataViewConfig.orientation !== 'undefined') {\n        if (major === 0 || major === 2) {\n          // scale flip Z for oriented views...\n          layerGroup.flipScaleZ();\n        } else {\n          viewLayer.setScale(layerGroup.getScale());\n          if (typeof drawLayer !== 'undefined') {\n            drawLayer.setScale(layerGroup.getScale());\n          }\n        }\n      } else {\n        if (major === 0) {\n          // scale flip Z for sagittal and undefined target orientation\n          layerGroup.flipScaleZ();\n        } else {\n          viewLayer.setScale(layerGroup.getScale());\n          if (typeof drawLayer !== 'undefined') {\n            drawLayer.setScale(layerGroup.getScale());\n          }\n        }\n      }\n    } else {\n      viewLayer.setScale(layerGroup.getScale());\n      if (typeof drawLayer !== 'undefined') {\n        drawLayer.setScale(layerGroup.getScale());\n      }\n    }\n\n  }\n\n} // class App\n","/**\n * Data writer.\n */\nexport class DataWriter {\n\n  /**\n   * Is the endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isLittleEndian = true;\n\n  /**\n   * The main data view.\n   *\n   * @type {DataView}\n   */\n  #view;\n\n  /**\n   * @param {ArrayBuffer} buffer The input array buffer.\n   * @param {boolean} [isLittleEndian] Flag to tell if the data is\n   *   little or big endian.\n   */\n  constructor(buffer, isLittleEndian) {\n    // Set endian flag if not defined.\n    if (typeof isLittleEndian !== 'undefined') {\n      this.#isLittleEndian = isLittleEndian;\n    }\n    this.#view = new DataView(buffer);\n  }\n\n  /**\n   * Write Uint8 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint8(byteOffset, value) {\n    this.#view.setUint8(byteOffset, value);\n    return byteOffset + Uint8Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int8 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt8(byteOffset, value) {\n    this.#view.setInt8(byteOffset, value);\n    return byteOffset + Int8Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint16 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint16(byteOffset, value) {\n    this.#view.setUint16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int16 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt16(byteOffset, value) {\n    this.#view.setInt16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Int16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint32(byteOffset, value) {\n    this.#view.setUint32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {bigint} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint64(byteOffset, value) {\n    this.#view.setBigUint64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + BigUint64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt32(byteOffset, value) {\n    this.#view.setInt32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Int32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {bigint} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt64(byteOffset, value) {\n    this.#view.setBigInt64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + BigInt64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Float32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat32(byteOffset, value) {\n    this.#view.setFloat32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Float32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Float64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat64(byteOffset, value) {\n    this.#view.setFloat64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Float64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write string data of length 4 as hexadecimal (no '0x' prefix).\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {string} str The hexadecimal string to write ('####').\n   * @returns {number} The new offset position.\n   */\n  writeHex(byteOffset, str) {\n    // remove first two chars and parse\n    const value = parseInt(str, 16);\n    this.#view.setUint16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write a boolean array as binary.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeBinaryArray(byteOffset, array) {\n    if (array.length % 8 !== 0) {\n      throw new Error('Cannot write boolean array as binary.');\n    }\n    let byte = null;\n    let val = null;\n    for (let i = 0, len = array.length; i < len; i += 8) {\n      byte = 0;\n      for (let j = 0; j < 8; ++j) {\n        val = array[i + j] === 0 ? 0 : 1;\n        byte += val << j;\n      }\n      byteOffset = this.writeUint8(byteOffset, byte);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint8 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array|Uint8Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint8Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint8(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int8 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt8Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt8(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint16 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint16Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint16(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int16 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt16Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt16(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Float32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeFloat32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Float64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeFloat64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n} // class DataWriter\n","import {\n  is32bitVLVR,\n  isCharSetStringVR,\n  vrTypes\n} from './dictionary';\nimport {\n  Tag,\n  getTagFromDictionary,\n  getTagFromKey,\n  getItemTag,\n  getItemDelimitationItemTag,\n  getSequenceDelimitationItemTag,\n  getFileMetaInformationGroupLengthTag,\n  isPixelDataTag,\n  isItemTag,\n  tagCompareFunction\n} from './dicomTag';\nimport {\n  getDwvVersion,\n  isImplicitTransferSyntax,\n  isBigEndianTransferSyntax,\n  getDataElementPrefixByteSize\n} from './dicomParser';\nimport {DataWriter} from './dataWriter';\nimport {logger} from '../utils/logger';\n\n/**\n * Get the dwv UID prefix.\n * Issued by Medical Connections Ltd (www.medicalconnections.co.uk)\n *   on 25/10/2017.\n *\n * @returns {string} The dwv UID prefix.\n */\nfunction getDwvUIDPrefix() {\n  return '1.2.826.0.1.3680043.9.7278.1';\n}\n\n// local generated uid counter\nlet _uidCount = 0;\n\n/**\n * Get a UID for a DICOM tag.\n * Note: Use https://github.com/uuidjs/uuid?\n *\n * @see http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_9.html\n * @see http://dicomiseasy.blogspot.com/2011/12/chapter-4-dicom-objects-in-chapter-3.html\n * @see https://stackoverflow.com/questions/46304306/how-to-generate-unique-dicom-uid\n * @param {string} tagName The input tag.\n * @returns {string} The corresponding UID.\n */\nexport function getUID(tagName) {\n  const prefix = getDwvUIDPrefix() + '.';\n  let uid = '';\n  if (tagName === 'ImplementationClassUID') {\n    uid = prefix + getDwvVersion();\n  } else {\n    // date (only numbers), do not keep milliseconds\n    const date = (new Date()).toISOString().replace(/\\D/g, '');\n    const datePart = '.' + date.substring(0, 14);\n    // count\n    _uidCount += 1;\n    const countPart = '.' + _uidCount;\n\n    // uid = prefix . tag . date . count\n    uid = prefix;\n\n    // limit tag part to not exceed 64 length\n    const nonTagLength = prefix.length + countPart.length + datePart.length;\n    const leni = Math.min(tagName.length, 64 - nonTagLength);\n    if (leni > 1) {\n      let tagNumber = '';\n      for (let i = 0; i < leni; ++i) {\n        tagNumber += tagName.charCodeAt(i);\n      }\n      uid += tagNumber.substring(0, leni);\n    }\n\n    // finish\n    uid += datePart + countPart;\n  }\n  return uid;\n}\n\n/**\n * Return true if the input number is even.\n *\n * @param {number} number The number to check.\n * @returns {boolean} True is the number is even.\n */\nfunction isEven(number) {\n  return number % 2 === 0;\n}\n\n/**\n * Is the input VR a VR that stores data in a typed array.\n * TODO: include ox and xs?\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR is a typed array one.\n */\nfunction isTypedArrayVr(vr) {\n  const vrType = vrTypes[vr];\n  return typeof vrType !== 'undefined' &&\n    vrType !== 'string';\n}\n\n/**\n * Is the input VR a string VR.\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR is a string one.\n */\nfunction isStringVr(vr) {\n  const vrType = vrTypes[vr];\n  return typeof vrType !== 'undefined' &&\n    vrType === 'string';\n}\n\n/**\n * Is the input VR a VR that could need padding.\n * see http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_6.2.html\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR needs padding.\n */\nfunction isVrToPad(vr) {\n  return isStringVr(vr) || vr === 'OB';\n}\n\n/**\n * Get the VR specific padding value.\n *\n * @param {string} vr The element VR.\n * @returns {string} The value used to pad.\n */\nfunction getVrPad(vr) {\n  let pad = '';\n  if (isStringVr(vr)) {\n    if (vr === 'UI') {\n      pad = '\\0';\n    } else {\n      pad = ' ';\n    }\n  }\n  return pad;\n}\n\n/**\n * Push a value at the end of an input Uint8Array.\n *\n * @param {Array|Uint8Array} arr The input array.\n * @param {Array|Uint8Array} value The value to push.\n * @returns {Uint8Array} The new array.\n */\nfunction uint8ArrayPush(arr, value) {\n  const newArr = new Uint8Array(arr.length + 1);\n  newArr.set(arr);\n  newArr.set(value, arr.length);\n  return newArr;\n}\n\n/**\n * Pad an input OB value.\n *\n * @param {Array|Uint8Array} value The input value.\n * @returns {Array|Uint8Array} The padded input.\n */\nfunction padOBValue(value) {\n  if (value !== null &&\n    typeof value !== 'undefined' &&\n    typeof value.length !== 'undefined') {\n    // calculate size and pad if needed\n    if (value.length !== 0 &&\n      typeof value[0].length !== 'undefined') {\n      // handle array of array\n      let size = 0;\n      for (let i = 0; i < value.length; ++i) {\n        size += value[i].length;\n      }\n      if (!isEven(size)) {\n        value[value.length - 1] = uint8ArrayPush(\n          value[value.length - 1], [0]);\n      }\n    } else {\n      if (!isEven(value.length)) {\n        value = uint8ArrayPush(value, [0]);\n      }\n    }\n  } else {\n    throw new Error('Cannot pad undefined or null OB value.');\n  }\n  // uint8ArrayPush may create a new array so we\n  // need to return it\n  return value;\n}\n\n/**\n * Helper method to flatten an array of typed arrays to 2D typed array\n *\n * @param {Array} initialArray array of typed arrays\n * @returns {object} a typed array containing all values\n */\nfunction flattenArrayOfTypedArrays(initialArray) {\n  const initialArrayLength = initialArray.length;\n  const arrayLength = initialArray[0].length;\n  // If this is not a array of arrays, just return the initial one:\n  if (typeof arrayLength === 'undefined') {\n    return initialArray;\n  }\n\n  const flattenendArrayLength = initialArrayLength * arrayLength;\n\n  const flattenedArray = new initialArray[0].constructor(flattenendArrayLength);\n\n  for (let i = 0; i < initialArrayLength; i++) {\n    const indexFlattenedArray = i * arrayLength;\n    flattenedArray.set(initialArray[i], indexFlattenedArray);\n  }\n  return flattenedArray;\n}\n\n/**\n * Default text encoder.\n */\nclass DefaultTextEncoder {\n  /**\n   * Encode an input string.\n   *\n   * @param {string} str The string to encode.\n   * @returns {Uint8Array} The encoded string.\n   */\n  encode(str) {\n    const result = new Uint8Array(str.length);\n    for (let i = 0, leni = str.length; i < leni; ++i) {\n      result[i] = str.charCodeAt(i);\n    }\n    return result;\n  }\n}\n\n/**\n * DICOM writer.\n *\n * Example usage:\n *   const parser = new DicomParser();\n *   parser.parse(this.response);\n *\n *   const writer = new DicomWriter(parser.getDicomElements());\n *   const blob = new Blob([writer.getBuffer()], {type: 'application/dicom'});\n *\n *   const element = document.getElementById(\"download\");\n *   element.href = URL.createObjectURL(blob);\n *   element.download = \"anonym.dcm\";\n */\nexport class DicomWriter {\n\n  // flag to use VR=UN for private sequences, default to false\n  // (mainly used in tests)\n  #useUnVrForPrivateSq = false;\n\n  /**\n   * Set the use UN VR for private sequence flag.\n   *\n   * @param {boolean} flag True to use UN VR.\n   */\n  setUseUnVrForPrivateSq(flag) {\n    this.#useUnVrForPrivateSq = flag;\n  }\n\n  // possible tag actions\n  #actions = {\n    copy: function (item) {\n      return item;\n    },\n    remove: function () {\n      return null;\n    },\n    clear: function (item) {\n      item.value = [];\n      return item;\n    },\n    replace: function (item, value) {\n      item.value = [value];\n      return item;\n    }\n  };\n\n  // default rules: just copy\n  #defaultRules = {\n    default: {action: 'copy', value: null}\n  };\n\n  /**\n   * Writing rules.\n   * Set of objects as:\n   *   name : { action: 'actionName', value: 'optionalValue }\n   * The names are either 'default', tagName or groupName.\n   * Each DICOM element will be checked to see if a rule is applicable.\n   * First checked by tagName and then by groupName,\n   * if nothing is found the default rule is applied.\n   */\n  #rules = this.#defaultRules;\n\n  /**\n   * Set the writing rules.\n   *\n   * @param {object} rules The input rules.\n   */\n  setRules(rules) {\n    this.#rules = rules;\n  }\n\n  /**\n   * Default text encoder.\n   *\n   * @type {DefaultTextEncoder}\n   */\n  #defaultTextEncoder = new DefaultTextEncoder();\n\n  /**\n   * Special text encoder.\n   *\n   * @type {DefaultTextEncoder|TextEncoder}\n   */\n  #textEncoder = this.#defaultTextEncoder;\n\n  /**\n   * Encode string data.\n   *\n   * @param {string} str The string to encode.\n   * @returns {Uint8Array} The encoded string.\n   */\n  #encodeString(str) {\n    return this.#defaultTextEncoder.encode(str);\n  }\n\n  /**\n   * Encode data as a UTF-8.\n   *\n   * @param {string} str The string to write.\n   * @returns {Uint8Array} The encoded string.\n   */\n  #encodeSpecialString(str) {\n    return this.#textEncoder.encode(str);\n  }\n\n  /**\n   * Use a TextEncoder instead of the default text decoder.\n   */\n  useSpecialTextEncoder() {\n    /**\n     * The text encoder.\n     *\n     * @external TextEncoder\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder\n     */\n    this.#textEncoder = new TextEncoder();\n  }\n\n  /**\n   * Use default anonymisation rules.\n   */\n  useDefaultAnonymisationRules() {\n    this.setRules({\n      default: {action: 'remove', value: null},\n      PatientName: {action: 'replace', value: 'Anonymized'}, // tag\n      'Meta Element': {action: 'copy', value: null}, // group '0002'\n      Acquisition: {action: 'copy', value: null}, // group '0018'\n      'Image Presentation': {action: 'copy', value: null}, // group '0028'\n      Procedure: {action: 'copy', value: null}, // group '0040'\n      'Pixel Data': {action: 'copy', value: null} // group '7fe0'\n    });\n  }\n\n  /**\n   * Get the element to write according to the class rules.\n   * Priority order: tagName, groupName, default.\n   *\n   * @param {object} element The element to check\n   * @returns {object} The element to write, can be null.\n   */\n  #getElementToWrite(element) {\n    // get group and tag string name\n    const groupName = element.tag.getGroupName();\n    const tagName = element.tag.getNameFromDictionary();\n\n    // apply rules:\n    let rule;\n    if (typeof this.#rules[element.tag.getKey()] !== 'undefined') {\n      // 1. tag itself\n      rule = this.#rules[element.tag.getKey()];\n    } else if (typeof tagName !== 'undefined' &&\n      typeof this.#rules[tagName] !== 'undefined') {\n      // 2. tag name\n      rule = this.#rules[tagName];\n    } else if (typeof this.#rules[groupName] !== 'undefined') {\n      // 3. group name\n      rule = this.#rules[groupName];\n    } else {\n      // 4. default\n      rule = this.#rules['default'];\n    }\n    // apply action on element and return\n    return this.#actions[rule.action](element, rule.value);\n  }\n\n  /**\n   * Write a list of items.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} items The list of items to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writeDataElementItems(\n    writer, byteOffset, items, isImplicit) {\n    let item = null;\n    for (let i = 0; i < items.length; ++i) {\n      item = items[i];\n      const itemKeys = Object.keys(item);\n      if (itemKeys.length === 0) {\n        continue;\n      }\n      // item element (create new to not modify original)\n      let undefinedLength = false;\n      if (typeof item['FFFEE000'].undefinedLength !== 'undefined') {\n        undefinedLength = item['FFFEE000'].undefinedLength;\n      }\n      const itemElement = {\n        tag: getItemTag(),\n        vr: 'NONE',\n        vl: undefinedLength ? 0xffffffff : item['FFFEE000'].vl,\n        value: []\n      };\n      byteOffset = this.#writeDataElement(\n        writer, itemElement, byteOffset, isImplicit);\n      // write rest\n      for (let m = 0; m < itemKeys.length; ++m) {\n        if (itemKeys[m] !== 'FFFEE000' && itemKeys[m] !== 'FFFEE00D') {\n          byteOffset = this.#writeDataElement(\n            writer, item[itemKeys[m]], byteOffset, isImplicit);\n        }\n      }\n      // item delimitation\n      if (undefinedLength) {\n        const itemDelimElement = {\n          tag: getItemDelimitationItemTag(),\n          vr: 'NONE',\n          vl: 0,\n          value: []\n        };\n        byteOffset = this.#writeDataElement(\n          writer, itemDelimElement, byteOffset, isImplicit);\n      }\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write data with a specific Value Representation (VR).\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {object} element The element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} value The array to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writeDataElementValue(\n    writer, element, byteOffset, value, isImplicit) {\n\n    const startOffset = byteOffset;\n\n    if (element.vr === 'NONE') {\n      // nothing to do!\n    } else if (value instanceof Uint8Array) {\n      // binary data has been expanded 8 times at read\n      if (value.length === 8 * element.vl) {\n        byteOffset = writer.writeBinaryArray(byteOffset, value);\n      } else {\n        byteOffset = writer.writeUint8Array(byteOffset, value);\n      }\n    } else if (value instanceof Int8Array) {\n      byteOffset = writer.writeInt8Array(byteOffset, value);\n    } else if (value instanceof Uint16Array) {\n      byteOffset = writer.writeUint16Array(byteOffset, value);\n    } else if (value instanceof Int16Array) {\n      byteOffset = writer.writeInt16Array(byteOffset, value);\n    } else if (value instanceof Uint32Array) {\n      byteOffset = writer.writeUint32Array(byteOffset, value);\n    } else if (value instanceof Int32Array) {\n      byteOffset = writer.writeInt32Array(byteOffset, value);\n    } else if (value instanceof BigUint64Array) {\n      byteOffset = writer.writeUint64Array(byteOffset, value);\n    } else if (value instanceof BigInt64Array) {\n      byteOffset = writer.writeInt64Array(byteOffset, value);\n    } else {\n      // switch according to VR if input type is undefined\n      const vrType = vrTypes[element.vr];\n      if (typeof vrType !== 'undefined') {\n        if (vrType === 'Uint8') {\n          byteOffset = writer.writeUint8Array(byteOffset, value);\n        } else if (vrType === 'Uint16') {\n          byteOffset = writer.writeUint16Array(byteOffset, value);\n        } else if (vrType === 'Int16') {\n          byteOffset = writer.writeInt16Array(byteOffset, value);\n        } else if (vrType === 'Uint32') {\n          byteOffset = writer.writeUint32Array(byteOffset, value);\n        } else if (vrType === 'Int32') {\n          byteOffset = writer.writeInt32Array(byteOffset, value);\n        } else if (vrType === 'Uint64') {\n          byteOffset = writer.writeUint64Array(byteOffset, value);\n        } else if (vrType === 'Int64') {\n          byteOffset = writer.writeInt64Array(byteOffset, value);\n        } else if (vrType === 'Float32') {\n          byteOffset = writer.writeFloat32Array(byteOffset, value);\n        } else if (vrType === 'Float64') {\n          byteOffset = writer.writeFloat64Array(byteOffset, value);\n        } else if (vrType === 'string') {\n          byteOffset = writer.writeUint8Array(byteOffset, value);\n        } else {\n          throw Error('Unknown VR type: ' + vrType);\n        }\n      } else if (element.vr === 'SQ') {\n        byteOffset = this.#writeDataElementItems(\n          writer, byteOffset, value, isImplicit);\n      } else if (element.vr === 'AT') {\n        for (let i = 0; i < value.length; ++i) {\n          const hexString = value[i] + '';\n          const hexString1 = hexString.substring(1, 5);\n          const hexString2 = hexString.substring(6, 10);\n          const dec1 = parseInt(hexString1, 16);\n          const dec2 = parseInt(hexString2, 16);\n          const atValue = [dec1, dec2];\n          byteOffset = writer.writeUint16Array(byteOffset, atValue);\n        }\n      } else {\n        logger.warn('Unknown VR: ' + element.vr);\n      }\n    }\n\n    if (element.vr !== 'SQ' && element.vr !== 'NONE') {\n      const diff = byteOffset - startOffset;\n      if (diff !== element.vl) {\n        logger.warn('Offset difference and VL are not equal: ' +\n          diff + ' != ' + element.vl + ', vr:' + element.vr);\n      }\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write a pixel data element.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {object} element The element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} value The array to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writePixelDataElementValue(\n    writer, element, byteOffset, value, isImplicit) {\n    // undefined length flag\n    let undefinedLength = false;\n    if (typeof element.undefinedLength !== 'undefined') {\n      undefinedLength = element.undefinedLength;\n    }\n    // explicit length\n    if (!undefinedLength) {\n      let finalValue = value[0];\n      // flatten multi frame\n      if (value.length > 1) {\n        finalValue = flattenArrayOfTypedArrays(value);\n      }\n      // write\n      byteOffset = this.#writeDataElementValue(\n        writer, element, byteOffset, finalValue, isImplicit);\n    } else {\n      // pixel data as sequence\n      const item = {};\n      // first item: basic offset table\n      item['FFFEE000'] = {\n        tag: getItemTag(),\n        vr: 'NONE',\n        vl: 0,\n        value: []\n      };\n      // data\n      for (let i = 0; i < value.length; ++i) {\n        item[i] = {\n          tag: getItemTag(),\n          vr: element.vr,\n          vl: value[i].length,\n          value: value[i]\n        };\n      }\n      // write\n      byteOffset = this.#writeDataElementItems(\n        writer, byteOffset, [item], isImplicit);\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write a data element.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {object} element The DICOM data element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writeDataElement(\n    writer, element, byteOffset, isImplicit) {\n    const isTagWithVR = element.tag.isWithVR();\n    const is32bitVL = (isImplicit || !isTagWithVR)\n      ? true : is32bitVLVR(element.vr);\n    // group\n    byteOffset = writer.writeHex(byteOffset, element.tag.getGroup());\n    // element\n    byteOffset = writer.writeHex(byteOffset, element.tag.getElement());\n    // VR\n    let vr = element.vr;\n    // use VR=UN for private sequence\n    if (this.#useUnVrForPrivateSq &&\n      element.tag.isPrivate() &&\n      vr === 'SQ') {\n      logger.warn('Write element using VR=UN for private sequence.');\n      vr = 'UN';\n    }\n    if (isTagWithVR && !isImplicit) {\n      byteOffset = writer.writeUint8Array(byteOffset, this.#encodeString(vr));\n      // reserved 2 bytes for 32bit VL\n      if (is32bitVL) {\n        byteOffset += 2;\n      }\n    }\n\n    let undefinedLengthSequence = false;\n    if (element.vr === 'SQ' ||\n      isPixelDataTag(element.tag)) {\n      if (typeof element.undefinedLength !== 'undefined') {\n        undefinedLengthSequence = element.undefinedLength;\n      }\n    }\n    let undefinedLengthItem = false;\n    if (isItemTag(element.tag)) {\n      if (typeof element.undefinedLength !== 'undefined') {\n        undefinedLengthItem = element.undefinedLength;\n      }\n    }\n\n    // update vl for sequence or item with undefined length\n    let vl = element.vl;\n    if (undefinedLengthSequence || undefinedLengthItem) {\n      vl = 0xffffffff;\n    }\n    // VL\n    if (is32bitVL) {\n      byteOffset = writer.writeUint32(byteOffset, vl);\n    } else {\n      byteOffset = writer.writeUint16(byteOffset, vl);\n    }\n\n    // value\n    let value = element.value;\n    // check value\n    if (typeof value === 'undefined') {\n      value = [];\n    }\n    // write\n    if (isPixelDataTag(element.tag)) {\n      byteOffset = this.#writePixelDataElementValue(\n        writer, element, byteOffset, value, isImplicit);\n    } else {\n      byteOffset = this.#writeDataElementValue(\n        writer, element, byteOffset, value, isImplicit);\n    }\n\n    // sequence delimitation item for sequence with undefined length\n    if (undefinedLengthSequence) {\n      const seqDelimElement = {\n        tag: getSequenceDelimitationItemTag(),\n        vr: 'NONE',\n        vl: 0,\n        value: []\n      };\n      byteOffset = this.#writeDataElement(\n        writer, seqDelimElement, byteOffset, isImplicit);\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Get the ArrayBuffer corresponding to input DICOM elements.\n   *\n   * @param {Array} dicomElements The wrapped elements to write.\n   * @returns {ArrayBuffer} The elements as a buffer.\n   */\n  getBuffer(dicomElements) {\n    // Transfer Syntax\n    const syntax = dicomElements['00020010'].value[0];\n    const isImplicit = isImplicitTransferSyntax(syntax);\n    const isBigEndian = isBigEndianTransferSyntax(syntax);\n    // Specific CharacterSet\n    if (typeof dicomElements['00080005'] !== 'undefined') {\n      const oldscs = dicomElements['00080005'].value[0];\n      // force UTF-8 if not default character set\n      if (typeof oldscs !== 'undefined' && oldscs !== 'ISO-IR 6') {\n        logger.debug('Change charset to UTF, was: ' + oldscs);\n        this.useSpecialTextEncoder();\n        dicomElements['00080005'].value = ['ISO_IR 192'];\n      }\n    }\n    // Bits Allocated (for image data)\n    let bitsAllocated;\n    if (typeof dicomElements['00280100'] !== 'undefined') {\n      bitsAllocated = dicomElements['00280100'].value[0];\n    }\n\n    // calculate buffer size and split elements (meta and non meta)\n    let totalSize = 128 + 4; // DICM\n    let localSize = 0;\n    const metaElements = [];\n    const rawElements = [];\n    let element;\n    let groupName;\n    let metaLength = 0;\n    // FileMetaInformationGroupLength\n    const fmiglTag = getFileMetaInformationGroupLengthTag();\n    // FileMetaInformationVersion\n    const fmivTag = new Tag('0002', '0001');\n    // ImplementationClassUID\n    const icUIDTag = new Tag('0002', '0012');\n    // ImplementationVersionName\n    const ivnTag = new Tag('0002', '0013');\n\n    // loop through elements to get the buffer size\n    const keys = Object.keys(dicomElements);\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\n      const originalElement = dicomElements[keys[i]];\n      originalElement.tag = getTagFromKey(keys[i]);\n      element = this.#getElementToWrite(originalElement);\n      if (element !== null &&\n        !fmiglTag.equals(element.tag) &&\n        !fmivTag.equals(element.tag) &&\n        !icUIDTag.equals(element.tag) &&\n        !ivnTag.equals(element.tag)) {\n        localSize = 0;\n\n        // XB7 2020-04-17\n        // Check if UN can be converted to correct VR.\n        // This check must be done BEFORE calculating totalSize,\n        // otherwise there may be extra null bytes at the end of the file\n        // (dcmdump may crash because of these bytes)\n        checkUnknownVR(element);\n\n        // update value and vl\n        this.#setElementValue(\n          element, element.value, isImplicit, bitsAllocated);\n\n        // tag group name\n        groupName = element.tag.getGroupName();\n\n        // prefix\n        if (groupName === 'Meta Element') {\n          localSize += getDataElementPrefixByteSize(element.vr, false);\n        } else {\n          localSize += getDataElementPrefixByteSize(\n            element.vr, isImplicit);\n        }\n\n        // value\n        localSize += element.vl;\n\n        // sort elements\n        if (groupName === 'Meta Element') {\n          metaElements.push(element);\n          metaLength += localSize;\n        } else {\n          rawElements.push(element);\n        }\n\n        // add to total size\n        totalSize += localSize;\n      }\n    }\n\n    // FileMetaInformationVersion\n    const fmiv = getDicomElement('FileMetaInformationVersion');\n    let fmivSize = getDataElementPrefixByteSize(fmiv.vr, false);\n    fmivSize += this.#setElementValue(fmiv, [0, 1], false);\n    metaElements.push(fmiv);\n    metaLength += fmivSize;\n    totalSize += fmivSize;\n    // ImplementationClassUID\n    const icUID = getDicomElement('ImplementationClassUID');\n    let icUIDSize = getDataElementPrefixByteSize(icUID.vr, false);\n    icUIDSize += this.#setElementValue(\n      icUID, [getUID('ImplementationClassUID')], false);\n    metaElements.push(icUID);\n    metaLength += icUIDSize;\n    totalSize += icUIDSize;\n    // ImplementationVersionName\n    const ivn = getDicomElement('ImplementationVersionName');\n    let ivnSize = getDataElementPrefixByteSize(ivn.vr, false);\n    const ivnValue = 'DWV_' + getDwvVersion();\n    ivnSize += this.#setElementValue(ivn, [ivnValue], false);\n    metaElements.push(ivn);\n    metaLength += ivnSize;\n    totalSize += ivnSize;\n\n    // sort elements\n    const elemSortFunc = function (a, b) {\n      return tagCompareFunction(a.tag, b.tag);\n    };\n    metaElements.sort(elemSortFunc);\n    rawElements.sort(elemSortFunc);\n\n    // create the FileMetaInformationGroupLength element\n    const fmigl = getDicomElement('FileMetaInformationGroupLength');\n    let fmiglSize = getDataElementPrefixByteSize(fmigl.vr, false);\n    fmiglSize += this.#setElementValue(\n      fmigl, new Uint32Array([metaLength]), false);\n    totalSize += fmiglSize;\n\n    // create buffer\n    const buffer = new ArrayBuffer(totalSize);\n    const metaWriter = new DataWriter(buffer);\n    const dataWriter = new DataWriter(buffer, !isBigEndian);\n\n    let offset = 128;\n    // DICM\n    offset = metaWriter.writeUint8Array(offset, this.#encodeString('DICM'));\n    // FileMetaInformationGroupLength\n    offset = this.#writeDataElement(metaWriter, fmigl, offset, false);\n    // write meta\n    for (let j = 0, lenj = metaElements.length; j < lenj; ++j) {\n      offset = this.#writeDataElement(\n        metaWriter, metaElements[j], offset, false);\n    }\n\n    // check meta position\n    const preambleSize = 128 + 4;\n    const metaOffset = preambleSize + fmiglSize + metaLength;\n    if (offset !== metaOffset) {\n      logger.warn('Bad size calculation... meta offset: ' + offset +\n        ', calculated size:' + metaOffset +\n        ' (diff:' + (offset - metaOffset) + ')');\n    }\n\n    // write non meta\n    for (let k = 0, lenk = rawElements.length; k < lenk; ++k) {\n      offset = this.#writeDataElement(\n        dataWriter, rawElements[k], offset, isImplicit);\n    }\n\n    // check final position\n    if (offset !== totalSize) {\n      logger.warn('Bad size calculation... final offset: ' + offset +\n        ', calculated size:' + totalSize +\n        ' (diff:' + (offset - totalSize) + ')');\n    }\n    // return\n    return buffer;\n  }\n\n  /**\n   * Set a DICOM element value according to its VR (Value Representation).\n   *\n   * @param {object} element The DICOM element to set the value.\n   * @param {object} value The value to set.\n   * @param {boolean} isImplicit Does the data use implicit VR?\n   * @param {number} [bitsAllocated] Bits allocated used for pixel data.\n   * @returns {number} The total element size.\n   */\n  #setElementValue(\n    element, value, isImplicit, bitsAllocated) {\n    // byte size of the element\n    let size = 0;\n    // special sequence case\n    if (element.vr === 'SQ') {\n\n      if (value !== null && value !== 0) {\n        const newItems = [];\n        let name;\n\n        // explicit or undefined length sequence\n        let undefinedLength = false;\n        if (typeof element.undefinedLength !== 'undefined') {\n          undefinedLength = element.undefinedLength;\n          delete element.undefinedLength;\n        }\n\n        // items\n        for (let i = 0; i < value.length; ++i) {\n          const oldItemElements = value[i];\n          const newItemElements = {};\n          let subSize = 0;\n\n          // check data\n          if (oldItemElements === null || oldItemElements === 0) {\n            continue;\n          }\n\n          // elements\n          const itemKeys = Object.keys(oldItemElements);\n          for (let j = 0, lenj = itemKeys.length; j < lenj; ++j) {\n            const itemKey = itemKeys[j];\n            const subElement = oldItemElements[itemKey];\n            subElement.tag = getTagFromKey(itemKey);\n\n            if (isItemTag(subElement.tag)) {\n              continue;\n            }\n            // set item value\n            subSize += this.#setElementValue(\n              subElement, subElement.value, isImplicit, bitsAllocated);\n            newItemElements[itemKey] = subElement;\n            // add prefix size\n            subSize += getDataElementPrefixByteSize(\n              subElement.vr, isImplicit);\n          }\n\n          // add item element (used to store its size)\n          const itemElement = {\n            tag: getItemTag(),\n            vr: 'NONE',\n            vl: subSize,\n            value: []\n          };\n          if (undefinedLength) {\n            itemElement.undefinedLength = undefinedLength;\n          }\n          name = itemElement.tag.getKey();\n          newItemElements[name] = itemElement;\n          subSize += getDataElementPrefixByteSize(\n            itemElement.vr, isImplicit);\n\n          // add item delimitation size\n          if (undefinedLength) {\n            subSize += getDataElementPrefixByteSize(\n              'NONE', isImplicit);\n          }\n\n          size += subSize;\n          newItems.push(newItemElements);\n        }\n\n        // add sequence delimitation size\n        if (undefinedLength) {\n          size += getDataElementPrefixByteSize('NONE', isImplicit);\n        }\n\n        // update sequence element\n        element.value = newItems;\n        element.vl = size;\n        if (undefinedLength) {\n          element.undefinedLength = undefinedLength;\n        }\n      }\n    } else {\n      // pad if necessary\n      if (isVrToPad(element.vr)) {\n        const padStr = getVrPad(element.vr);\n        // encode string\n        // TODO: not sure for UN...\n        if (isStringVr(element.vr)) {\n          let pad;\n          if (isCharSetStringVR(element.vr)) {\n            value = this.#encodeSpecialString(value.join('\\\\'));\n            pad = this.#encodeSpecialString(padStr);\n          } else {\n            value = this.#encodeString(value.join('\\\\'));\n            pad = this.#encodeString(padStr);\n          }\n          if (!isEven(value.length)) {\n            value = uint8ArrayPush(value, pad);\n          }\n        } else if (element.vr === 'OB') {\n          value = padOBValue(value);\n        }\n      }\n\n      // calculate byte size\n      size = 0;\n      if (element.vr === 'AT') {\n        size = 4 * value.length;\n      } else if (element.vr === 'xs') {\n        size = value.length * Uint16Array.BYTES_PER_ELEMENT;\n      } else if (isTypedArrayVr(element.vr) || element.vr === 'ox') {\n        if (isPixelDataTag(element.tag) &&\n          Array.isArray(value)) {\n          size = 0;\n          for (let b = 0; b < value.length; ++b) {\n            size += value[b].length;\n          }\n        } else {\n          size = value.length;\n        }\n\n        // convert size to bytes\n        const vrType = vrTypes[element.vr];\n        if (isPixelDataTag(element.tag) || element.vr === 'ox') {\n          if (element.undefinedLength) {\n            const itemPrefixSize =\n              getDataElementPrefixByteSize('NONE', isImplicit);\n            // offset table\n            size += itemPrefixSize;\n            // pixel items\n            size += itemPrefixSize * value.length;\n            // add sequence delimitation size\n            size += itemPrefixSize;\n          } else {\n            // use bitsAllocated for pixel data\n            // no need to multiply for 8 bits\n            if (typeof bitsAllocated !== 'undefined') {\n              if (bitsAllocated === 1) {\n                // binary data\n                size /= 8;\n              } else if (bitsAllocated === 16) {\n                size *= Uint16Array.BYTES_PER_ELEMENT;\n              }\n            }\n          }\n        } else if (typeof vrType !== 'undefined') {\n          const bpe = getBpeForVrType(vrType);\n          if (typeof bpe !== 'undefined') {\n            size *= bpe;\n          } else {\n            throw Error('Unknown bytes per element for VR type: ' + vrType);\n          }\n        } else {\n          throw Error('Unsupported element: ' + element.vr);\n        }\n      } else {\n        size = value.length;\n      }\n\n      element.value = value;\n      element.vl = size;\n    }\n\n    // return the size of that data\n    return size;\n  }\n\n} // class DicomWriter\n\n/**\n * Fix for broken DICOM elements: Replace \"UN\" with correct VR if the\n * element exists in dictionary\n *\n * @param {object} element The DICOM element.\n */\nfunction checkUnknownVR(element) {\n  if (element.vr === 'UN') {\n    const dictVr = element.tag.getVrFromDictionary();\n    if (typeof dictVr !== 'undefined' && element.vr !== dictVr) {\n      element.vr = dictVr;\n      logger.info('Element ' + element.tag.getGroup() +\n        ' ' + element.tag.getElement() +\n        ' VR changed from UN to ' + element.vr);\n    }\n  }\n}\n\n/**\n * Get a DICOM element from its tag name (value set separatly).\n *\n * @param {string} tagName The string tag name.\n * @returns {object} The DICOM element.\n */\nfunction getDicomElement(tagName) {\n  const tag = getTagFromDictionary(tagName);\n  return {\n    tag: tag,\n    vr: tag.getVrFromDictionary()\n  };\n}\n\n/**\n * Get the number of bytes per element for a given VR type.\n *\n * @param {string} vrType The VR type as defined in the dictionary.\n * @returns {number} The bytes per element.\n */\nfunction getBpeForVrType(vrType) {\n  let bpe;\n  if (vrType === 'Uint8') {\n    bpe = Uint8Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint16') {\n    bpe = Uint16Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int16') {\n    bpe = Int16Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint32') {\n    bpe = Uint32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int32') {\n    bpe = Int32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Float32') {\n    bpe = Float32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Float64') {\n    bpe = Float64Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint64') {\n    bpe = BigUint64Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int64') {\n    bpe = BigInt64Array.BYTES_PER_ELEMENT;\n  }\n  return bpe;\n}\n\n/**\n * Get the DICOM elements from a DICOM json tags object.\n * The json is a simplified version of the oficial DICOM json with\n * tag names instead of keys and direct values (no value property) for\n * simple tags.\n *\n * @param {object} jsonTags The DICOM json tags object.\n * @returns {object} The DICOM elements.\n */\nexport function getElementsFromJSONTags(jsonTags) {\n  const keys = Object.keys(jsonTags);\n  const dicomElements = {};\n  for (let k = 0, len = keys.length; k < len; ++k) {\n    // get the DICOM element definition from its name\n    const tag = getTagFromDictionary(keys[k]);\n    if (!tag) {\n      continue;\n    }\n    const vr = tag.getVrFromDictionary();\n    // tag value\n    let value;\n    let undefinedLength = false;\n    const jsonTag = jsonTags[keys[k]];\n    if (vr === 'SQ') {\n      const items = [];\n      if (typeof jsonTag.undefinedLength !== 'undefined') {\n        undefinedLength = jsonTag.undefinedLength;\n      }\n      if (typeof jsonTag.value !== 'undefined' &&\n        jsonTag.value !== null) {\n        for (let i = 0; i < jsonTag.value.length; ++i) {\n          items.push(getElementsFromJSONTags(jsonTag.value[i]));\n        }\n      } else {\n        logger.trace('Undefined or null jsonTag SQ value.');\n      }\n      value = items;\n    } else {\n      if (Array.isArray(jsonTag)) {\n        value = jsonTag;\n      } else {\n        value = [jsonTag];\n      }\n    }\n    // create element\n    const dicomElement = {\n      tag: tag,\n      vr: vr,\n      value: value\n    };\n    if (undefinedLength) {\n      dicomElement.undefinedLength = undefinedLength;\n    }\n    // store\n    dicomElements[tag.getKey()] = dicomElement;\n  }\n  // return\n  return dicomElements;\n}\n"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__436__","__WEBPACK_EXTERNAL_MODULE__626__","__WEBPACK_EXTERNAL_MODULE__812__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","Index","constructor","values","writable","_values","Error","length","every","val","isNaN","_classPrivateFieldSet","i","_classPrivateFieldGet","toString","getValues","slice","canCompare","rhs","equals","leni","compare","diffDims","push","add","getWithNew2D","j","l","lenl","toStringId","dims","ii","res","getIndexFromStringId","inputStr","strIds","split","dim","pointLength","parseInt","substring","Array","fill","RescaleSlopeAndIntercept","slope","intercept","_classPrivateFieldInitSpec","_slope","_intercept","getSlope","getIntercept","apply","isID","_rsi","WeakMap","_lut","_isReady","_length","RescaleLut","rsi","bitsStored","Math","pow","getRSI","isReady","initialise","Float32Array","getLength","getValue","offset","defaultPresets","CT","mediastinum","center","width","lung","bone","brain","head","_center","_width","_signedOffset","_ymin","_ymax","_xmin","_xmax","_inter","_init","WeakSet","WindowLevel","_classPrivateMethodGet","_init2","getCenter","getWidth","setRange","min","max","setSignedOffset","c","_rescaleLut","_isSigned","_windowLevel","_signedShift","WindowLut","rescaleLut","isSigned","getWindowLevel","getRescaleLut","setWindowLevel","wl","size","update","Uint8ClampedArray","lut_range_max","buildLut","func","lut","id","invId","plain","red","green","blue","invPlain","rainbow","hot","third","hot_iron","pet","hot_metal_blue","pet_20step","logger","levels","TRACE","DEBUG","INFO","WARN","ERROR","level","trace","msg","console","debug","info","warn","error","getShadowColour","hexColour","hexStr","rgbTriplet","g","b","isDarkColour","d65","x","y","z","colourNameToHex","name","dict","Yellow","Red","White","Green","Blue","Lime","Fuchsia","Black","Vector3D","_x","_y","_z","getX","getY","getZ","norm","sqrt","crossProduct","vector3D","dotProduct","BIG_EPSILON","Number","EPSILON","isSimilar","tol","abs","_inverse","Matrix33","row","col","getInverse","m","m00","m01","m02","m10","m11","m12","m20","m21","m22","a1212","a2012","a0112","det","getMatrixInverse","p","str","multiply","tmp","k","getAbs","multiplyArray3D","array3D","multiplyVector3D","multiplyPoint3D","point3D","Point3D","multiplyIndex3D","index3D","getRowAbsMax","absMax","index","indexOf","getColAbsMax","asOneAndZeros","sign","getThirdColMajorDirection","getIdentityMat33","getCoronalMat33","getMatrixFromName","matrix","Point2D","getDistance","point2D","getRound","round","_x2","_y2","minus","Point","get3D","values0","values1","mergeWith3D","dictionary","addTagsToDictionary","group","tags","tagGroups","vr32bitVL","OB","OD","OF","OL","OV","OW","SQ","SV","UC","UN","UR","UT","UV","ox","is32bitVLVR","vr","vrCharSetString","SH","LO","ST","LT","PN","isCharSetStringVR","vrTypes","AE","AS","AT","CS","DA","DS","DT","FL","FD","IS","SL","SS","TM","UI","UL","US","_group","_element","Tag","element","getGroup","getElement","getKey","getNameFromDictionary","getGroupName","isWithVR","isPrivate","getInfoFromDictionary","getVrFromDictionary","getTagFromKey","getItemTag","isItemTag","tag","isSequenceDelimitationItemTag","getPixelDataTag","isPixelDataTag","getTagFromDictionary","tagName","keys0","keys","keys1","foundTag","k0","lenK0","k1","lenK1","flipArrayEndianness","array","blen","byteLength","u8","Uint8Array","buffer","byteOffset","bpe","BYTES_PER_ELEMENT","_buffer","_isLittleEndian","_isNativeLittleEndian","_needFlip","_view","DataReader","isLittleEndian","Int8Array","Int16Array","DataView","readUint16","getUint16","readInt16","getInt16","readUint32","getUint32","readBigUint64","getBigUint64","readInt32","getInt32","readBigInt64","getBigInt64","readFloat32","getFloat32","readFloat64","getFloat64","readBinaryArray","bitArray","byteArrayLength","data","bitNumber","bitIndex","floor","readUint8Array","readInt8Array","readUint16Array","Uint16Array","arraySize","readInt16Array","readUint32Array","Uint32Array","readUint64Array","BigUint64Array","readInt32Array","Int32Array","readInt64Array","BigInt64Array","readFloat32Array","readFloat64Array","Float64Array","readHex","toUpperCase","startsWith","search","rawPos","pos","endsWith","getFlags","flags","regex","match","exec","replaceFlags","valueObj","valueStr","toPrecision","unit","flag","replace","getFileExtension","filePath","ext","pathSplit","toLowerCase","pop","test","includes","stringToUint8Array","arr","charCodeAt","precisionRound","number","precision","factor","delta","arraySortEquals","arr0","arr1","arrayEquals","sort","uint8ArrayToString","String","fromCharCode","findInArraySubset","callbackFn","start","end","getFindArrayInArrayCallback","buildMultipart","parts","boundary","lineBreak","partsSize","headers","headerStr","partKeys","header","trailer","set","getDwvVersion","ZWS","DefaultTextDecoder","decode","result","getReverseOrientation","ori","rlabels","L","R","A","P","H","F","rori","getOrientationName","orientation","isImplicitTransferSyntax","syntax","isBigEndianTransferSyntax","isJpegBaselineTransferSyntax","isJpegLosslessTransferSyntax","isJpeg2000TransferSyntax","isRleTransferSyntax","getTypedArray","bitsAllocated","pixelRepresentation","RangeError","powerOf2","log","getDataElementPrefixByteSize","isImplicit","_dicomElements","_defaultCharacterSet","_defaultTextDecoder","_textDecoder","_decodeString","_decodeSpecialString","_readTag","_readItemDataElement","_readPixelItemDataElement","_readDataElement","_interpretElement","_interpret","DicomParser","_classPrivateMethodInitSpec","getDefaultCharacterSet","setDefaultCharacterSet","characterSet","setDecoderCharacterSet","TextDecoder","getDicomElements","parse","dataElement","metaReader","dataReader","magicword","_decodeString2","_readDataElement2","_interpretElement2","endOffset","metaEnd","tsElement","firstDataElement","oEightGroupLittleEndian","vr0","vr1","implicit","vl","startOffset","guessTransferSyntax","isReadSupportedTransferSyntax","isJpegRetiredTransferSyntax","isJpeglsTransferSyntax","getTransferSyntaxName","charSetTerm","label","getUtfLabel","_interpret2","undefinedLength","numberOfFrames","pixItems","nItemPerFrame","newPixItems","f","newBuffer","fragOffset","_decodeSpecialString2","_readTag2","reader","_readItemDataElement2","itemData","item","isSeqDelim","isItemDelim","_readPixelItemDataElement2","offsetTableVl","readTagRes","is32bitVL","pixItemData","sqEndOffset","items","vrType","from","stream","lastIndex","trim","cleanString","raw","stri","stri1","subElement","elements","ListenerHandler","_listeners","_defineProperty","event","type","stack","callback","remove","splice","Size","moreThanOne","dimension","canScroll3D","viewOrientation","canScroll","getDimSize","getTotalSize","isInBounds","dirs","indexToOffset","offsetToIndex","off","dimSize","get2D","Spacing","_origins","_size","_spacing","_timeOrigins","_initialTime","_orientation","_newOrigins","_updateSliceSpacing","Geometry","origin","spacing","time","getInitialTime","getCurrentTotalNumberOfSlices","count","hasSlicesAtTime","getCurrentNumberOfSlicesBeforeTime","getOrigin","getOrigins","includesOrigin","getSize","getOrientedArray3D","map","concat","getSpacing","_updateSliceSpacing2","orientedValues","getRealSpacing","getOrientation","getSliceIndex","point","localOrigins","closestSliceIndex","minDist","dist","closestOrigin","pointDir","appendOrigin","appendFrame","sizeValues","spacingValues","isIndexInBounds","worldToIndex","indexToWorld","orientedPoint3D","pointToWorld","worldToPoint","geoSliceSpacing","getSliceGeometrySpacing","getDeOrientedArray3D","origins","withCheck","invOrientation","origin1","origin2","sliceSpacing","deltas","diff","sumReducer","sum","mean","reduce","toFixed","_geometry","_imageUids","_rsis","_isIdentityRSI","_isConstantRSI","_photometricInterpretation","_planarConfiguration","_numberOfComponents","_meta","_dataRange","_rescaledDataRange","_histogram","_listenerHandler","_getSecondaryOffsetMax","_getRescaleSlopeAndInterceptAtOffset","_realloc","_fireEvent","Image","geometry","imageUids","fireEvent","getImageUid","uid","getSecondaryOffset","getGeometry","getBuffer","canQuantify","getNumberOfComponents","canWindowLevel","getPhotometricInterpretation","nFiles","numberOfFiles","getRescaleSlopeAndIntercept","isConstantRSI","setRescaleSlopeAndIntercept","inRsi","_getSecondaryOffsetMax2","isIdentityRSI","setPhotometricInterpretation","interp","getPlanarConfiguration","setPlanarConfiguration","config","getMeta","setMeta","getValueAtOffset","getOffsets","offsets","equal","hasValues","finalValues","v1","equalFunc","getEqualCallback","valuesToFind","indicesToRemove","v","findIndex","clone","clonedBuffer","copy","_getRescaleSlopeAndInterceptAtOffset2","appendSlice","rhsSize","timeId","isNewFrame","volumeGeometry","sliceGeometry","sliceSize","fullBufferSize","_realloc2","sliceIndex","fullSliceIndex","indexOffset","maxOffset","subarray","numberOfImages","windowPresets","rhsPresets","pkey","rhsPreset","windowPreset","perslice","appendFrameBuffer","frameBuffer","frameIndex","frameSize","getDataRange","calculateDataRange","getRescaledDataRange","calculateRescaledDataRange","getHistogram","calculateHistogram","dataRange","rescaledDataRange","histogram","addEventListener","removeEventListener","setAtOffsets","setAtOffsetsAndGetOriginals","offsetsLists","originalColoursLists","previousColour","originalColours","colour","currentColour","setAtOffsetsWithIterator","iterator","colourRange","ival","next","done","getValueAtIndex","getRescaledValue","getRescaledValueAtIndex","getRescaledValueAtOffset","range","resmin","resmax","rmin","rmax","rvalue","histo","convolute2D","weights","newImage","imgSize","dimOffset","convoluteBuffer","ncols","nrows","ncomp","componentOffset","wOff","wOff00","wOff0x","wOff0n","wOffx0","wOffxn","wOffn0","wOffnx","wOffnn","pixelOffset","newValue","wOffFinal","wi","transform","operator","compose","tmpBuffer","IsSigned","dataAccessor","maxIter","increment","blockMaxIter","blockIncrement","reverse1","reverse2","nextIndex","finalBlockIncrement","mainCount","blockCount","getIteratorValues","getSliceIterator","image","position","isRescaled","dirMax2Index","posValues","posStart","nslices","isPlanar","getRange","iters","r0","r1","r2","range3d","rangeObj","dirMax0","dirMax2","simpleRange","componentIncrement","nextIndex1","nextIndex2","simpleRange3d","colours","nextColourIndex","viewEventNames","_image","_windowLuts","_windowPresets","_currentPresetName","_currentWl","_colourMap","_currentPosition","_alphaFunction","View","minmax","_value","_index","getCurrentIndex","setCurrentIndex","getImage","setImage","inImage","setOrientation","mat33","init","setInitialIndex","getPlaybackMilliseconds","recommendedDisplayFrameRate","getAlphaFunction","setAlphaFunction","getCurrentWindowLut","currentIndex","setWindowLevelPresetById","wlut","BitsStored","windowLut","addWindowLut","lutWl","wc","ww","skipGenerate","getWindowPresets","getWindowPresetsNames","setWindowPresets","presets","setDefaultColourMap","addWindowPresets","getColourMap","setColourMap","getCurrentPosition","canSetPosition","getScrollIndex","originIndex","setCurrentPosition","silent","valid","minLen","maxLen","posEvent","imageUid","pixValue","newWl","isNewWidth","isNewCenter","setWindowLevelPreset","preset","getWindowLevelMinMax","setWindowLevelMinMax","generateImageData","photoInterpretation","alphaFunc","colourMap","pxValue","generateImageDataMonochrome","is16BitsStored","to8","generateImageDataPaletteColor","generateImageDataRgb","rgb","cb","cr","generateImageDataYbrFull","incrementIndex","incr","newIndex","decrementIndex","decrementScrollIndex","incrementScrollIndex","ViewFactory","create","dicomElements","view","paletteLut","modality","Modality","_imageOrientation","_viewOrientation","_targetOrientation","PlaneHelper","imageOrientation","targetOrientation","getTargetOrientation","getOffset3DFromPlaneOffset","offset2D","planeOffset","getTargetDeOrientedVector3D","getPlaneOffsetFromOffset3D","offset3D","getTargetOrientedVector3D","vector","planeVector","getTargetDeOrientedPoint3D","planePoint","getImageOrientedVector3D","getImageOrientedPoint3D","getImageDeOrientedVector3D","getImageDeOrientedPoint3D","getTargetOrientedPositiveXYZ","getNativeScrollIndex","_mask","_segments","_hiddenSegments","_getHiddenIndex","MaskSegmentHelper","mask","custom","segments","hasSegment","segmentNumber","getSegment","maskHasSegments","numbers","unknowns","segment","displayValue","find","getSegments","setSegments","list","setHiddenSegments","isHidden","_getHiddenIndex2","addToHidden","removeFromHidden","getAlphaFunc","hiddenColours","deleteSegment","cmdCallback","exeCallback","delcmd","DeleteSegmentCommand","onExecute","onUndo","isValid","execute","_mask2","_segment","_isSilent","_offsets","getName","segmentnumber","undo","_event","_planeHelper","_maskSegmentHelper","_playerID","_dataIndex","ViewController","dataid","getPlaneHelper","isMask","getMaskSegmentHelper","applyHiddenSegments","setViewAlphaFunction","getPositionFromPlanePoint","getWindowLevelPresetsNames","addWindowLevelPresets","isPlaying","getCurrentOrientedIndex","getCurrentScrollIndexValue","getCurrentScrollPosition","scrollIndex","img","get2DSpacing","getRescaledImageValue","getPixelUnit","pixelUnit","getImageRegionValues","rescaled","sliceValues","sliceOrigin","iter","rangeNumberOfColumns","regionSize","regionOffset","regionElementCount","rangeRegion","getRegionSliceIterator","getImageVariableRegionValues","regions","offsetRegions","region","regionIndex","regionCount","rangeRegions","getVariableRegionSliceIterator","canQuantifyImage","getImageSize","getImageWorldSize","getImageRescaledDataRange","equalImageMeta","meta","imageMeta","metaKeys","metaKey","getPlanePositionFromPosition","getPlanePositionFromPlanePoint","play","RecommendedDisplayFrameRate","milliseconds","setInterval","canDoMore","stop","clearInterval","setColourMapFromName","InteractionEventNames","prompt","message","customUI","getTouchesPositions","touches","offsetLeft","offsetTop","target","offsetParent","positions","pageX","pageY","getEventOffset","targetTouches","changedTouches","offsetX","offsetY","canCreateCanvas","height","testCvs","document","createElement","cropCvs","testCtx","getContext","cropCtx","fillRect","drawImage","getImageData","_containerDiv","_viewController","_canvas","_offscreenCanvas","_context","_isValidPosition","_imageData","_baseSize","_baseSpacing","_opacity","_scale","_fitScale","_offset","_baseOffset","_viewOffset","_zoomOffset","_flipOffset","_needsDataUpdate","_imageSmoothingEnabled","_setBaseSize","_updateImageData","_onWLChange","_onColourChange","_onPositionChange","_onAlphaFuncChange","ViewLayer","containerDiv","_setBaseSize2","srclayerid","getId","draw","dims3D","indexScrollIndex","filter","clear","className","getDataIndex","enableImageSmoothing","setView","getViewController","getBaseSize","getOpacity","setOpacity","alpha","addFlipOffsetX","addFlipOffsetY","setScale","newScale","helper","orientedNewScale","finalNewScale","resetOffset","worldCenter","newOffset","getScaledOffset","newZoomOffset","setBaseOffset","scrollOffset","needsUpdate","setOffset","planeNewOffset","displayToPlaneIndex","planePos","displayToPlanePos","displayToPlaneScale","deScaled","planePosToDisplay","displayToMainPlanePos","display","style","isVisible","layerid","_updateImageData2","globalAlpha","setTransform","imageSmoothingEnabled","appendChild","alert","fitToContainer","fitScale1D","fitSize","fitOffset","needsDraw","previousFitScale","previousScale","newFitScale","newViewOffset","newFlipOffset","bindInteraction","pointerEvents","names","passive","unbindInteraction","save","clearRect","restore","createImageData","putImageData","_fontSize","_fontFamily","_textColour","_lineColour","_baseScale","_zoomScale","_strokeWidth","_shadowOffset","_tagOpacity","_textPadding","Style","getFontFamily","getFontSize","getStrokeWidth","getTextColour","getLineColour","setLineColour","setBaseScale","scale","setZoomScale","getBaseScale","getZoomScale","applyZoomScale","getShadowOffset","getTagOpacity","getTextPadding","getFontStr","getLineHeight","getScaledFontSize","getScaledStrokeWidth","getShadowLineColour","getShapeDisplayName","shape","displayName","Konva","points","_name","_layer","_parent","DrawGroupCommand","layer","getParent","_group2","_name2","_translation","_layer2","MoveGroupCommand","translation","move","minusTrans","_name3","_factory","_startAnchor","_endAnchor","_layer3","_style","ChangeGroupCommand","startAnchor","endAnchor","viewController","_group3","_name4","_layer4","_parent2","DeleteGroupCommand","isNodeNameShape","node","isNodeNameShapeExtra","isNodeNameLabel","isPositionNode","isNodeWithId","canNodeChangeColour","_konvaLayer","_currentPosGroupId","DrawController","konvaLayer","getCurrentPosGroup","posGroups","getChildren","posGroup","visible","reset","findOne","activateDrawLayer","getDrawDisplayDetails","groups","lenj","collec","text","shapeExtrakids","closed","extraName0","color","stroke","getDrawStoreDetails","drawingsDetails","posKids","anchors","texts","setDrawings","drawings","statePosGroups","statePosGroup","statePosKids","stateGroup","cmd","details","getText","setText","textExpr","quantification","updateDraw","drawDetails","shapes","shapesExtra","shadowColor","kids","setVisible","deleteDrawGroup","shapeDisplayName","deleteDraw","deleteDraws","_konvaStage","_drawController","_updateLabelScale","DrawLayer","getKonvaStage","getKonvaLayer","getLayers","getDrawController","setPlaneHelper","opacity","_updateLabelScale2","container","listening","getContent","setAttribute","isGroupVisible","toogleGroupVisibility","ratioX","ratioY","labels","getLayerDetailsFromEvent","layerDiv","closest","idString","groupDivId","layerId","getLayerDetailsFromLayerDivId","indexCenter","_layers","_activeViewLayerIndex","_activeDrawLayerIndex","_showCrosshair","_updateCrosshairOnChange","_bindViewLayer","_bindDrawLayer","_getNextLayerDiv","_showCrosshairDiv","_removeCrosshairDiv","LayerGroup","_showCrosshairDiv2","updateLayersToPositionChange","baseViewLayerOrigin0","baseViewLayerOrigin","hasSetOffset","vc","origin0","scrollDiff","planeDiff","hasSetPos","setTargetOrientation","getShowCrosshair","setShowCrosshair","_removeCrosshairDiv2","getDivId","getScale","getAddedScale","getOffset","getNumberOfLayers","getActiveViewLayer","getViewLayersByDataIndex","searchViewLayers","getViewDataIndices","getActiveDrawLayer","getDrawLayersByDataIndex","setActiveViewLayer","setActiveViewLayerByDataIndex","setActiveDrawLayer","setActiveDrawLayerByDataIndex","addViewLayer","viewLayerIndex","div","_getNextLayerDiv2","append","_bindViewLayer2","addDrawLayer","_bindDrawLayer2","empty","previous","getElementsByClassName","calculateFitScale","offsetWidth","offsetHeight","maxSize","getMaxSize","setFitScale","scaleIn","containerSize","flipScaleZ","addScale","scaleStep","addTranslation","viewLayer","drawLayer","layer0","p2D","displayPos","lineH","left","top","lineV","getElementById","binderList","WindowLevelBinder","layerGroup","viewLayers","PositionBinder","pointValues","currentPos","currentDims","inputDims","ZoomBinder","OffsetBinder","OpacityBinder","_layerGroups","_activeLayerGroupIndex","_binders","_callbackStore","_getBinderCallback","_addEventListeners","_removeEventListeners","Stage","getLayerGroup","getNumberOfLayerGroups","getActiveLayerGroup","addLayerGroup","htmlElement","isBound","unbindLayerGroups","bindLayerGroups","getLayerGroupByDivId","setBinders","syncLayerGroupScale","minScale","hasScale","_addEventListeners2","_removeEventListeners2","_getBinderCallback2","binder","binderObj","elem","getCallback","getEventType","_readV","_readV3","_readV5","_readV7","_readV9","State","toJSON","app","drawController","JSON","stringify","version","toObject","fromJSON","json","_readV2","_readV4","_readV6","_readV8","_readV10","baseScale","scaleCenter","originX","originY","oldTx","oldTy","render","v02DAndD","inputDrawings","newDrawings","drawGroups","drawGroup","lenk","lenf","newFrameDrawings","leng","kshape","ktick0","ktick1","karcs","ktexts","ktext","klabel","txtLen","quant","parseFloat","surface","angle","longText","v01Tov02DrawingsAndDetails","v02Tov03Drawings","v03Tov04DrawingsDetails","v04Tov05Data","v04Tov05Drawings","groupDetails","v02Tov03DrawingsDetails","groupShapes","parentGroup","groupDrawings","currentPosition","draggable","forEach","gnode","detail","children","ids","attrs","sliceNumber","frameNumber","newId","getUrlFromUri","uri","URL","window","location","splitUri","sepIndex","base","hashIndex","query","pairs","pair","splitKeyValueString","_stack","_curCmdIndex","UndoStack","getStackSize","getCurrentStackIndex","_this$curCmdIndex","command","_this$curCmdIndex2","redo","_this$curCmdIndex3","_toolList","_selectedTool","_boundLayers","_unbindLayer","_getOnMouch","ToolboxController","toolList","_getOnMouch2","getToolList","hasTool","getSelectedTool","getSelectedToolEventHandler","eventType","setSelectedTool","activate","setToolFeatures","setFeatures","bindLayer","layerGroupDivId","_unbindLayer2","applySelectedTool","_x1","_y1","augmentEventOffsets","MultiProgressHandler","_getGlobalPercent","_getItemProgress","_progresses","_numberOfDimensions","_callback","lengthComputable","subindex","percent","loaded","total","_getItemProgress2","source","_getGlobalPercent2","setNumberOfDimensions","num","setNToLoad","getMonoProgressHandler","onprogress","getUndefinedMonoProgressHandler","lenprog","getImage2DSize","rows","columns","TagValueExtractor","getTime","_elements","urlContentTypes","Text","ArrayBuffer","_inputData","_requests","_runningLoader","_nLoad","_nLoadend","_aborting","_storeInputData","_storeRequest","_clearStoredRequests","_storeLoader","_clearStoredLoader","_addLoad","_addLoadend","_augmentCallbackEvent","_getLoadHandler","_loadUrls","_loadDicomDir","UrlsLoader","_this$nLoad","onload","_this$nLoadend","onloadend","load","options","onloadstart","_loadDicomDir2","_loadUrls2","abort","readyState","isLoading","onloaditem","onerror","onabort","_storeInputData2","_clearStoredRequests2","_clearStoredLoader2","_storeRequest2","request","_storeLoader2","loader","_augmentCallbackEvent2","_getLoadHandler2","status","responseURL","statusText","response","mproghandler","loaders","loaderList","foundLoader","canLoadUrl","setOptions","defaultCharacterSet","lastRunRequestIndex","requestOnLoadEnd","send","XMLHttpRequest","open","requestHeaders","setRequestHeader","withCredentials","loadUrlAs","responseType","batchSize","dicomDirUrl","urls","parser","dirSeq","records","series","study","recType","refFileIds","join","getFileListFromDicomDir","rootUrl","fullUrls","ImageFactory","checkElements","pixelBuffer","size2D","frames","rowSpacing","columnSpacing","getPixelSpacing","jpeg2000","jpegBase","jpegLoss","imagePositionPatient","slicePosition","imageOrientationPatient","orientationMatrix","rowCosines","colCosines","normal","sopInstanceUid","siu","samplesPerPixel","spp","bufferSize","photometricInterpretation","photo","planarConfiguration","rescaleSlope","rescaleIntercept","sopClassUID","SOPClassUID","studyUID","StudyInstanceUID","seriesUID","SeriesInstanceUID","bits","pixelRep","PixelRepresentation","frameOfReferenceUID","FrameOfReferenceUID","windowCenter","windowWidth","windowCWExplanation","redLut","greenLut","blueLut","descriptor","doScale","descSize","vlSize","scaleTo8","equalPosPat","pos1","pos2","checkTag","rootElement","tagDefinition","tagValue","isArray","enum","RequiredDicomSegTags","getCode","code","meaning","longValue","urnValue","schemeDesignator","algorithmType","algorithmName","cielabElement","triplet","gammaFunc","ciexyzToSrgb","invLabFunc","illuminant","l0","cielabToCiexyz","cielabToSrgb","propertyCategoryCode","propertyTypeCode","trackingId","trackingUid","getSpacingFromMeasure","measure","pixelSpacing","getSegmentFrameInfo","groupItem","derivationImages","derivationImageSq","sourceImages","sourceImageSq","sourceImage","referencedSOPClassUID","referencedSOPInstanceUID","dimIndex","refSegmentNumber","imagePosPat","frameInfo","framePlaneOrientationSeq","frameImageOrientation","framePixelMeasuresSeq","frameSpacing","MaskFactory","framesElem","orgSq","orgUID","indices","indexSqElem","indexSq","indexPointer","indexOrg","DimensionOrganizationUID","DimensionIndexPointer","DimensionDescriptionLabel","organizations","getDimensionOrganization","segSequence","storeAsRGB","sharedFunctionalGroupsSeq","funcGroup0","planeOrientationSeq","pixelMeasuresSeq","includesPosPat","some","arrVal","findIndexPosPat","perFrameFuncGroupSequence","frameInfos","framePosPats","p1","p2","getComparePosPat","point3DFromArray","frameOrigins","newSpacing","tmpGeometry","isNotSmall","REAL_WORLD_EPSILON","posPats","frameOrigin","distPrevious","numberOfSlices","uids","getFindSegmentFunc","mul","sliceOffset","frameOffset","pixelValue","reqTag","getDefaultDicomSegJson","StudyDate","StudyTime","StudyID","SeriesNumber","ReferringPhysicianName","PatientName","PatientID","PatientBirthDate","PatientSex","Manufacturer","ManufacturerModelName","DeviceSerialNumber","SoftwareVersions","DimensionOrganizationSequence","DimensionIndexSequence","SOPInstanceUID","lossyImageCompression","LossyImageCompression","ThreadPool","poolSize","_stop","_stop2","onworkend","taskQueue","freeThreads","WorkerThread","runningThreads","addWorkerTask","workerTask","onworkstart","workerThread","shift","run","onTaskEnd","onwork","onworkitem","parentPool","itemNumber","runningTask","numberOfItems","dataIndex","handleWorkerError","random","worker","Worker","script","onmessage","postMessage","startMessage","terminate","WorkerTask","hasJpegBaselineDecoder","JpegImage","hasJpegLosslessDecoder","jpeg","lossless","hasJpeg2000Decoder","JpxImage","decoderScripts","rle","_script","_pool","_areCallbacksSet","AsynchPixelBufferDecoder","_numberOfData","pixelMeta","ondecodestart","ondecodeditem","ondecoded","ondecodeend","_algoName","_numberOfData2","_decodeCount","SynchPixelBufferDecoder","algoName","numberOfData","_this$decodeCount","decoder","decodedBuffer","buf","Decoder","decoded","getData","tiles","dwvdecoder","RleDecoder","_areCallbacksSet2","_pixelDecoder","PixelBufferDecoder","_options","_dicomParserStore","_finalBufferStore","_decompressedSizes","_factoryWarnings","_getFactory","_generateImage","_onDecodedItem","DicomBufferToView","opt","convert","dicomParser","warning","_getFactory2","algo","getSyntaxDecompressionName","needDecompression","columnsElement","rowsElement","samplesPerPixelElement","planarConfigurationElement","_onDecodedItem2","_generateImage2","decodedData","fullSize","_isLoading","_db2v","MemoryLoader","canLoadMemory","filename","imageDataToBuffer","imageData","dataLen","getDefaultImage","imageBuffer","imageSize","imageSpacing","_aborted","_createDataUri","_createDataUri2","dataType","imageType","file","Blob","createObjectURL","bytes","videoDataStr","btoa","_filename","_files","_zobjs","_zipAsyncCallback","_zipAsyncCallback2","content","unzipPercent","async","then","memoryIO","progress","canLoadFile","url","isDicom","urlObjext","pathname","hasNoExt","hasDcmExt","contentType","searchParams","mem","loadFileAs","fileContentTypes","_opt","isJson","u8Array","partHeaderEndCb","partHeaderEndIndex","lines","boundaryStr","boundaryCb","boundaryLen","nextBoundaryIndex","part","partHeaderLines","line","semiColonIndex","dataBeginIndex","dataEndIndex","parseMultipart","_file","isMultipart","_mem","domImage","canvas","ctx","lastModified","getViewFromDOMImage","src","isImage","hasImageExt","DataURL","video","onloadedmetadata","videoWidth","videoHeight","ceil","duration","onseeked","imgBuffer","storeFrame","nextTime","currentTime","getViewFromDOMVideo","isVideo","JSZip","zip","isZip","_readers","_storeReader","_clearStoredReaders","FilesLoader","FileReader","_storeReader2","readAsText","readAsDataURL","readAsArrayBuffer","_clearStoredReaders2","_currentLoaders","_counter","_getNextLoadId","_loadImageFiles","_loadImageUrls","_loadStateFile","_loadStateUrl","_loadData","LoadController","loadFiles","files","_loadStateFile2","_loadImageFiles2","loadURLs","_loadStateUrl2","_loadImageUrls2","loadImageObject","_loadData2","_getNextLoadId2","_this$counter","fileIO","urlIO","loadType","eventInfo","loadtype","loadId","loadid","isFirstItem","eventInfoItem","isfirstitem","_data","_getFireEvent","DataController","_getFireEvent2","addNew","dataToUpdate","idKey","obj1","obj2","valueKey","mergedObj1","merged","id1","id2","keys2","value1","subValue1","value2","subValue2","mergeObjects","_app","_wheelDeltaY","ScrollWheel","wheel","scrollMin","deltaMode","deltaY","up","layerDetails","_started","_scrollWhell","_touchTimerID","_displayTooltip","_showTooltip","_removeTooltipDiv","_showTooltip2","_removeTooltipDiv2","span","parentElement","createTextNode","i18n","t","props","mm","cm2","degree","_begin","_end","Line","begin","getBegin","getEnd","getDeltaX","getDeltaY","getWorldLength","spacingX","spacingY","wlen","dxs","dys","getMidpoint","getInclination","atan2","PI","quantify","getAngle","line0","line1","dx0","dy0","dx1","dy1","dot","getPerpendicularLine","beginX","beginY","endX","endY","dx","getStats","includesFullStatsFlags","stats","getSimpleStats","median","getPercentile","p25","p75","getFullStats","sumSqr","variance","stdDev","ratio","i0","v0","guid","getDefaultAnchor","radius","absRadius","strokeWidth","strokeScaleEnabled","radiusX","radiusY","dragOnTop","_shapeFactoryList","_currentFactory","_shape","_isActive","_drawEventCallback","_applyFuncToAnchors","_setAnchorsVisible","_removeAnchors","_addAnchors","_getClone","_setAnchorOn","_setAnchorOff","ShapeEditor","setFactoryList","setShape","inshape","_removeAnchors2","isFactoryGroup","_addAnchors2","setViewController","getShape","isActive","setDrawEventCallback","enable","_setAnchorsVisible2","getLayer","disable","resetAnchors","setAnchorsActive","anchor","_setAnchorOn2","_setAnchorOff2","_applyFuncToAnchors2","getAnchors","getStyle","_getClone2","parent","on","cancelBubble","evt","stageSize","boundNodePosition","validateAnchorPosition","chgcmd","addToUndoStack","moveToTop","_shapeEditor","_trash","_command","_tmpShapeGroup","_shapeName","_points","_lastPoint","_activeShapeGroup","_originalCursor","_mouseOverCursor","_onNewPoints","_onFinalPoints","_updateDrawLayer","_activateCurrentPositionShapes","_setShapeOff","_getRealPosition","_resetActiveShapeGroup","_onNewPoints2","tmpPoints","destroy","_onFinalPoints2","finalPoints","finalShapeGroup","setShapeOn","_updateDrawLayer2","_activateCurrentPositionShapes2","shapeGroups","_setShapeOff2","shapeGroup","_getRealPosition2","stage","_resetActiveShapeGroup2","body","cursor","ashape","changed","ROI","getPoint","addPoint","addPoints","RoiFactory","getNPoints","getTimeout","roi","fontSize","fontFamily","px","py","kroi","textPos","_blurRadius","_simplifyTolerant","_simplifyCount","_imageInfo","_initialthreshold","_currentthreshold","_shapeGroup","_initialpoint","_border","_parentPoints","_extender","_painterTimeout","_getCoord","_calcBorder","_paintBorder","_calcBorder2","threshold","simple","MagicWand","cs","icsl","_paintBorder2","Path","inputPointArray","inputControlPointIndexArray","pointArray","controlPointIndexArray","isControlPoint","addControlPoint","newPointArray","appenPath","other","oldSize","indexArray","BucketQueue","cost_functor","bucketCount","loc","cost","buckets","buildArray","bucket","getBucket","ret","isEmpty","newSize","__twothirdpi","gradUnitVector","gradX","gradY","out","oy","gvm","_costFunction","Scissors","searchGran","curPoint","searchGranBits","pointsPerPost","greyscale","laplace","gradient","parents","working","trained","trainingPoints","edgeWidth","trainingLength","edgeGran","edgeTraining","gradPointsNeeded","gradGran","gradTraining","insideGran","insideTraining","outsideGran","outsideTraining","getTrainingIdx","granularity","getTrainedEdge","edge","getTrainedGrad","grad","getTrainedInside","inside","getTrainedOutside","outside","setWorking","setDimensions","setData","dy","gradMagnitude","lap","computeGreyscale","computeLaplace","computeGradient","computeGradX","computeGradY","sides","guv","ix","iy","computeSides","findTrainingPoints","resetTraining","doTraining","calculateTraining","addInStaticGrad","input","output","maxVal","idx","len","gaussianBlur","have","need","gradDirection","qx","qy","__dgpuv","__gdquv","dp","dq","SQRT1_2","acos","dir","adj","sx","sy","ex","ey","setPoint","sp","visited","MAX_VALUE","pq","doWork","timeout","pointCount","newPoints","adjList","q","pqCost","_path","_currentPath","_tolerance","_clearParentPoints","_clearPaths","_scissors","_finishShape","_clearParentPoints2","_clearPaths2","_finishShape2","_centre","_radius","Circle","centre","getRadius","getSurface","getWorldSurface","mulABC","centerX","centerY","rSquare","maxY","transX","quantif","_updateCircleQuantification","_getShadowCircle","_updateCircleQuantification2","kcircle","centerPoint","circle","_a","_b","Ellipse","getA","getB","radiusRatio","rySquare","_updateEllipseQuantification","_getShadowEllipse","_updateEllipseQuantification2","kellipse","ellipse","Rectangle","getRealWidth","getRealHeight","getHeight","_updateRectangleQuantification","_getShadowRectangle","_updateRectangleQuantification2","krect","p2d0","p2d1","rect","_min","_max","_originalImage","Threshold","getMin","setMin","getMax","setMax","setOriginalImage","getOriginalImage","imageMin","_originalImage2","Sharpen","_originalImage3","Sobel","_filterList","_selectedFilter","_app2","_filter","_resetImage","_listenerHandler2","_fireEvent2","_app3","_listenerHandler3","_fireEvent3","_app4","_listenerHandler4","_fireEvent4","_filter2","_app5","RunFilterCommand","setLastImage","x0","y0","diffX","diffY","pixelToIntensity","manual","WL","mouseup","mousedown","mousemove","context","onKeydown","_bool","Scroll","yMove","xMove","setTimeout","dblclick","clearTimeout","features","displayTooltip","ZoomAndPan","point0","point1","midPoint","tx","ty","lineRatio","zoom","twotouchdown","twotouchmove","step","Opacity","op","Draw","getIntersection","selectedShape","timer","trashLine1","trashLine2","lineColour","mouseOnShape","dragStartPos","invscale","anchorMin","minX","minY","getAnchorMin","validateGroupPosition","updateQuantification","eventPos","trashHalfWidth","scaleX","trashHalfHeight","scaleY","tshape","mvcmd","groupId","onSaveCallback","openRoiDialog","getOptionsType","shapeColour","shapeName","hasShape","mouseOverCursor","getEventNames","listener","Filter","bool","getSelectedFilter","filterName","hasFilter","args","runArgs","getFilterList","Floodfill","getAbsoluteScale","onThresholdChange","movedpoint","modifyThreshold","setExtend","getExtend","extend","ini","jl","bl","setPoints","Livewire","pn","p0","results","_p","_q","toolOptions","ArrowFactory","linePerp0","linePerp1","hitFunc","beginPath","moveTo","lineTo","closePath","fillStrokeShape","beginTy","verticalLine","angleRad","kpoly","sin","cos","rotation","padding","shadowOffset","dX","dY","kline","ktriangle","bx","by","p2b","p2e","CircleFactory","right","bottom","EllipseFactory","ellipseX","ellipseY","topLeft","topRight","bottomRight","bottomLeft","radiusAbs","FreeHandFactory","tension","ProtractorFactory","pointsArray","inclination","midX","midY","karc","innerRadius","outerRadius","mid","mx","my","p2d2","arcPos","RectangleFactory","rectangle","rectX","rectY","rectWidth","rectHeight","kshadow","RulerFactory","tickLen","ThresholdFilter","getLastImage","_args","SobelFilter","SharpenFilter","_dataController","_toolboxController","_loadController","_stage","_undoStack","_getViewConfigs","_createLayerGroups","_onloadstart","_onloadprogress","_onloaditem","_onload","_onloadend","_onloaderror","_onloadabort","_bindLayerGroupToApp","_initialiseBaseLayers","_addViewLayer","App","getUriQuery","onLoadEnd","state","protocol","host","decodeURIComponent","manifest","rootURL","getElementsByTagName","getAttribute","patientList","studyList","seriesList","instanceList","link","decodeManifest","responseXML","decodeManifestQuery","replaceMode","repeatKeyReplaceMode","queryUri","inputQueryPairs","repeatKey","repeatList","baseUrl","gotOneArg","decodeKeyValueUri","dwvReplaceMode","decodeQuery","ctrlKey","shiftKey","isFirstLoadItem","eventMetaData","_getViewConfigs2","viewOnFirstLoadItem","addNewImage","getMetaData","getNumberOfLoadedData","getToolboxController","divId","tools","appToolList","toolName","toolParams","appToolOptions","optionName","optionClassName","toolNamespace","charAt","binders","resetLayout","abortLoad","initWLDisplay","getDataViewConfig","dataViewConfigs","setDataViewConfig","configs","_createLayerGroups2","setLayerGroupsBinders","instances","viewConfigs","_initialiseBaseLayers2","_addViewLayer2","cx","cy","translate","getState","resetDisplay","resetZoom","setTool","tool","dataKeys","divIds","dataConfigs","viewConfig","_bindLayerGroupToApp2","dataViewConfig","imageGeometry","getViewOrientation","isBaseLayer","spacing2D","onimageset","onimagechange","major","DataWriter","writeUint8","setUint8","writeInt8","setInt8","writeUint16","setUint16","writeInt16","setInt16","writeUint32","setUint32","writeUint64","setBigUint64","writeInt32","setInt32","writeInt64","setBigInt64","writeFloat32","setFloat32","writeFloat64","setFloat64","writeHex","writeBinaryArray","byte","writeUint8Array","writeInt8Array","writeUint16Array","writeInt16Array","writeUint32Array","writeUint64Array","writeInt32Array","writeInt64Array","writeFloat32Array","writeFloat64Array","_uidCount","getUID","prefix","getDwvUIDPrefix","datePart","Date","toISOString","countPart","nonTagLength","tagNumber","isEven","isStringVr","uint8ArrayPush","newArr","DefaultTextEncoder","encode","_useUnVrForPrivateSq","_actions","_defaultRules","_rules","_defaultTextEncoder","_textEncoder","_encodeString","_encodeSpecialString","_getElementToWrite","_writeDataElementItems","_writeDataElementValue","_writePixelDataElementValue","_writeDataElement","_setElementValue","DicomWriter","default","action","setUseUnVrForPrivateSq","setRules","rules","useSpecialTextEncoder","TextEncoder","useDefaultAnonymisationRules","Acquisition","Procedure","isBigEndian","oldscs","totalSize","localSize","metaElements","rawElements","groupName","metaLength","fmiglTag","fmivTag","icUIDTag","ivnTag","originalElement","_getElementToWrite2","checkUnknownVR","_setElementValue2","fmiv","getDicomElement","fmivSize","icUID","icUIDSize","ivn","ivnSize","elemSortFunc","tagCompareFunction","fmigl","fmiglSize","metaWriter","dataWriter","_encodeString2","_writeDataElement2","metaOffset","_encodeSpecialString2","rule","_writeDataElementItems2","writer","itemKeys","itemElement","itemDelimElement","_writeDataElementValue2","hexString","hexString1","hexString2","atValue","_writePixelDataElementValue2","finalValue","initialArray","initialArrayLength","arrayLength","flattenendArrayLength","flattenedArray","indexFlattenedArray","flattenArrayOfTypedArrays","isTagWithVR","undefinedLengthSequence","undefinedLengthItem","seqDelimElement","newItems","oldItemElements","newItemElements","subSize","itemKey","padStr","pad","getVrPad","padOBValue","isTypedArrayVr","itemPrefixSize","getBpeForVrType","dictVr","getElementsFromJSONTags","jsonTags","jsonTag","dicomElement"],"sourceRoot":""}